                                                                                              NIST SP 800-204B                                                   ABAC FOR MICROSERVICES-BASED
                                                                                                                                                               APPLICATIONS USING A SERVICE MESH

                                                                                              3     Attribute-based Access Control (ABAC) â€“ Background

                                                                                              Attribute-based access control (ABAC) is an authorization framework or engine that computes
                                                                                              decisions for user access requests based on attributes (properties) of users (subjects), application
                                                                                              objects (resources), and the environment and policies expressed in terms of the attributes [5]. The
                                                                                              advantages of ABAC for microservices-based applications using service mesh include:

                                                                                              1. Cloud-native applications span different domains and require increased precision in specifying
                                                                                              policy by considering a large set of variables (i.e., multiple attributes and their associated
                                                                                              values). Because of its scalability with respect to attribute-value stores and associated policies,
This publication is available free of charge from: https://doi.org/10.6028/NIST.SP.800-204B




                                                                                              ABAC can meet this requirement. Attributes and their values associated with subjects are
                                                                                              assigned by system administrators, while those associated with application objects and
                                                                                              environment are independently assigned by developers.

                                                                                              2. A policy is a logical expression that involves the attributes of the subject, object, and
                                                                                              environment with an allowed/prohibited verdict attached to it. Policies based on the attributes do
                                                                                              not create a tight relationship between a particular instance of a subject and an instance of an
                                                                                              object, since attributes associated with them can take on any values and may change over time.
                                                                                              The access decision to allow or disallow the request will be entirely dictated by the values of
                                                                                              attributes associated with the instances at the time of the request.

                                                                                               3. Policies are expressed in terms of attributes without prior knowledge of potentially numerous
                                                                                              users and resources that are or will be governed under those policies, and users and resources are
                                                                                              independently assigned attribute values without knowledge of policy details. This dual feature
                                                                                              enables access decisions on user requests to be based on centralized, enterprise-wide policies
                                                                                              while also supporting the DevSecOps approach that provides autonomy to each microservice
                                                                                              development team to make all decisions regarding their subset of applications (i.e.,
                                                                                              microservice), including the assignment of attribute values to their application objects.

                                                                                              Due to the features described above, the ABAC authorization framework is a natural fit for the
                                                                                              class of cloud-native applications whose design is based on microservices (with each being
                                                                                              developed and deployed by independent teams).

                                                                                              The ABAC framework has two standardized, representational structures.
                                                                                              1. One uses a platform-neutral text-based language called eXtensible Access Control Markup
                                                                                                 Language (XACML) Version 3.0, which has been standardized by Open Artwork System
                                                                                                 Interchange Standard (OASIS).
                                                                                              2. The other is Next Generation Access Control (NGAC), whose data structure and operations
                                                                                                 have been standardized under InterNational Committee for Information Technology
                                                                                                 (INCITS) 565-2020 [11]. This standardization includes the APIs of functional components
                                                                                                 (i.e., PEP, PDP, and Resource Access Point (RAP)), allowing for the interoperability of these
                                                                                                 components from different sources. Furthermore, the PEP interface is common for enforcing
                                                                                                 policies over both application requests and policy administration requests. The biggest
                                                                                                 advantage of NGAC is the use of linear time algorithms for computing access control
                                                                                                                                               9
