NIST SP 800-218                                                                                                                                                                                                                                                           SSDF VERSION 1.1


                    Practices                                                 Tasks                                                   Notional Implementation Examples                                                                      References
                                                                                                                 Example 7: Identify and document the root causes of discovered issues.              SCFPSSD: Use Code Analysis Tools to Find Security Issues Early, Use Static Analysis
                                                                                                                 Example 8: Document lessons learned from code review and analysis in a wiki         Security Testing Tools, Perform Manual Verification of Security Features/Mitigations
                                                                                                                 that developers can access and search.                                              SCSIC: Peer Reviews and Security Testing
                                                                                                                                                                                                     SP80053: SA-11, SA-11(1), SA-11(4), SA-15(7)
                                                                                                                                                                                                     SP800161: SA-11, SA-11(1), SA-11(4), SA-15(7)
                                                                                                                                                                                                     SP800181: SP-DEV-001, SP-DEV-002; T0013, T0111, T0176, T0267, T0516; K0009,
                                                                                                                                                                                                     K0039, K0070, K0140, K0624; S0019, S0060, S0078, S0137, S0149, S0167, S0174,
                                                                                                                                                                                                     S0242, S0266; A0007, A0015, A0036, A0044, A0047
 Test Executable Code to Identify                    PW.8.1: Determine whether executable code testing           Example 1: Follow the organization’s policies or guidelines for when code testing   BSAFSS: TV.3
 Vulnerabilities and Verify Compliance with          should be performed to find vulnerabilities not             should be performed and how it should be conducted (e.g., within a sandboxed        BSIMM: PT2.3
 Security Requirements (PW.8): Help identify         identified by previous reviews, analysis, or testing and,   environment). This may include third-party executable code and reusable             EO14028: 4e(ix)
 vulnerabilities so that they can be corrected       if so, which types of testing should be used.               executable code modules written in-house.
 before the software is released in order to                                                                                                                                                         IEC62443: SVV-1, SVV-2, SVV-3, SVV-4, SVV-5
                                                                                                                 Example 2: Choose testing methods based on the stage of the software.
 prevent exploitation. Using automated methods                                                                                                                                                       NISTLABEL: 2.2.2.2
 lowers the effort and resources needed to detect                                                                                                                                                    SCSIC: Peer Reviews and Security Testing
 vulnerabilities and improves traceability and                                                                                                                                                       SP80053: SA-11
 repeatability. Executable code includes binaries,                                                                                                                                                   SP800161: SA-11
 directly executed bytecode and source code,
                                                                                                                                                                                                     SP800181: SP-DEV-001, SP-DEV-002; T0456; K0013, K0039, K0070, K0153, K0165,
 and any other form of code that an organization
                                                                                                                                                                                                     K0342, K0367, K0536, K0624; S0001, S0015, S0026, S0061, S0083, S0112, S0135
 deems executable.
                                                     PW.8.2: Scope the testing, design the tests, perform        Example 1: Perform robust functional testing of security features.                  BSAFSS: TV.3, TV.5, PD.1-4
                                                     the testing, and document the results, including            Example 2: Integrate dynamic vulnerability testing into the project’s automated     BSIMM: ST1.1, ST1.3, ST1.4, ST2.4, ST2.5, ST2.6, ST3.3, ST3.4, ST3.5, ST3.6, PT1.1,
                                                     recording and triaging all discovered issues and            test suite.                                                                         PT1.2, PT1.3, PT3.1
                                                     recommended remediations in the development                 Example 3: Incorporate tests for previously reported vulnerabilities into the       EO14028: 4e(iv), 4e(v), 4e(ix)
                                                     team’s workflow or issue tracking system.                   project’s test suite to ensure that errors are not reintroduced.                    IDASOAR: 7, 8, 10, 11, 38, 39, 43, 44, 48, 55, 56, 57
                                                                                                                 Example 4: Take into consideration the infrastructures and technology stacks        IEC62443: SM-5, SM-13, SI-1, SVV-1, SVV-2, SVV-3, SVV-4, SVV-5
                                                                                                                 that the software will be used with in production when developing test plans.       IR8397: 2.6, 2.7, 2.8, 2.9, 2.10, 2.11
                                                                                                                 Example 5: Use fuzz testing tools to find issues with input handling.               ISO27034: 7.3.6
                                                                                                                 Example 6: If resources are available, use penetration testing to simulate how an   MSSDL: 10, 11
                                                                                                                 attacker might attempt to compromise the software in high-risk scenarios.
                                                                                                                                                                                                     NISTLABEL: 2.2.2.2
                                                                                                                 Example 7: Identify and record the root causes of discovered issues.
                                                                                                                                                                                                     OWASPMASVS: 7.5
                                                                                                                 Example 8: Document lessons learned from code testing in a wiki that
                                                                                                                 developers can access and search.                                                   OWASPSAMM: ST1-A, ST1-B, ST2-A, ST2-B, ST3-A
                                                                                                                 Example 9: Use source code, design records, and other resources when                PCISSLC: 4.1
                                                                                                                 developing test plans.                                                              SCAGILE: Operational Security Tasks 10, 11; Tasks Requiring the Help of Security Experts
                                                                                                                                                                                                     4, 5, 6, 7
                                                                                                                                                                                                     SCFPSSD: Perform Dynamic Analysis Security Testing, Fuzz Parsers, Network
                                                                                                                                                                                                     Vulnerability Scanning, Perform Automated Functional Testing of Security
                                                                                                                                                                                                     Features/Mitigations, Perform Penetration Testing
                                                                                                                                                                                                     SCSIC: Peer Reviews and Security Testing
                                                                                                                                                                                                     SP80053: SA-11, SA-11(5), SA-11(8), SA-15(7)
                                                                                                                                                                                                     SP800161: SA-11, SA-11(5), SA-11(8), SA-15(7)
                                                                                                                                                                                                     SP800181: SP-DEV-001, SP-DEV-002; T0013, T0028, T0169, T0176, T0253, T0266,
                                                                                                                                                                                                     T0456, T0516; K0009, K0039, K0070, K0272, K0339, K0342, K0362, K0536, K0624;
                                                                                                                                                                                                     S0001, S0015, S0046, S0051, S0078, S0081, S0083, S0135, S0137, S0167, S0242;
                                                                                                                                                                                                     A0015




                                                                                                                                                15
