                                                                                             NIST SP 800-192                                                       VERIFICATION & TEST METHODS FOR
                                                                                                                                                                   ACCESS CONTROL POLICIES/MODELS

                                                                                             added for the next run of model checking. Confinement check should discover the discrepancy of
                                                                                             the specified safety requirement and the safety requirement the AC policy author intend. The
                                                                                             rationale is that if the model does not satisfy the modified safety requirement, then there are
                                                                                             exceptional access permissions that leak through the safety requirement.

                                                                                             Figure 9 shows a transition to an unspecified state for a certain range of data values that allow
                                                                                             exceptional permission not covered by a specified safety requirement because the value of access
                                                                                             when u value is different than i (such as u = j) also grants access permission by the rule otherwise
                                                                                             : grant. This fault can be caught by a counterexample AG (u == j) → access = grant when checking
                                                                                             the model against the additional confinement property ¬AG (u == i) → access = deny derived from
                                                                                             original property AG (u == i) → access = grant. The additional model checking for confinement
                                                                                             verification informs the AC policy authors which safety requirement is not confined so that the AC policy
This publication is available free of charge from: https://doi.org/10.6028/NIST.SP.800-192




                                                                                             author can add new rules to enforce the safety of the model. As in this case, changing the rule otherwise
                                                                                             : grant to otherwise : deny and adding all granted rules in the state will correct the problem.



                                                                                                          NEXT_STATE(u):= CASE {
                                                                                                           x==s :i
                                                                                                           x==t :j

                                                                                                           ….

                                                                                                         NEXT_STATE(access):= CASE {
                                                                                                           u== k : deny
                                                                                                           ……
                                                                                                         Otherwise grant
                                                                                                         }


                                                                                                        …….
                                                                                                        AG (u == i) → access = grant      Addition      ¬AG (u == i) → access = deny




                                                                                                                              Figure 9 Unconfined rule in a property


                                                                                             Note that it is possible the AC policy author intentionally allowed the exception for a safety
                                                                                             requirement, and it is necessary to check every safety requirement against the set of rules in the
                                                                                             model to achieve thorough verification.

                                                                                             4.3   Implementation Test

                                                                                             Black box model checking and white box mutation test provide methods for verifying the correct
                                                                                             model representation of the policy. Once a model is verified, the AC mechanism can be
                                                                                             implemented based on the design of the model and additional constraints if needed. Usually AC
                                                                                             mechanisms are code developed in a language the AC system supports, for example dedicated AC
                                                                                             language such as XACML [XACML] is commonly used for AC code implementation. AC
                                                                                             implementation can be error prone. As the AC model is directly implemented by an algorithm, the
                                                                                             errors are often caused by syntactic faults, such as mistakenly changing the + sign to – sign, or
                                                                                             typing a letter O instead of 0.

                                                                                                                                                21
