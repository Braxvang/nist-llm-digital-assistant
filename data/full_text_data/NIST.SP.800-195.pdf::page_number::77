RESEARCH IN EMERGING                                                                 detect or prevent security flaws while still supporting the
                                                                                     quick-paced software development of applications with
TECHNOLOGIES
                                                                                     rich feature sets. Through the demonstration of security-
                                                                                     flaw avoidance in a time-constrained setting, CSD would
S e c u r e D e v e l o p m e n t To o l c h a i n                                   seek to show that wide-scale improvements in the overall
Competitions                                                                         security of software products could be realized without
                                                                                     sacrificing a time-to-market goal. The competitions, which
    Many security weaknesses in federal information
                                                                                     would be open to all interested parties, would aim to provide
systems stem from software security vulnerabilities induced
                                                                                     consistent application and measurement of commercial and
by software flaws present in current-generation software
                                                                                     research software development, composition, and reuse
products. CSD tracks software security vulnerabilities (in
                                                                                     techniques.
the National Vulnerability Database), and seeks techniques
for the measurement of security vulnerabilities and                                       In FY 2016, CSD partially reformulated the existing
techniques that reduce the impact and prevalence of                                  toolchain testing infrastructure to mitigate test infrastructure
security vulnerabilities in newly developed products or in                           reliability problems uncovered by a dry run of the competition
new versions of existing products.                                                   and by subsequent inspections. A key part of this
                                                                                     reformulation was the consolidation of multiple operating
    One approach to reducing the number of security
                                                                                     systems into a single operating system for all components.
vulnerabilities in software is to improve the development
                                                                                     Additionally, CSD developed an installation guide to assist
tools that are available. By identifying languages and
                                                                                     with the building, installing, and operating of the toolchain
software development tools that support a reduction of
                                                                                     testing infrastructure. The current infrastructure uses several
vulnerabilities, and by stimulating the creation of better
                                                                                     third-party components and concurrently-running virtual
tools and tool usage techniques, the approach should help
                                                                                     machines. The installation guide describes the required
developers produce applications with fewer vulnerabilities.
                                                                                     system configurations, account provisioning on local hosts,
While it is impossible to assure the total absence of security
                                                                                     installation and integration of third-party components
vulnerabilities in this way, it might well be possible to rule out
                                                                                     and packages, and the network configuration. An updated
specific, significant classes of vulnerabilities that currently
                                                                                     version of these elements as well as a document describing
provide the basis for many serious exploits.
                                                                                     the manual steps for performing simplified, script-oriented
     CSD is developing an empirical, competitive approach                            testing in the absence of a continuous integration system
to finding the most effective and usable combinations of                             was also developed.
tools to produce software systems that are relatively free
                                                                                         In FY 2017, CSD plans to substantially simplify portions
of exploitable vulnerabilities. Multiple competitions are
                                                                                     of the testing infrastructure to improve reliability and
planned that will be based on an idea developed during
                                                                                     reproducibility, to perform a second round of testing, and to
the Designing a Secure Systems Engineering Competition
                                                                                     publicly announce the first toolchain competition.
Workshop that was conducted by the National Science
Foundation in 2010. The workshop proposed a competition                              C O N TAC T S :
for the development of a set of tools to help non-security-
                                                                                     Mr. Lee Badger		           Mr. Christopher Johnson
expert developers to rapidly build a significant application
                                                                                     (301) 975-3176		           (301) 975-3247
with zero vulnerabilities, as detected by an extensive public
                                                                                     lee.badger@nist.gov        christopher.johnson@nist.gov
test suite.
    The participants in the planned competitions would
implement software systems to solve challenge problems                               Networks of “Things”
using software development tool chains (“toolchains”)                                      The Internet of Things (IoT) increasingly appears to
of their own choosing, within specified time periods. The                            be the next great technology revolution. It is expected to
toolchains may include existing technologies (e.g., existing                         impact everything from healthcare delivery, to how food is
software libraries and frameworks, code generators, reusable                         produced, to how we work, to all forms of transportation and
source code, or bug-finding tools), novel technologies, or any                       communication, and to virtually all forms of automation. IoT
combination thereof. Each competition would apply a time                             will impact everyone, and in multiple ways.
pressure by simulating a deadline in the software development
                                                                                         With a technology revolution of such large impact
process, increasing the likelihood of an introduction of
                                                                                     on society, it is imperative that IoT-based systems can be
security flaws. The objective of the toolchains would be to
                                                                                     trusted. This means that they should exhibit secure, reliable,         69



T H I S P U B L I C AT I O N I S AVA I L A B L E F R E E O F C H A R G E F R O M :        PROGRAM AND PROJECT ACHIEVEMENTS                    |   FY 2016
h t t p : // d x . d o i . o r g / 1 0 . 6 0 2 8 / N I S T . S P. 8 0 0 - 1 9 5
