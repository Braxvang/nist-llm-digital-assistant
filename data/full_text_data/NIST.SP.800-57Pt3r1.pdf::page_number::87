Appendix C: A Word to Novice End Users
Cryptographic keys are frequently categorized by the algorithms they are used with, the
operations they are used to perform and by the number of times they can be used. Keys
will either be asymmetric and used with an asymmetric algorithm, or symmetric and used
with a symmetric algorithm. Asymmetric keys are generated as key pairs: a private key
that must be kept secret, and a related public key, that may not be a secret. In general, the
private key performs one operation, for example, a digital signature, and the public key
does the complementary operation, in this case, signature verification. In the case of
symmetric keys, end users need to treat the key as a secret shared value and use the same
value for complementary cryptographic functions, such as encryption and decryption.

Some asymmetric keys are static and intended for long-term use, while others are
ephemeral and expire after their use with one message or session. The public key of a
static asymmetric-key pair is often provided in a public-key certificate, while an
ephemeral public key is not. Although the concept of static vs. ephemeral also applies to
symmetric keys, a short-term symmetric key is often called a session key, rather than an
ephemeral key. No specific terminology is used for a long-term symmetric key. An
application or protocol may be supported by some combination of such keys.

A PKI is the foundation of many current key-management processes and is used in many
of the protocols or applications described in this Recommendation, as well as other
security protocols and applications. Some understanding of the role of a PKI and public
key certificates in key management is very helpful to setting up security protocols or
applications properly. A long-term, or “static” public key is generally combined with the
name of the key’s “owner” in an electronic document called a public-key certificate.
While certificates can be self-issued and signed (that is, the party that created the key pair
can sign his name and the public key with the corresponding private key), most
certificates are digitally signed with the private key of a trusted entity called a
Certification Authority.

An end user may typically have one or more certificates, and may have different
certificates for different applications, e.g., for e-mail and for authentication to web sites.
As Federal Personal Identity Verification (PIV) cards are issued to federal employees and
contractors, most federal users will have a personal smart card that contains one or more
personal certificates issued to them by their agency. Other specific applications may
require “soft” certificates, usually kept on the user’s computer, and possibly issued by
commercial CAs. For example, browser products, such as Internet Explorer, Firefox or
Safari, typically implement a mechanism to generate key pairs, send the public keys to a
CA and return a public-key certificate for that key to the browser. The certificates are
then kept in a user-certificate store on the user’s computer, which can be managed in a
manner similar to a root-certificate store (see Section 2). The process and interfaces for
generating keys, and for requesting, downloading and installing certificates are specific to
both the individual user client product and, sometimes, to the CA itself; however, the
websites of CAs often have pages that guide the user through the key generation and
certificate issuance process for the common browser products. Users can share
certificates via e-mail or public-key infrastructures, smart cards or other memory tokens.


                                             79
