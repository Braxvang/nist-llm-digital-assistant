                                                                                             NIST SP 800-208                                                              RECOMMENDATION FOR STATEFUL
                                                                                                                                                                         HASH-BASED SIGNATURE SCHEMES

                                                                                             As described in Section 7, the use of two levels of trees can make it easier to distribute OTS keys
                                                                                             across multiple cryptographic modules in order to protect against private key loss. A set of OTS
                                                                                             keys can be created in one cryptographic module, and the root of the Merkle tree formed from
                                                                                             these keys can be published as the public key for the signature scheme. OTS keys can then be
                                                                                             created on multiple other cryptographic modules with a separate Merkle tree created for the OTS
                                                                                             keys of each of the other cryptographic modules, and a different OTS key from the first
                                                                                             cryptographic module can be used to sign each of the roots of the other cryptographic modules.

                                                                                                                                               roota
This publication is available free of charge from: https://doi.org/10.6028/NIST.SP.800-208




                                                                                                                                        ka,0 ka,1 ka,2 ka,3



                                                                                                         rootb,0                   rootb,1                   rootb,2                  rootb,3




                                                                                                   kb,0 kb,1 kb,2 kb,3     kb,4 kb,5 kb,6 kb,7         kb,8 kb,9 kb,10 kb,11   kb,12 kb,13 kb,14 kb,15

                                                                                                                                Figure 5: A two-Level Merkle tree

                                                                                             While there are benefits in the use of a two-level tree, it results in larger signatures and slower
                                                                                             signature verification as each message signature will need to include two OTS signatures. For
                                                                                             example, if a message were signed using OTS key kb,6 in Figure 5, the signature would need to
                                                                                             include the signature on rootb,1 using ka,1 in addition to the signature on the message using kb,6.

                                                                                             3.4    Prefixes and Bitmasks

                                                                                             In order to strengthen the security of the schemes in both XMSS and LMS, a prefix is prepended
                                                                                             whenever a value is hashed. For example, when computing the public key for a Winternitz
                                                                                             signature from the private key in LMS as described in Section 3.1, rather than just computing
                                                                                             𝑝𝑝𝑝𝑝𝑝𝑝𝑘𝑘 = 𝐻𝐻 3 (𝑥𝑥𝑘𝑘 ) = 𝐻𝐻 �𝐻𝐻�𝐻𝐻(𝑥𝑥𝑘𝑘 )��, the public key is computed as 𝑝𝑝𝑝𝑝𝑝𝑝𝑘𝑘 =
                                                                                             𝐻𝐻 �𝑝𝑝3 || 𝐻𝐻�𝑝𝑝2 || 𝐻𝐻(𝑝𝑝1 || 𝑥𝑥𝑘𝑘 )��, where p1, p2, and p3 are each different prefix values. The prefix is
                                                                                             formed by concatenating together various pieces of information, including a unique identifier for
                                                                                             the long-term public key and an indicator of the purpose of the hash (e.g., Winternitz chain or
                                                                                             Merkle tree). If the hash is part of a Winternitz chain, then the prefix also includes the number of
                                                                                             the OTS key, which digit of the digest or checksum is being signed, and where in the chain the
                                                                                             hash appears. The goal is to ensure that every single hash that is computed within the LMS
                                                                                             scheme uses a different prefix.

                                                                                             XMSS generates its prefixes in a similar way. The information described above is used to form
                                                                                             an address, which uniquely identifies where a particular hash invocation occurs within the

                                                                                                                                                  10
