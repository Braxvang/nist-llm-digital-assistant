A STATISTICAL TEST SUITE FOR RANDOM AND PSEUDORANDOM NUMBER GENERATORS FOR CRYPTOGRAPHIC APPLICATIONS



the generation algorithm is publicly available, the seed must be kept secret and should not be derivable
from the pseudorandom sequence that it produces. In addition, the seed itself must be unpredictable.

1.1.3   Random Number Generators (RNGs)

The first type of sequence generator is a random number generator (RNG). An RNG uses a non-
deterministic source (i.e., the entropy source), along with some processing function (i.e., the entropy
distillation process) to produce randomness. The use of a distillation process is needed to overcome any
weakness in the entropy source that results in the production of non-random numbers (e.g., the occurrence
of long strings of zeros or ones). The entropy source typically consists of some physical quantity, such as
the noise in an electrical circuit, the timing of user processes (e.g., key strokes or mouse movements), or
the quantum effects in a semiconductor. Various combinations of these inputs may be used.

The outputs of an RNG may be used directly as a random number or may be fed into a pseudorandom
number generator (PRNG). To be used directly (i.e., without further processing), the output of any RNG
needs to satisfy strict randomness criteria as measured by statistical tests in order to determine that the
physical sources of the RNG inputs appear random. For example, a physical source such as electronic
noise may contain a superposition of regular structures, such as waves or other periodic phenomena,
which may appear to be random, yet are determined to be non-random using statistical tests.

For cryptographic purposes, the output of RNGs needs to be unpredictable. However, some physical
sources (e.g., date/time vectors) are quite predictable. These problems may be mitigated by combining
outputs from different types of sources to use as the inputs for an RNG. However, the resulting outputs
from the RNG may still be deficient when evaluated by statistical tests. In addition, the production of
high-quality random numbers may be too time consuming, making such production undesirable when a
large quantity of random numbers is needed. To produce large quantities of random numbers,
pseudorandom number generators may be preferable.

1.1.4   Pseudorandom Number Generators (PRNGs)

The second generator type is a pseudorandom number generator (PRNG). A PRNG uses one or more
inputs and generates multiple “pseudorandom” numbers. Inputs to PRNGs are called seeds. In contexts
in which unpredictability is needed, the seed itself must be random and unpredictable. Hence, by default,
a PRNG should obtain its seeds from the outputs of an RNG; i.e., a PRNG requires a RNG as a
companion.

The outputs of a PRNG are typically deterministic functions of the seed; i.e., all true randomness is
confined to seed generation. The deterministic nature of the process leads to the term “pseudorandom.”
Since each element of a pseudorandom sequence is reproducible from its seed, only the seed needs to be
saved if reproduction or validation of the pseudorandom sequence is required.

Ironically, pseudorandom numbers often appear to be more random than random numbers obtained from
physical sources. If a pseudorandom sequence is properly constructed, each value in the sequence is
produced from the previous value via transformations that appear to introduce additional randomness. A
series of such transformations can eliminate statistical auto-correlations between input and output. Thus,
the outputs of a PRNG may have better statistical properties and be produced faster than an RNG.

1.1.5   Testing

Various statistical tests can be applied to a sequence to attempt to compare and evaluate the sequence to a
truly random sequence. Randomness is a probabilistic property; that is, the properties of a random


                                                    1-2
