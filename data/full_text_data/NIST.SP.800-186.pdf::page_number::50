NIST SP 800-186                                                  Discrete Logarithm-based Cryptography:
February 2023                                                          Elliptic Curve Domain Parameters

Process:

Let l be the bit length of p, and define
                        v =  ( l – 1) /hdigest
                        w = l – hdigest × v – 1
    1. Choose an arbitrary hdigest-bit string s as the domain parameter Seed.
    2. Compute H = HASH(s).
    3. Let H0 be the bit string obtained by taking the w rightmost bits of H.
    4. Let z be the integer whose binary expansion is given by the hdigest-bit string s.
    5. For i from 1 to v:
       5.1 Define the hdigest-bit string si to be the binary expansion of the integer
            (z + i) mod (2 hdigest).
       5.2 Compute hi = HASH(si).
    6. Let h be the bit string obtained by the concatenation of h0 , h1, … , hv as follows:
                     h = h0 || h1 || … || hv.
    7. Let c be the integer whose binary expansion is given by the bit string h.
    8. If ((c = 0) or (4c + 27 ≡ 0 mod p)), then go to Step 1.
    9. Choose integers a, b ∈GF(p), such that
                     c b2 ≡ a3 mod p.
        (The simplest choice is a = c and b = c. However, they may be chosen differently for
        performance reasons. For example, the pseudorandom prime curves in this document all
        have a = -3.)
    10. Check that the elliptic curve E over GF(p) given by y 2 = x3 + ax + b has suitable order. If
        not, go to Step 1.

C.3.2. Verification of Curve Generation (Prime Case)
Given the hdigest domain parameter seed value s, verify that the coefficient b was obtained from
s via the cryptographic hash function HASH as follows:
Inputs:
   1. Positive integer l
   2. The coefficient b
   3. Bit-string s of length hdigest
   4. Approved hash function HASH with output length of hdigest bits and security design
       strength of at least requested_security_strength

Output: Verification that the coefficient b was obtained from s via the cryptographic hash
function HASH
Process:

Let l be the bit length of p, and define
                 v =  ( l – 1) /hdigest 
                 w = l – hdigest ×v – 1


                                                   39
