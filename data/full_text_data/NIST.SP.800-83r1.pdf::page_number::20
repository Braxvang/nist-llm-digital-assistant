                                     GUIDE TO MALWARE INCIDENT PREVENTION AND HANDLING FOR DESKTOPS AND LAPTOPS


presents, including handling the continual discovery of new vulnerabilities, organizations should have
documented policy, processes, and procedures for vulnerability mitigation.

Organizations should consider using security automation technologies with OS and application
configuration checklists to help administrators secure hosts consistently and effectively. Security
automation technologies can use checklists to apply configuration settings that improve the default level
of security and to continuously monitor the hosts’ settings to verify that they are still in compliance with
the checklist settings. 7 Organizations should also consider using security automation technologies for OS
and application patch management—to identify, acquire, distribute, and install security-related patches so
as to mitigate vulnerabilities that the patches address.8

In terms of security configurations, organizations should use sound host hardening principles. For
example, organizations should follow the principle of least privilege, which refers to configuring hosts to
provide only the minimum necessary rights to the appropriate users, processes, and hosts. Least privilege
can be helpful in preventing malware incidents, because malware often requires administrator-level
privileges to exploit vulnerabilities successfully. If an incident does occur, prior application of least
privilege might minimize the amount of damage that the malware can cause. Organizations should also
implement other host hardening measures that can further reduce the possibility of malware incidents,
such as the following:

     Disabling or removing unneeded services (particularly network services), which are additional
      vectors that malware can use to spread
     Eliminating unsecured file shares, which are a common way for malware to spread
     Removing or changing default usernames and passwords for OSs and applications, which could
      be used by malware to gain unauthorized access to hosts
     Disabling automatic execution of binaries and scripts, including AutoRun on Windows hosts

     Changing the default file associations for file types that are most frequently used by malware but
      not by users (e.g., .pif, .vbs) so that such files are not run automatically if users attempt to open
      them.

Host hardening should also include applications, such as email clients, web browsers, and word
processors, that are frequently targeted by malware. Organizations should disable unneeded features and
capabilities from these applications, particularly those that are commonly exploited by malware, to limit
the possible attack vectors for malware. One example is the use of macro languages by word processors
and spreadsheets; most common applications with macro capabilities offer macro security features that
permit macros only from trusted locations or prompt the user to approve or reject each attempt to run a
macro, thus reducing the chance of macro-induced malware infection. Another example is preventing
software installation within web browsers by configuring browsers to prohibit plug-in installation or to
prompt users to approve the installation of each plug-in.


7
    For more information, see NIST SP 800-128, Guide for Security-Focused Configuration Management of Information
    Systems (http://csrc.nist.gov/publications/PubsSPs.html#800-128).
8
    For more information on security automation and checklists, see NIST SP 800-70 Revision 2, National Checklist Program
    for IT Products: Guidelines for Checklist Users and Developers (http://csrc.nist.gov/publications/PubsSPs.html#800-70) and
    NIST SP 800-117, Guide to Adopting and Using the Security Content Automation Protocol (SCAP)
    (http://csrc.nist.gov/publications/PubsSPs.html#800-117). More information on patch management is available from NIST
    SP 800-40 Revision 3, Guide to Enterprise Patch Management Technologies
    (http://csrc.nist.gov/publications/PubsSPs.html#800-40-rev3).


                                                             9
