                                                                                               NIST SP 800-163 REV. 1                                                         VETTING THE SECURITY OF MOBILE APPS


                                                                                                    Target Operating        The operating system, operating system version/Software Development Kit
                                                                                                    Platform                (SDK), and configuration on which the app will be deployed.
                                                                                                    Target                  The intended operational environment of the app (e.g., general public use vs.
                                                                                                    Environment             sensitive military environment).

                                                                                                    Digital Signature       Digital signatures applied to the app binaries, libraries, or packages.

                                                                                                                                             When available, the app’s user guide assists testing by specifying
                                                                                                                                             the expected functionality and expected behaviors. This is simply
                                                                                                                            User Guide
                                                                                                                                             a statement from the developer describing what they claim their
                                                                                                                                             app does and how it does it.
                                                                                                                                             Reviewing the developer’s test plans may help focus app vetting
                                                                                                                                             by identifying any areas that have not been tested or were tested
                                                                                                                            Test Plans
                                                                                                                                             inadequately. A developer could opt to submit a test oracle in
                                                                                                                                             certain situations to demonstrate its internal test effort.
                                                                                                    App
                                                                                                    Documentation                            Code review results and other testing results will indicate which
                                                                                                                                             security standards were followed. For example, if an app threat
This publication is available free of charge from: https://doi.org/10.6028/NIST.SP.800-163r1




                                                                                                                            Test Results     model was created, this standard should be submitted. It will list
                                                                                                                                             weaknesses that were identified and should have been
                                                                                                                                             addressed during app design and coding.
                                                                                                                                             If an app was developed for an organization by a third-party, a
                                                                                                                            Service-
                                                                                                                                             Service-Level Agreement (SLA) may have been included as part
                                                                                                                            Level
                                                                                                                                             of the vendor contract. This contract should require the app to be
                                                                                                                            Agreement
                                                                                                                                             compatible with the organization’s security policy.



                                                                                               Some information can be gleaned from app documentation in certain cases, but even if
                                                                                               documentation does exist it might lack technical clarity and/or use jargon specific to the circle of
                                                                                               users who would normally purchase the app. Since the documentation for different apps will be
                                                                                               structured in different ways, it may also be time-consuming to find this information for
                                                                                               evaluation. Therefore, a standardized questionnaire might be appropriate for determining the
                                                                                               software’s purpose and assessing an app developer’s efforts to address security weaknesses.
                                                                                               Such questionnaires aim to identify software quality issues and security weaknesses by helping
                                                                                               developers address questions from end-users/adopters about their software development
                                                                                               processes. For example, developers can use the Department of Homeland Security (DHS)
                                                                                               Custom Software Questionnaire [11] to answer questions such as “Does your software validate
                                                                                               inputs from untrusted resources?” and “What threat assumptions were made when designing
                                                                                               protections for your software?” Another useful question, not included in the DHS questionnaire,
                                                                                               is: “Does your app access a network application programming interface (API)?” Note that such
                                                                                               questionnaires can be used only in certain circumstances such as when source code is available
                                                                                               and when developers can answer questions.

                                                                                               Known flaws in app design and coding may be reported in publicly accessible vulnerability
                                                                                               databases such as the U.S. National Vulnerability Database (NVD). 6 Before conducting the full
                                                                                               vetting process for a publicly available app, analysts should check one or more vulnerability
                                                                                               databases to determine if there are known flaws in the corresponding version of the app. If one or
                                                                                               more serious flaws already have been discovered, this finding alone might be sufficient grounds
                                                                                               to reject the version of the app for organizational use, thus allowing the rest of the vetting


                                                                                               6   Vulnerability databases generally reference vulnerabilities by their Common Vulnerabilities and Exposures (CVE)
                                                                                                   identifier. For more information about CVE, see [12].

                                                                                                                                                            8
