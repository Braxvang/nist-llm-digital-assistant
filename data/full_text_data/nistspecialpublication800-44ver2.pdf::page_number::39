                                                                 GUIDELINES ON SECURING PUBLIC WEB SERVERS



     Length—a minimum length for passwords. Specify a minimum length of at least eight
        characters.

     Complexity—the mix of characters required. Require passwords to contain both uppercase and
        lowercase letters and at least one nonalphabetic character, and to not be a “dictionary” word.

     Aging—how long a password may remain unchanged. Require users to change their passwords
        periodically. Administrator or root level passwords should be changed every 30 to 120 days. The
        period for user-level passwords should be determined by the enforced length and complexity of
        the password combined with the sensitivity of the information protected. When considering the
        appropriate aging duration, the exposure level of user passwords should also be taken into
        account. Consideration should also be given to enforcing a minimum aging duration to prevent
        users from rapidly cycling through password changes to clear out their password history and
        bypass reuse restrictions.

     Reuse—whether a password may be reused. Some users try to defeat a password aging
        requirement by changing the password to one they have used previously. If possible, ensure that
        users cannot change their passwords by merely appending characters to the beginning or end of
        their original passwords (e.g., original password was “mysecret” and is changed to “1mysecret”
        or “mysecret1”).

     Authority—who is allowed to change or reset passwords and what sort of proof is required
        before initiating any changes.

     Password Security—how passwords should be secured, such as not storing passwords
        unencrypted on the mail server, and requiring administrators to use different passwords for their
        email administration accounts than their other administration accounts.

 Configure Computers to Prevent Password Guessing—It is relatively easy for an unauthorized
  user to try to gain access to a computer by using automated software tools that attempt all passwords.
  If the OS provides the capability, configure it to increase the period between login attempts with each
  unsuccessful attempt. If that is not possible, the alternative is to deny login after a limited number of
  failed attempts (e.g., three). Typically, the account is “locked out” for a period of time (such as 30
  minutes) or until a user with appropriate authority reactivates it.

    The choice to deny login is another situation that requires the Web server administrator to make a
    decision that balances security and convenience. Implementing this recommendation can help prevent
    some kinds of attacks, but it can also allow an attacker to use failed login attempts to prevent user
    access, resulting in a DoS condition. The risk of DoS from account lockout is much greater if an
    attacker knows or can surmise a pattern to your naming convention that allows them to guess account
    names.

    Failed network login attempts should not prevent an authorized user or administrator from logging in at
    the console. Note that all failed login attempts, whether via the network or console, should be logged.
    If remote administration is not to be implemented (see Section 9.5), disable the ability for the
    administrator or root level accounts to log in from the network.

 Install and Configure Other Security Mechanisms to Strengthen Authentication—If the
  information on the Web server requires it, consider using other authentication mechanisms such as
  biometrics, smart cards, client/server certificates, or one-time password systems. They can be more
  expensive and difficult to implement, but they may be justified in some circumstances. When such



                                                    4-5
