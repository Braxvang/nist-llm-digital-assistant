                                                                                            GUIDE TO SECURE WEB SERVICES



After receiving the user’s credit rating and the current rates, the loan service can then provide the user
with a loan or deny the user’s request.

2.1.4.2 Provider Web Services

The provider accepts a request from the requester and provides a response based on the input. The
provider is responsible for setting the standards for authentication, authorization, encryption, and non-
repudiation. The provider communicates its requirements through the extensibility of WSDL, a discovery
service, or both. Some requirements may be negotiable, allowing requesters and providers to dynamically
determine how to proceed, but at this time WSDL and discovery services do not provide a standard way
for negotiating such requirements. Standards are under development to address this shortcoming.

In the loan service example, both the rate service and credit service are providers. When the rate provider
receives a request, it performs the necessary calculations to determine the current rates offered by the
bank. Once the request has been processed, the provider sends an appropriate response containing the
bank’s current rate information. When the credit provider receives a request, it returns a response
containing the creditworthiness of the customer.

Web services provide a SOA in which applications are loosely coupled, allowing Web services to
dynamically bind to other Web services at run-time depending on the needs of the user or application.
Web services publish their functions to the UDDI registry so that other Web services can find needed
functionality. This enables the reuse of applications, particularly legacy applications; by developing a
Web services interface that is accessible via SOA, organizations can conserve resources used for costly
migrations between platforms. Often, this results in a chain of Web service invocations and an associated
performance penalty. This penalty, however, is often offset by the savings in development time and
consistency of results associated with re-using components. 10 In a network with low latency and high
availability, this performance penalty can be minimized to the point that it is not noticeable.

2.1.4.3 Intermediary Web Services

An intermediary service is a Web service that is invoked in a chain. The most common example of an
intermediary Web service is an XML gateway that receives requests from requesters, performs security
checks against the requests, and then forwards the requests to an internal Web service provider. From the
perspective of the requester, there is only a single provider, but in reality there are two. There can be any
number of intermediary services involved within a single Web service transaction. Figure 2-4 illustrates
how multiple intermediary services may interact with other services.




10
     While component re-use offers numerous benefits to developers, any implementation flaws in the component will affect all
     applications that rely on it.


                                                             2-4
