                                                             CLOUD COMPUTING SYNOPSIS AND RECOMMENDATIONS



governed by strict policies for limiting what can or cannot be accessed elsewhere, while connected to a
cloud.

5.4.2   Network Dependence

The availability of a SaaS application depends on a reliable and continuously available network. In the
public SaaS cloud scenario, the network's reliability cannot be guaranteed either by the cloud consumer or
by the cloud provider because the Internet is not under the control of either one. In outsourced private or
community SaaS scenarios, network security and reliability can be achieved using dedicated, protected
communications links, but at a cost. Although a SaaS application may include a "disconnected mode" for
continued processing during network outages, the fundamental organization of SaaS, with application
logic implemented on the cloud provider's servers, implies that the actual functionality of the application
will be dependent on its ability to access a reliable network.

5.4.3   Lack of Portability between SaaS Clouds

Portability in SaaS is a concern for transitioning workloads from one SaaS cloud to another. Formats for
exporting and importing data may not be fully compatible among SaaS clouds. Customized workflow
and business rules, user interface and application settings, support scripts, data extensions, and add-ons
developed over time can also be provider specific and not easily transferable.

5.4.4   Isolation vs. Efficiency (Security vs. Cost Tradeoffs)

The execution resources exr1 ... exr5 depicted in Figure 9 are abstract and raise questions of how SaaS
application software is actually executed by a SaaS provider, and whether a SaaS provider has a fixed or
variable ability to execute software for its consumers. Figure 11 provides a more concrete view of one
way such execution can be accomplished (several options are discussed in [Cho08].




                         Figure 11: SaaS Isolation vs. Efficiency Favoring Isolation

In the scenario depicted in Figure 11, the cloud provider runs a separate instance (active copy) of the
application for each client, and configures the application instances as necessary so that they can coexist
on a single physical computer without interference. Since SaaS applications often store data on behalf of
clients (or at least store configuration preferences), the figure also shows separate database systems
connected to the separate application instances. Essentially, each client has a separate running copy of the
application and a separate data store, and the separation between clients is provided by the operating
system. Separation can be provided in numerous ways using the operating system, with various tradeoffs
in the strength of the separation and the cost of implementing it. Higher confidence could be obtained by



                                                    5-6
