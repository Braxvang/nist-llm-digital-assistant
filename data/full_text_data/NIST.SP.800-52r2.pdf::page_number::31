NIST SP 800-52 REV. 2                                           GUIDELINES FOR TLS IMPLEMENTATIONS


inherent security implications, the implementation flaw exposed server data, including private
keys, to attackers.

In general, servers should only be configured to support extensions that are required by the
application or that enhance security. Extensions that are not needed should not be enabled.

3.4.1   Mandatory TLS Extensions

The server shall support the use of the following TLS extensions.

   1.   Renegotiation Indication
   2.   Server Name Indication
   3.   Extended Master Secret
   4.   Signature Algorithms
   5.   Certificate Status Request extension

3.4.1.1 Renegotiation Indication

Applies to TLS versions: 1.0, 1.1, 1.2

In TLS versions 1.0 to 1.2, session renegotiation is vulnerable to an attack in which the attacker
forms a TLS connection with the target server, injects content of its choice, and then splices in a
new TLS connection from a legitimate client. The server treats the legitimate client’s initial TLS
handshake as a renegotiation of the attacker’s negotiated session and thus believes that the initial
data transmitted by the attacker is from the legitimate client. The session renegotiation extension
is defined to prevent such a session splicing or session interception. The extension uses the
concept of cryptographically binding the initial session negotiation and session renegotiation.

Server implementations shall perform initial and subsequent renegotiations in accordance with
RFC 5746 [59] and RFC 8446 [57].

3.4.1.2 Server Name Indication

Applies to TLS versions: 1.0, 1.1, 1.2, 1.3

Multiple virtual servers may exist at the same network address. The server name indication
extension allows the client to specify which of the servers located at the address it is trying to
connect with. This extension is available in all versions of TLS. The server shall be able to
process and respond to the server name indication extension received in a ClientHello message
as described in [29].

3.4.1.3 Extended Master Secret

Applies to TLS versions: 1.0, 1.1, 1.2

Bhargavan et al. have shown that an active attacker can synchronize two TLS sessions such that
they share the same master secret, thus allowing the attacker to perform a man-in-the-middle
attack [12]. The Extended Master Secret extension, specified in RFC 7627 [13], prevents such


                                                 22
