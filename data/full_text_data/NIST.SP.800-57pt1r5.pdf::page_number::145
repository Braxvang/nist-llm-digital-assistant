                                                                                                 NIST SP 800-57 PART 1 REV. 5                                           RECOMMENDATION FOR KEY MANAGEMENT:
                                                                                                                                                                                           PART 1 – GENERAL

                                                                                                 Appendix A—Cryptographic and Non-cryptographic Integrity and Source
                                                                                                 Authentication Mechanisms
                                                                                                 Integrity and source authentication services are particularly important in protocols that include key
                                                                                                 management. When integrity or source-authentication services are discussed in this
                                                                                                 Recommendation, they assume the use of “strong” cryptographic integrity or source-
                                                                                                 authentication mechanisms. Secure communications and key management are typically provided
                                                                                                 using a communication protocol that offers certain services, such as integrity protection or a
                                                                                                 “reliable” transport service. 108 However, the integrity protection or reliable transport services of
                                                                                                 communication protocols are not necessarily adequate for cryptographic applications, particularly
                                                                                                 for key management, and there might be confusion about the meaning of terms such as “integrity.”
This publication is available free of charge from: https://doi.org/10.6028/NIST.SP.800-57pt1r5




                                                                                                 All communication channels have some noise (i.e., unintentional errors inserted by the
                                                                                                 transmission media), and other factors, such as network congestion, can cause network packets 109
                                                                                                 to be lost. Therefore, integrity protection and reliable transport services for communication
                                                                                                 protocols are designed to function over a channel with certain worst-case noise characteristics.
                                                                                                 Transmission bit errors are typically detected using 1) a non-cryptographic checksum 110 to detect
                                                                                                 transmission errors in a packet and 2) a packet counter that is used to detect lost packets. A
                                                                                                 receiving entity that detects damaged packets (i.e., packets that contain bit errors) or lost packets
                                                                                                 may request that the sender retransmit them. The non-cryptographic checksums are generally
                                                                                                 effective at detecting transmission noise. For example, the common CRC-32 checksum algorithm
                                                                                                 used in local-area network applications detects all error bursts with a span of less than 32 bits and
                                                                                                 detects longer random bursts with a 2−32 failure probability. However, the non-cryptographic CRC-
                                                                                                 32 checksum does not detect the swapping of 32-bit message words, and specific errors in
                                                                                                 particular message bits cause predictable changes in the CRC-32 checksum. The sophisticated
                                                                                                 attacker can take advantage of this to create altered messages that pass the CRC-32 integrity checks
                                                                                                 even, in some cases, when the message is encrypted.
                                                                                                 Forward error-correcting codes are a subset of non-cryptographic checksums that can be used to
                                                                                                 correct a limited number of errors without retransmission. These codes may be used as checksums,
                                                                                                 depending on the application and noise properties of the communication channel.
                                                                                                 Cryptographic integrity-authentication mechanisms (e.g., MACs or digital signatures), on the other
                                                                                                 hand, protect against an active, intelligent attacker who might attempt to disguise an attack as
                                                                                                 noise. Typically, the bits altered by the attacker are not random; they are targeted at system
                                                                                                 properties and vulnerabilities. Cryptographic integrity- authentication mechanisms are effective in
                                                                                                 detecting random noise events, but they also detect the more systematic deliberate attacks.
                                                                                                 Cryptographic hash functions, such as SHA-256, are designed to make every bit of the hash value



                                                                                                 108
                                                                                                     A means of transmitting information within a network using protocols that provide assurances that the information
                                                                                                    is received correctly.
                                                                                                 109
                                                                                                     A formatted unit of data used to send messages across a network. Messages may be divided into multiple packets
                                                                                                    for transmission efficiency.
                                                                                                 110
                                                                                                     Checksum: an algorithm that uses the bits in the transmission to create a checksum value. The checksum value is
                                                                                                    normally sent in the transmission. The receiver re-computes the checksum value using the bits in the received
                                                                                                    transmission and compares the received checksum value with the computed value to determine whether or not the
                                                                                                    transmission was correctly received. A non-cryptographic checksum algorithm uses a well-known algorithm
                                                                                                    without secret information (i.e., without a cryptographic key).


                                                                                                                                                         132
