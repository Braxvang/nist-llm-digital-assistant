      misleading for other file types (such as text documents). A potential workaround is to develop
      more sophisticated randomization that preserves the characteristic properties of the target file
      type.

      The obvious advantage of using real data is that the results can be directly be related to
      practical applications. However, the challenges of defining a representative sample,
      establishing the ground truth, and running experiments at scale (without a human in the loop)
      are non-trivial. See Appendix A1 Example test methodologies for both controlled and real
      data.

3.3   Properties of Special Interest

      The following properties may be especially useful for testing and comparing approximate
      matching algorithms. This list is not meant to be exhaustive. Note that the properties
      enumerated here are adapted from those proposed by Breitinger, Stivaktakis, and Baier [3].
      See their work on the FRASH testing framework for an example of a complete description
      (including full implementation details and suggested test values) of a testing framework that
      incorporates these properties.

      3.3.1 Efficiency

      The efficiency of an algorithm is measured in terms of the space and time it requires;
      the latter property is further subdivided according to time needed for generating
      similarity digests and time need for comparing them.
      Space efficiency. Traditional hash functions return a fixed length fingerprint; in
      contrast, the length of similarity digests is sometimes variable and proportional to the
      input length. If the digest is of variable length, space efficiency measures the ratio
      between input and the digest and returns a percentage value. That is,
                                                            ୢ୧୥ୣୱ୲ ୪ୣ୬୥୲୦
                                       space efficiency ൌ                                  (1)
                                                            ୧୬୮୳୲ ୪ୣ୬୥୲୦



      Generation efficiency. Generation efficiency measures the throughput of an algorithm
      when producing a similarity digest from raw input. To enable useful comparisons
      across different architectures, it is recommended that the throughput of a standard
      algorithm implementation, such as SHA-1 in openssh, be included as a reference point.
      Comparison efficiency. The comparison efficiency measures the rate at which
      similarity digests can be compared. It is useful to have both a formal analysis, which
      provides the theoretical complexity of the comparison (in O- notation) and an empirical
      evaluation based on a reference data set.

      A related property of note is the ability of the algorithm to leverage parallel computational
      resources; these may include conventional multi-core CPU architectures, as well as massively
      parallel ones, such as GPUs. To that end, tests should include scalability analysis, which shows
      speedup as a function of available hardware concurrency.

      3.3.2 Sensitivity

      Sensitivity is a measure of the ability of an approximate matching algorithm to find
      correlations among objects based on fine-grained commonality—the smaller the

                                                 8
