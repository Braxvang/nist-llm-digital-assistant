                                NIST Special Publication 800-38F


Algorithm 2 specifies the unwrapping function, W-1, for KW-AD (see Sec. 6.2) and KWP-AD
(see Sec. 6.3), with a given block cipher and KEK.

Algorithm 2: W-1(C)

Prerequisites:
KEK, K, for an approved, 128-bit block cipher;
inverse of the designated cipher function, CIPH-1K.

Input:
a string, C, of n semiblocks, for some integer n ≥ 3.

Steps:
    1. Initialize the variables.
           a) Let s = 6(n-1).
           b) Let C1, C2 , … , Cn be the semiblocks such that C = C1 || C2 || … || Cn.
           c) Let As = C1.
           d) For i = 2, …, n: let Ris = Ci.
    2. Calculate the intermediate values. For t = s, s-1, …, 1, update the variables as follows:
           a) At-1 = MSB64(CIPH-1K((At ⊕ [t]64) || Rnt));
           b) R2t-1 = LSB64(CIPH-1K((At ⊕ [t]64) || Rnt));
           c) For i = 2, …, n-1, Ri+1t-1 = Rit.
    3. Output the results:
           a) Let S1 =A0.
           b) For i = 2, ..., n: Si = Ri0.
           c) Return S1 || S2 || … || Sn.

                                         At    Rnt         Rn-1t    …       R2t


                              [t]64


                                         CIPH-1K


                                      MSB64    LSB64


                Figure 3: Illustration of an iteration within Step 2 of Algorithm 2

Figure 3 illustrates the assignment of intermediate values within Step 2 of Algorithm 2. The
dashed lines indicate the assignments of new values to the n semiblock variables. The variable
that indexes the iterations, t, decreases from 6(n-1) to 1. The input to the inverse cipher function
is the concatenation of the two semiblocks that are indicated by the incoming arrows.




                                                   13
