                                                               GUIDELINES ON ACTIVE CONTENT AND MOBILE CODE



5.2.2   Cages

Nearly all interpretive execution environments, such as those supported by Web browsers and desktop
applications, impose restrictions on the languages they process and execute. However, those restrictions
may not be sufficient for all organizations. For such situations, imposing additional or redundant
restraints on the code’s behavior as it executes (e.g., privilege or function) might be appropriate.
Conceptually, behavior controls can be viewed as a software cage or quarantine mechanism that
dynamically intercepts and thwarts attempts by the subject code to take unacceptable actions that violate
policy. Figure 5-2 illustrates the concept for the producer-consumer model.




                  Figure 5-2. Constraining Active Content Behavior with a Software Cage

Many different approaches have been devised to thwart unwanted program behavior, including the
following:

 Designing safe languages or eliminating unsafe commands from an existing language
 Running all code under policy enforced resource constraints
 Monitoring code activities and resource access
 Inspecting code and isolating the execution of harmful commands elsewhere
 Inspecting code and modifying or adding instructions to enforce policy.
These approaches manifest themselves in different ways in different products. Some language
interpreters have a “safe” mode or limit functionality with a “padded cell” (e.g., Safe Tcl). Java confines
code to a sandbox that prevents it from performing unauthorized operations. Finjan’s behavior blocking
products use a dynamic sandbox that subjects all active content to real-time monitoring and policy-based
access control. Personal firewalls actively monitor and block network use.

As with firewall and antivirus products, technologies that dynamically restrain mobile code were born out
of necessity to supplement existing mechanisms and represent an emerging class of security product.
Such products are intended to complement firewall and antivirus products that block network transactions
or mobile code based on predefined signatures (i.e., content inspection) respectively, and may refer to
technologies such as dynamic sandbox, dynamic monitors, and behavior monitors used for controlling the



                                                    5-9
