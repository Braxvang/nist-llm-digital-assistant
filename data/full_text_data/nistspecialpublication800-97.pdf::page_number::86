ESTABLISHING WIRELESS ROBUST SECURITY NETWORKS: A GUIDE TO IEEE 802.11I



The main difference between EAP-TTLS and PEAP is that PEAP’s tunneled authentication transaction is
another EAP method rather than an exchange of AVPs. These tunneled EAP methods, also called inner
EAP methods, might be an RFC 3748 method or a more recently developed EAP method. In practice, this
distinction usually is not important because both EAP-TTLS and PEAP can run on any network topology
or protocol, are compatible with RADIUS, and can interoperate with any AP, none of which require
method-specific code.

Given the similarities between EAP-TTLS and PEAP, it is possible that one will emerge as a de facto
standard while the other becomes superfluous, but it is unclear which is more likely to become the
standard at this time. A number of vendors are implementing EAP-TTLS in their WLAN products, and
EAP-TTLS client software is available for most major operating systems (e.g., Linux, Mac OS, Microsoft
Windows). PEAP has strong support from both Microsoft and Cisco Systems, which could encourage
other vendors to implement PEAP in their solutions. In addition, Microsoft Windows XP provides native
support for PEAP, but not EAP-TTLS. Organizations that require EAP-TTLS for Windows XP STAs
need to procure third-party software; an open-source EAP-TTLS plug-in is available for the native
Windows supplicant. Also, the Windows version of PEAP supports MS-CHAPv2 only, which currently
limits its use to authentication with Microsoft domains or Active Directory. Organizations that need
PEAP to interoperate with third-party ASs need to procure compatible third-party PEAP client software.
Unfortunately, there are different non-interoperable implementations of PEAP, so organizations should
take care that their server and client versions are compatible; they must also be compatible with the
method used to store user accounts on the backend authentication database. Both versions should also
fulfill the organization’s security requirements.

New industry developments could change the relative merits of each method. Neither EAP-TTLS nor
PEAP has been approved as an IETF standard; EAP-TTLS is defined in an Internet-Draft, but the PEAP
Internet Draft has expired. Given the rapid changes in this area, organizations are encouraged to obtain
the latest information before selecting one of these methods.

6.1.3.4 EAP-FAST

EAP-FAST was developed by Cisco Systems. What distinguishes EAP-FAST from other TLS-based
methods is that it establishes the encrypted tunnel using what it calls a Protected Access Credential
(PAC), which is effectively a pre-shared key; alternatively, a public key certificate can be used. The
tunnel is then used to protect an inner EAP method, much like PEAP. 79 The use of PACs eliminates the
need to have certificates on either the STA or AS. The protocol also includes mechanisms for refreshing
PACs after a successful authentication. EAP-FAST is especially suitable for unsophisticated devices that
might not have the computing power to perform TLS handshakes frequently without adversely impacting
the user’s experience. For example, EAP-FAST might enable household appliances, vending machines,
and other small devices not typically connected to WLANs today to participate in IEEE 802.11 RSNs
more cheaply and efficiently than they could with other EAP methods.

The major problem with EAP-FAST is initializing each STA with its first PAC. Provisioning initial
PACs is not easier than provisioning certificates. Cisco has implemented features on its WLAN
equipment that can provision PACs securely, but they involve having a digital certificate on the AS,
which must be installed on each client before it can be used. Given these limitations, EAP-FAST in
practice has similar PKI requirements to EAP-TTLS and PEAP, even if the certificates are not used in the
EAP conversation itself. The alternative, easier method of PAC provisioning, does not require


79
     Unlike PEAP and TTLS, EAP-FAST prevents man-in-the-middle attacks through the cryptographic binding of the tunnel
     and the inner EAP methods.


                                                          6-10
