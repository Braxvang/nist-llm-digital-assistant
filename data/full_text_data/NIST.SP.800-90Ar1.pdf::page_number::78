NIST SP 800-90A Rev. 1                                                 Recommendation for Random Number
                                                                        Generation Using Deterministic RBGs


     ii) The equation ai = s holds, with probability almost exactly 1/r, for any i ≥ 0 and for any s
         (0 ≤ s ≤ r-1);
     iii) Each value ai is statistically independent of any set of values aj (j ≠ i).
Four techniques are specified for generating sequences of random numbers from sequences of
random bits.
If the range of the number required is a ≤ ai ≤ b, rather than 0 ≤ ai ≤ r-1, then a random number
in the desired range can be obtained by computing ai + a, where ai is a random number in the
range 0 ≤ ai ≤ b-a (that is, when r = b-a+1).
A.5.1        The Simple Discard Method

Let m be the number of bits needed to represent the value (r–1). The following method may be
used to generate the random number a:
     1. Use the random bit generator to generate a sequence of m random bits, (b0, b1, …, bm-1).
                    m−1
     2. Let c = ∑ 2 ibi .
                    i= 0

     3. If c < r then put a = c, else discard c and go to Step 1.
This method produces a random number a with no skew (no bias). A possible disadvantage of
  € method, in general, is that the time needed to generate such a random a is not a fixed length
this
of time because of the conditional loop.
The ratio r/2m is a measure of the efficiency of the technique, and this ratio will always satisfy
0.5 < r/2m ≤ 1. If r/2m is close to 1, then the above method is simple and efficient. However, if
r/2m is close to 0.5, then the simple discard method is less efficient, and the more complex
method below is recommended.

A.5.2        The Complex Discard Method

Choose a small positive integer t (the number of same-size random number outputs desired), and
then let m be the number of bits in (rt –1). This method may be used to generate a sequence of t
random numbers (a0, a1, … , at-1):
     1. Use the random bit generator to generate a sequence of m random bits, (b0, b1, …, bm-1).
                    m−1
     2. Let c = ∑ 2 ibi .
                    i= 0
                t
     3. If c < r , then
         let (a0, a1, …, at-1) be the unique sequence of values satisfying 0 ≤ ai ≤ r -1 such that
 €                  t−1
             c = ∑ r i ai .
                    i= 0

         else discard c and go to Step 1.

 €

                                                    69
