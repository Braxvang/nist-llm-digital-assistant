                                                                                             NIST SP 800-204                                                          SECURITY STRATEGIES FOR
                                                                                                                                                      MICROSERVICES-BASED APPLICATION SYSTEMS

                                                                                                                    Reports on Computer Systems Technology

                                                                                             The Information Technology Laboratory (ITL) at the National Institute of Standards and
                                                                                             Technology (NIST) promotes the U.S. economy and public welfare by providing technical
                                                                                             leadership for the Nation’s measurement and standards infrastructure. ITL develops tests, test
                                                                                             methods, reference data, proof of concept implementations, and technical analyses to advance the
                                                                                             development and productive use of information technology. ITL’s responsibilities include the
                                                                                             development of management, administrative, technical, and physical standards and guidelines for
                                                                                             the cost-effective security and privacy of other than national security-related information in
                                                                                             Federal information systems. The Special Publication 800-series reports on ITL’s research,
                                                                                             guidelines, and outreach efforts in information system security, and its collaborative activities
This publication is available free of charge from: https://doi.org/10.6028/NIST.SP.800-204




                                                                                             with industry, government, and academic organizations.



                                                                                                                                         Abstract

                                                                                             Microservices architecture is increasingly being used to develop application systems since its
                                                                                             smaller codebase facilitates faster code development, testing, and deployment as well as
                                                                                             optimization of the platform based on the type of microservice, support for independent
                                                                                             development teams, and the ability to scale each component independently. Microservices
                                                                                             generally communicate with each other using Application Programming Interfaces (APIs), which
                                                                                             requires several core features to support complex interactions between a substantial number of
                                                                                             components. These core features include authentication and access management, service
                                                                                             discovery, secure communication protocols, security monitoring, availability/resiliency
                                                                                             improvement techniques (e.g., circuit breakers), load balancing and throttling, integrity assurance
                                                                                             techniques during induction of new services, and handling of session persistence. Additionally,
                                                                                             the core features could be bundled or packaged into architectural frameworks such as API
                                                                                             gateways and service mesh. The purpose of this document is to analyze the multiple
                                                                                             implementation options available for each individual core feature and configuration options in
                                                                                             architectural frameworks, develop security strategies that counter threats specific to
                                                                                             microservices, and enhance the overall security profile of the microservices-based application.



                                                                                                                                        Keywords

                                                                                             microservices; load balancing; circuit breaker; Application Programming Interface (API); API
                                                                                             gateway; service mesh; proxy.




                                                                                                                                             ii
