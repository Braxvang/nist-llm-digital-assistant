                                                                                               NIST SP 800-133 REV. 2                                                       RECOMMENDATION FOR
                                                                                                                                                                    CRYPTOGRAPHIC KEY GENERATION

                                                                                                                    K = T(HMAC-hash(salt, K1 || …|| Kn || D1 || …|| Dm), kLen).
                                                                                                      Notes:
                                                                                                          a. HMAC-hash shall be an implementation of HMAC (as specified in FIPS 198, using
                                                                                                             an approved hash function hash) with a security strength that meets or exceeds the
                                                                                                             targeted security strength of the algorithm or application that will rely on the
                                                                                                             resulting key K (see SP 800-57, part 1).
                                                                                                          b. The salt is a secret or non-secret value with a length ≥ 0 that is used as the HMAC
                                                                                                             key. The salt must be known by all entities using this key-extraction process to
                                                                                                             obtain the same value of K.
This publication is available free of charge from: https://doi.org/10.6028/NIST.SP.800-133r2




                                                                                                          c. This method requires n ≥ 1. If n = 1, then K1 || …|| Kn is just K1.
                                                                                                          d. This method requires m ≥ 0. If m = 0, then D1 || …|| Dm is a null string;
                                                                                                             if m = 1, then D1 || …|| Dm is just D1.
                                                                                                          e. T is the truncation function defined in Section 2.3.
                                                                                                          f. The length of the output block of the hash function used with HMAC shall be at
                                                                                                             least kLen bits, the required bit length for K.
                                                                                                          g. The sum of the min-entropies provided by the methods used to generate or establish
                                                                                                             the component keys shall be equal to or greater than the min-entropy required for
                                                                                                             the output K and should be at least twice that amount of min-entropy.
                                                                                                          h. Alternative orderings are permitted when forming the concatenation of keys and
                                                                                                             data (including interleaving the keys and data), but the ordering must be known by
                                                                                                             all entities computing the value of K.
                                                                                                          i. The security strength of the key formed from combining multiple keys and data is
                                                                                                             subject to the considerations discussed in Section 3.3.

                                                                                               6.4    Distributing Symmetric Keys
                                                                                               The symmetric key generated within a key-generating module often needs to be shared with one
                                                                                               or more other entities that have their own cryptographic modules. The key may be distributed
                                                                                               manually or using an approved key-transport or symmetric key-wrapping method (see SP 800-
                                                                                               56B, SP 800-38F, and SP 800-71). See SP 800-57, Part 1 for further discussion. The method used
                                                                                               for key transport or key wrapping shall support the desired security strength needed to protect the
                                                                                               target data (i.e., the data to be protected by the application or algorithm relying on the symmetric
                                                                                               key). The requirements for the output of a key from a cryptographic module are discussed in FIPS
                                                                                               140.

                                                                                               6.5    Replacement of Symmetric Keys
                                                                                               Sometimes, a symmetric key may need to be replaced. This may be due to a compromise of the
                                                                                               key or the end of the key’s cryptoperiod (see SP 800-57, Part 1). Replacement shall be
                                                                                               accomplished through a rekeying process. Rekeying is the replacement of a key with a new key
                                                                                               that is generated independent of the value of the old key (i.e., knowledge of the old key provides
                                                                                               no knowledge of the value of the replaced key and vice versa).


                                                                                                                                               23
