                                                                                               NIST SP 800-56A Rev. 3                                   Recommendation for Pair-Wise Key Establishment
                                                                                                                                                                Using Discrete Logarithm Cryptography

                                                                                               Note: Key confirmation can be incorporated into this scheme. See Section 6.3.3 for details.
                                                                                               Static Unified Model is summarized in Table 22.
                                                                                                           Table 22: Static unified model key-agreement scheme summary

                                                                                                                                       Party U                                  Party V

                                                                                                Domain                  (q, FR, a, b{, SEED}, G, n, h)              (q, FR, a, b{, SEED}, G, n, h)
                                                                                                parameters

                                                                                                                        Static private key ds,U                     Static private key ds,V
                                                                                                Static data
                                                                                                                        Static public key Qs,U                      Static public key Qs,V
This publication is available free of charge from: https://doi.org/10.6028/NIST.SP.800-56Ar3




                                                                                                Ephemeral data          NonceU

                                                                                                                        Compute Z by calling ECC CDH Compute Z by calling ECC
                                                                                                Computation
                                                                                                                        using ds,U, and Qs,V         CDH using ds,V, and Qs,U

                                                                                                                        1. Compute DerivedKeyingMaterial 1. Compute
                                                                                                Derive secret              using NonceU                     DerivedKeyingMaterial
                                                                                                keying material                                             using NonceU
                                                                                                                        2. Destroy Z
                                                                                                                                                                    2. Destroy Z

                                                                                               6.3.3 Incorporating Key Confirmation into a C(0e, 2s) Scheme
                                                                                               The subsections that follow illustrate how to incorporate key confirmation (as described in
                                                                                               Section 5.9) into the C(0e, 2s) key-agreement schemes described above. Note that party V
                                                                                               cannot act as a key confirmation unless a nonce (NonceV) is provided by party V to party U
                                                                                               and is used (in addition to the shared secret Z) as input to the key-derivation method
                                                                                               employed by the scheme. This would be accomplished by including (a copy of) NonceV in
                                                                                               the OtherInput provided to the KDM, as part of the FixedInfo (see Section 5.8), in addition
                                                                                               to using (a copy of) NonceV as the EphemDataV employed in the MacTag computations for
                                                                                               key confirmation.
                                                                                               The flow depictions separate the key-establishment flow from the key-confirmation flow.
                                                                                               The depictions and accompanying discussions presume that the assumptions of the scheme
                                                                                               have been satisfied, that the key-agreement transaction has proceeded successfully through
                                                                                               key derivation, and that the received MacTags are successfully verified as specified in
                                                                                               Section 5.2.2.

                                                                                               6.3.3.1 C(0e, 2s) Scheme with Unilateral Key Confirmation Provided by Party
                                                                                                       U to Party V
                                                                                               Figure_15 depicts a typical flow for a C(0e, 2s) scheme with unilateral key confirmation
                                                                                               from party U to party V. In this scenario, party U and party V assume the roles of key-
                                                                                               confirmation provider and recipient, respectively. A nonce (NonceV) shall be provided by
                                                                                               party V to party U and used (in addition to the shared secret Z and the nonce provided by

                                                                                                                                                  107
