SECURE DOMAIN NAME SYSTEM (DNS) DEPLOYMENT GUIDE



8.2.3   Defining the Keys in a NSD Configuration File

In NSD, declaring a TSIG key is very similar to the example above, with some minor syntax changes:

        key:
                 name: ns1-ns2.example.com.
                 algorithm: hmac-sha256
                 secret: “MhZQKc4TwAPkURM==“

8.2.4   Instructing Name Servers to Use Keys in All Transactions

The command to instruct the server to use the key in all transactions (DNS query/response, zone transfer,
dynamic update, etc.) is as follows:

        server 192.249.249.1 {
             keys { ns1-ns2.example.com.; };

The same statement can be used as an entry in an acl statement as well:

        acl key_acl {

                 ns1-ns2.example.com.; };



8.2.5   Checklists for Key File Creation and Key Configuration Process


Checklist item 8: The TSIG key should be a minimum of 112 bits in length if the generator utility has
been proven to generate sufficiently random strings [800-57P1]. 128 bits is recommended.
Checklist item 9: A unique TSIG key should be generated for each pair of communicating hosts (i.e. a
separate key for each secondary name server to authenticate transactions with the primary name server,
etc.).
Checklist item 10: After the key string is copied to the key file in the name server, the two files
generated by the dnssec-keygen program should either be made accessible only to the server administrator
account (e.g., root in Unix) or, better still, deleted. The paper copy of these files also should be destroyed.
Checklist item 11: The key file should be securely transmitted across the network to name servers that
will be communicating with the name server that generated the key.
Checklist item 12: The statement in the configuration file (usually found at /etc/named.conf for BIND
running on Unix) that describes a TSIG key (key name (ID), signing algorithm, and key string) should not
directly contain the key string. When the key string is found in the configuration file, the risk of key
compromise is increased in some environments where there is a need to make the configuration file
readable by people other than the zone administrator. Instead, the key string should be defined in a
separate key file and referenced through an include directive in the key statement of the configuration file.
Every TSIG key should have a separate key file.
Checklist item 13: The key file should be owned by the account under which the name server software is
run. The permission bits should be set so that the key file can be read or modified only by the account that



                                                     8-14
