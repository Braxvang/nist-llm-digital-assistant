                                                                       GUIDELINES ON ELECTRONIC MAIL SECURITY



files (outside the specified directory tree) cannot be accessed, even if users know the locations of those
files.

On Linux and Unix hosts, consider using a “chroot jail” for the mail server application. Using chroot
changes the mail server’s “view” of the host file system such that the apparent root directory is not the
real file system root directory but rather one of its subparts. Thus, if the mail server is successfully
compromised, the attacker only gains access to the limited subpart of the file system accessible via chroot.
This is a very powerful security measure.

To mitigate the effects of certain types of DoS attacks, configure the mail server to limit the amount of
operating system resources it can consume. Some examples include:

 Installing users’ mailboxes on a different server (preferred), hard drive, or logical partition than the
  operating system and mail server application
 Configuring the mail server application so that it cannot consume all available space on its hard
  drives or partitions
 Limiting the size of attachments that are allowed
 Ensuring log files are stored in a location that is sized appropriately.
To some degree, these actions protect against attacks that attempt to fill the file system on the mail server
host operating system with extraneous and incorrect information that may cause the system to crash. This
also protects against attacks that attempt to fill primary random access memory with unnecessary
processes to slow down or crash the system, thus limiting mail server availability. Logging information
generated by the mail server host operating system may help in recognizing such attacks. As discussed in
Section 9.1, administrators should store mail server logs on centralized logging servers whenever
possible, and also store logs locally if feasible. If an attack causes the mail server to be compromised, the
attacker could modify or erase locally stored logs to conceal information on the attack. Having a copy of
the logs on a centralized logging server gives administrators more information to use when investigating
such a compromise.

6.2   Protecting Email from Malware

Email has increasingly been used as a means for sending binary files in the form of attachments. Initially,
this did not pose much of a security risk because attachments were mostly small word processing
documents or photos. As more organizations began using email for day-to-day collaboration, the size and
types of email attachments increased. Today, many email messages are sent with attachments such as
program executables, pictures, music, and sounds. Many forms of malware, including viruses, worms,
Trojan horses, and spyware—malware intended to violate a user’s privacy—are often transmitted in
attachments. Increasingly, attackers are using email to deliver zero-day attacks at targeted organizations
before these vulnerabilities are known publicly. These attacks are often targeted at office productivity
software and give the attacker control over users’ workstations. This control can be exploited to escalate
privileges, gain access to sensitive information, monitor users’ actions (e.g., keystrokes), and perform
other malicious actions.

Determining whether to allow certain types of attachments can be a difficult decision for an organization.
Not allowing any attachments would simplify a system and make it more secure; however, it would
dramatically reduce its usefulness, and users might employ encoding tricks to work around the restriction
to “get the job done”. Ultimately, organizations choose to allow at least some email attachments.



                                                     6-3
