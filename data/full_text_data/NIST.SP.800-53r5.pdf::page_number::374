                                                                                              NIST SP 800-53, REV. 5                      SECURITY AND PRIVACY CONTROLS FOR INFORMATION SYSTEMS AND ORGANIZATIONS
                                                                                              _________________________________________________________________________________________________


                                                                                                              unauthorized changes to established configuration settings or the unauthorized elevation of
                                                                                                              system privileges.
                                                                                                              Related Controls: AU-2, AU-6, IR-4, IR-5, SI-4.
                                                                                                       (8) SOFTWARE, FIRMWARE, AND INFORMATION INTEGRITY | AUDITING CAPABILITY FOR SIGNIFICANT
                                                                                                              EVENTS
                                                                                                              Upon detection of a potential integrity violation, provide the capability to audit the event
                                                                                                              and initiate the following actions: [Selection (one or more): generate an audit record; alert
                                                                                                              current user; alert [Assignment: organization-defined personnel or roles]; [Assignment:
                                                                                                              organization-defined other actions]].
                                                                                                              Discussion: Organizations select response actions based on types of software, specific
                                                                                                              software, or information for which there are potential integrity violations.
                                                                                                              Related Controls: AU-2, AU-6, AU-12.
This publication is available free of charge from: https://doi.org/10.6028/NIST.SP.800-53r5




                                                                                                       (9) SOFTWARE, FIRMWARE, AND INFORMATION INTEGRITY | VERIFY BOOT PROCESS
                                                                                                              Verify the integrity of the boot process of the following system components: [Assignment:
                                                                                                              organization-defined system components].
                                                                                                              Discussion: Ensuring the integrity of boot processes is critical to starting system components
                                                                                                              in known, trustworthy states. Integrity verification mechanisms provide a level of assurance
                                                                                                              that only trusted code is executed during boot processes.
                                                                                                              Related Controls: SI-6.
                                                                                                       (10) SOFTWARE, FIRMWARE, AND INFORMATION INTEGRITY | PROTECTION OF BOOT FIRMWARE
                                                                                                              Implement the following mechanisms to protect the integrity of boot firmware in
                                                                                                              [Assignment: organization-defined system components]: [Assignment: organization-
                                                                                                              defined mechanisms].
                                                                                                              Discussion: Unauthorized modifications to boot firmware may indicate a sophisticated,
                                                                                                              targeted attack. These types of targeted attacks can result in a permanent denial of service
                                                                                                              or a persistent malicious code presence. These situations can occur if the firmware is
                                                                                                              corrupted or if the malicious code is embedded within the firmware. System components
                                                                                                              can protect the integrity of boot firmware in organizational systems by verifying the integrity
                                                                                                              and authenticity of all updates to the firmware prior to applying changes to the system
                                                                                                              component and preventing unauthorized processes from modifying the boot firmware.
                                                                                                              Related Controls: SI-6.
                                                                                                       (11) SOFTWARE, FIRMWARE, AND INFORMATION INTEGRITY | CONFINED ENVIRONMENTS WITH LIMITED
                                                                                                              PRIVILEGES
                                                                                                              [Withdrawn: Moved to CM-7(6).]
                                                                                                       (12) SOFTWARE, FIRMWARE, AND INFORMATION INTEGRITY | INTEGRITY VERIFICATION
                                                                                                              Require that the integrity of the following user-installed software be verified prior to
                                                                                                              execution: [Assignment: organization-defined user-installed software].
                                                                                                              Discussion: Organizations verify the integrity of user-installed software prior to execution to
                                                                                                              reduce the likelihood of executing malicious code or programs that contains errors from
                                                                                                              unauthorized modifications. Organizations consider the practicality of approaches to
                                                                                                              verifying software integrity, including the availability of trustworthy checksums from
                                                                                                              software developers and vendors.
                                                                                                              Related Controls: CM-11.
                                                                                                       (13) SOFTWARE, FIRMWARE, AND INFORMATION INTEGRITY | CODE EXECUTION IN PROTECTED
                                                                                                              ENVIRONMENTS




                                                                                              CHAPTER THREE                                                                                             PAGE 347
