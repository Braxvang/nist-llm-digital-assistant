                                                                                         SECTION 5: RFID SECURITY CONTROLS



 Provides integrity protection, 54 and
 Does not transmit secrets over-the-air, which eliminates the risk of eavesdropping inherent with clear
  text passwords.
Weaknesses:

 The management of HMAC keys provides similar challenges to those of password management and
  may not be practical if mobile readers do not have reliable access to an HMAC key management
  system.
 The authenticity claims associated with HMAC authentication only hold when the HMAC key
  remains secret. If an adversary has physical access to a tag and can obtain its HMAC key, then the
  adversary can clone the tag. This attack, however, assumes that that the adversary has some level of
  expertise, both in reverse engineering the HMAC-capable tag and in producing a reasonable
  facsimile.
 When HMAC keys are shared across organizations, authenticity claims rely on an implicit trust
  between the organizations that may not be present in practice.
 HMAC requires greater computing power than password comparisons, and therefore requires more
  complex tag designs to support it.
5.3.1.3 Digital Signatures

Control: Readers digitally sign tag identifiers, time stamps, and related event data to provide for non-
repudiation of tag transactions. The resulting signatures are stored on tags for subsequent verification,
although recording signatures in enterprise subsystem databases provides additional assurance of the tag’s
chain of custody.

Digital signatures are based on asymmetric cryptography, also commonly referred to as public key
cryptography. Federal agencies implementing digital signature technology must comply with FIPS
Publication 196, Entity Authentication Using Public Key Cryptography. The use of digital signature
technology in the context of RFID systems is also referred to as authenticated RFID. It typically works
as follows:

1. The tag has a permanent unique identifier than cannot be modified after manufacture.

2. The reader generates a public/private key pair and obtains a corresponding public key certificate.

3. The reader uses a specified hash algorithm to compute a message digest of the tag’s identifier and
   possibly other transaction-related data, encrypts the message digest with its private key to create a
   digital signature for the transaction, and stores the resulting signature on the tag.

4. Other readers read the signature, decrypt it with the first reader’s public key, and compute the
   identical message digest to determine if a match exists. If the message digests match, then
   verification procedure provides assurance of the authenticity of the earlier transaction. If the message


     reader using a password, an adversary could simply use a rogue reader to obtain the password and then re-use with a
     legitimate reader. HMAC provides an effective countermeasure to this attack because it never reveals the secret key during
     any of its transactions.
54
     Integrity protection is when either tag or reader computes an HMAC using as input the data for which integrity protection is
     desired. Any change in the data results in a different value of the HMAC, which would be detected by the receiving entity.


                                                              5-13
