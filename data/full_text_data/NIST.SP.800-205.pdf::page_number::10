                                                                                             NIST SP 800-205                                                           ATTRIBUTE CONSIDERATIONS
                                                                                                                                                                    FOR ACCESS CONTROL SYSTEMS


                                                                                             1     Introduction


                                                                                             1.1    Purpose

                                                                                             Virtually all authorization systems are dependent on attributes for rendering access control
                                                                                             decisions and ultimately enforcing policy over subject access requests to system objects.

                                                                                             Perhaps the most deployed authorization scheme in use today is role-based access control (RBAC),
                                                                                             where roles (e.g., manager, accounts receivable clerk, loan officer) provide a means of expressing
                                                                                             a subject’s authority, responsibilities, or job functions. The process of assigning a role attribute
This publication is available free of charge from: https://doi.org/10.6028/NIST.SP.800-205




                                                                                             value to a subject indirectly grants the subject permissions that are associated with the role. An
                                                                                             emerging alternative to RBAC is to grant or deny subject requests to access system objects based
                                                                                             on enterprise-specific attributes of subjects and objects and, optionally, environment conditions
                                                                                             and policies that are expressed in terms of those attributes. This approach to access control is
                                                                                             commonly referred to as attribute-based access control (ABAC). Subject names and groups, as
                                                                                             applied in access control lists, are other examples of attributes used in formulating access policies
                                                                                             and computing decisions.

                                                                                             Access control systems typically encompass four layers of functional and information
                                                                                             decomposition—enforcement, decision, access control data, and administration—involving
                                                                                             several components that work together to bring about policy-preserving access. At its core is a
                                                                                             policy decision point (PDP) that computes decisions to permit or deny subject requests to perform
                                                                                             operations on system objects. A policy enforcement point (PEP) both issues requests and accepts
                                                                                             PDP decisions that are based on the current state of the access control data, which comprises access
                                                                                             control policies expressed in terms of attributes and attribute values. These values may, for
                                                                                             example, pertain to the attributes of a subject seeking access and the attributes of a target object.
                                                                                             Policies and attributes are managed through one or more Policy Administration Points.

                                                                                             Regardless of the type of authorization scheme being deployed, confidence in access control
                                                                                             decisions is dependent on the accuracy, integrity, and timely availability of attributes. If a subject
                                                                                             is inappropriately assigned an attribute value, whether through complacency, error, delay, or
                                                                                             malice, the result is the same—an inappropriate access state.

                                                                                             Over past decades, a variety of approaches have emerged for storing, managing, and applying
                                                                                             attributes. One approach is to tightly couple policies and attributes with the PDP. Consider Next
                                                                                             Generation Access Control (NGAC) [2], an ABAC standard where both policies and attributes are
                                                                                             managed through policy-preserving configurations of a standard set of elements and relations that
                                                                                             may reside in PDP memory. An eXtensible Access Control Markup Language (XACML)
                                                                                             deployment may provide a more distributed approach. Policies are expressed as extensible markup
                                                                                             language (XML) documents that are locally loaded into PDP memory from a policy retrieval point
                                                                                             and evaluated with respect to attributes that are remotely retrieved from one or more policy
                                                                                             information points. In another deployment, attributes are stored, managed, and shared (exchanged)
                                                                                             across a multitude of relying parities, each with their own PDP and policy store.

                                                                                             The approach used for storing, managing, and retrieving attributes is significant due to the relative
                                                                                             risk factors involved. An authorization system with local attributes affords a closed protection



                                                                                                                                               1
