                                                                                         GUIDE TO SECURE WEB SERVICES



The Liberty Alliance has defined the Identity Web Services Framework, which defines how Web services
can interact on a user’s behalf through appropriate use of SAML by defining several services, including
the following:

 Discovery Services. Allow Web services to dynamically look up the identity providers of a
  particular principal
 Interaction Services. Provide a mechanism for getting the principal’s permission to perform various
  actions
 Data Services. Provide the Web service functionality that will be used on behalf of the principal
 Identity Services. Provide access to information about the principal that may not be provided by the
                                                           33
  SAML assertion associated with the Web service request.

3.3.2.2 WS-Federation and WS-Trust

WS-Federation and WS-Trust were developed by IBM, Microsoft, RSA, Verisign, BEA, and several
other vendors to create an identity federation system based on extensions to WS-Security that uses the
core Web services protocols: SOAP and WSDL. WS-SecurityPolicy is an extension of the WS-Policy
framework that allows a Web service to define a set of requirements detailing how messages should be
secured and what tokens are required by the Web service. It is used by WS-Trust to determine what
tokens are needed to interact with a particular Web service. As discussed in Section 3.1.2, these are
referred to as claims.

WS-Trust is used to exchange trust tokens between Web services. WS-Trust is an extension to WS-
Security that provides methods for issuing, renewing, and validating security tokens as well as methods
for establishing and brokering trust relationships between Web services. If the requester does not supply
appropriate claims, it can use the security policy declared by WS-SecurityPolicy to determine the URI of
the provider’s Security Token Service (STS), who can provide the requester with the appropriate claims.
Additionally, WS-Trust supports multi-messaging exchanges, allowing providers to use a challenge-
response mechanism for authorization. Because WS-Trust builds upon WS-Security, claims can be
anything from a digital signature to a X.509 certificate or an XML-based token such as a SAML
assertion.

WS-Federation expands on WS-Trust by providing various protocols by which STSs (interchangeably
called Identity Providers in WS-Federation), requesters, and providers can interact with one another to
allow Web services to trust each other across organizational boundaries. Each organization is a separate
trust realm. WS-Federation allows Web services to communicate between multiple trust realms.
Additionally, WS-Federation provides two profiles for how requesters interact with providers and STSs:
the active requester profile and the passive requester profile. The passive requester profile details how
messages should be passed between a requester Web browser, the provider, the Identity Providers (IPs)
and STSs of both organizations so that WS-Federation can be used within the context of Web
applications, providing users with a single sign-on experience. The active requester profile details how
requesters should interact with the provider and the IP/STSs to access a provider in another trust realm.




33
     A summary of the Liberty Alliance Identity Web Services Framework can be found in the Liberty ID-WSF Overview v 1.1,
     available at http://www.projectliberty.org/liberty/content/download/1307/8286/file/liberty-idwsf-overview-v1.1.pdf.


                                                          3-10
