                                                              GUIDELINES ON ACTIVE CONTENT AND MOBILE CODE



5.2.5    Hybrids

It is also possible to combine more than one of the above classes of techniques to form a hybrid
mechanism. For example, Java incorporates both cage and signature techniques in its security model.
Model-carrying code is another example of a hybrid mechanism, which blends proof and cage techniques
[Sek03]. It obligates the producer to generate a behavioral model of its program as formal evidence.
Upon receipt, the consumer mechanically determines if the model conforms to security policies of
interest. Rather than statically verifying the behavioral model, an enforcement model is generated from it
for use by a runtime monitor (i.e., a behavioral sandbox). The runtime monitor is responsible for ensuring
the execution of mobile code conforms to the enforcement model.

5.3     Safeguard Summary

This section presented the management, operational, and technical safeguards for mitigating risks
associated with active content and mobile code described in Section 4. Safeguards are approved security
measures taken to prevent or reduce the risk of system compromise. While a considerable number of
safeguards exists, new techniques and refinements to existing ones can be expected as the use of active
content technologies continues to increase and evolve.




                                                  5-12
