NIST SP 800-38G                                        METHODS FOR FORMAT-PRESERVING ENCRYPTION


The character string hello would then be represented by the numeral string 7 4 11 11 14.
Other representations are possible.

The choice and implementation of a one-to-one correspondence between a given alphabet and
the set of base radix numerals that represents the alphabet is outside the scope of this publication.

In this publication, individual numerals are themselves represented in base ten. In order to
display numeral sequences unambiguously when the base is greater than ten, a delimiter between
the numerals is required, such as a space (as in the base 26 example above) or a comma.

FF1 and FF3 use different conventions for interpreting numeral strings as numbers. For FF1,
numbers are represented by strings of numerals with decreasing order of significance; for FF3,
numbers are represented by strings of numerals in the reverse order, i.e., with increasing order of
significance. Algorithms for the functions that convert numeral strings to numbers and vice versa
are given in Sec. 4.6.

4.2   Examples of Basic Operations and Functions

Given a positive real number x, the base 2 logarithm of x, denoted by LOG(x), is the unique real
number for which 2LOG(x) = x. For example, LOG(64) = 6 and LOG(10) ≈ 3.32.

Given a real number x, the floor function, denoted by ⌊x⌋, is the greatest integer that does not
exceed x. For example, ⌊2.1⌋ = 2, and ⌊4⌋ = 4.

Given a real number x, the ceiling function, denoted by ⎡x⎤, is the least integer that is not less
than x. For example, ⎡2.1⎤ = 3, and ⎡4⎤ = 4.

Given two integers i and j with i ≤ j, the set of integers between i and j, including i and j, is
denoted by [i .. j]. For example, [2 .. 5] = {2, 3, 4, 5}.

Given a real number x and a positive integer m, the remainder of x modulo m, denoted by x mod
m, is x – m⌊x/m⌋. For example, -3 mod 7 = 4, and 13 mod 7 = 6.

Given a positive integer s, 0s denotes the string that consists of s ‘0’ bits. For example,
08 = 00000000.

The concatenation operation on bit strings or numeral strings is denoted by ||. For example,
001 || 1011 = 0011011, and 3 1 || 31 8 10 = 3 1 31 8 10.

Given bit strings of equal length, the exclusive-OR (XOR) operation, denoted by ⊕, specifies
the addition, modulo 2, of the bits in corresponding bit positions. For example,
10011 ⊕ 10101 = 00110.

Given a numeral or bit string X, its length is denoted by LEN(X). For example, LEN(010) = 3.

Given a byte string X—i.e., a bit string that could be represented as the concatenation of a
sequence of bytes—the length of X in bytes, i.e., LEN(X)/8, is denoted by BYTELEN(X). For
example, BYTELEN(1011100110101100) = 2.

                                                 7
