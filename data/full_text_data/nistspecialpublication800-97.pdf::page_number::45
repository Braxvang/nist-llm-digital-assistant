                                             ESTABLISHING WIRELESS ROBUST SECURITY NETWORKS: A GUIDE TO IEEE 802.11I



      Replay prevention through a frame sequencing technique
      Use of a new encryption key for each frame to prevent attacks such as the Fluhrer-Mantin-Shamir
       (FMS) attack, which can compromise WEP-based WLANs 41
      Implementation of countermeasures whenever the STA or AP encounters a frame with a MIC
       error, which is a strong indication of an active attack.
Sections 4.3.1.1 and 4.3.1.2 briefly describe the TKIP encapsulation and decapsulation procedures,
including countermeasures.

4.3.1.1 TKIP Encapsulation

Encapsulation is the process of generating the cryptographic payload (ciphertext) from the plaintext data.
The plaintext data comprises user traffic and the source and destination MAC addresses. TKIP
encapsulation builds upon the WEP encapsulation technique, modifying WEP with additional features
through software, to bolster security without requiring hardware changes. TKIP uses three distinct keys:
two integrity keys and an encryption key. The primary characteristics of TKIP encapsulation are
presented briefly as follows:

      Two 64-bit message integrity keys are used with the Michael message digest algorithm to
       produce a message integrity code (MIC). One key is used to provide integrity protection for each
       half-duplex data channel between the STA and AP. The MIC is computed over the user data,
       source and destination addresses, and priority bits to provide data integrity. Due to design
       constraints, an attacker can use sophisticated methods to forge information without detection.
       Accordingly, TKIP decapsulation employs additional countermeasures, as discussed in Section
       4.3.1.2, to partially mitigate the risk of these attacks.
      A monotonically increasing TKIP Sequence Counter (TSC) is assigned to each frame. The TSC
       provides protection against replay attacks. If frames do not arrive in order, the receiver simply
       drops them.
      A two-phase cryptographic key-mixing process occurs to produce a new key for every frame that
       is transmitted. The process takes a session Temporal Key along with the dynamically changing
       TSC to create a dynamic WEP key.
      The original user frame, the computed 64-bit MIC, and the transmitter address are encrypted
       using WEP (with RC4) and the per-frame WEP key. Dynamic key updates and other
       countermeasures provide additional security.
Although the destination and source addresses and priority and payload are used as inputs by the Michael
algorithm, only the payload is encrypted. Because the frame header contains the source and destination
addresses and priority, the MIC generated by Michael incorporates them. This prevents an adversary
from modifying the frame header addresses to spoof the source or redirect the frame to an unauthorized


40
     For more information on Michael and its MIC, see Niels Ferguson’s 2002 paper, “Michael: An Improved MIC for 802.11
     WEP”, at http://grouper.ieee.org/groups/802/11/Documents/DocumentHolder/2-020.zip.
41
     Developed in 2001, the FMS attack is now codified in tools that can crack WEP with a few hours of recorded traffic. A full
     explanation of the attack is beyond the scope of this document. However, it relies on the fact that certain weak IVs can
     generate predictable key streams. The attack also leverages the fact that protocols limit the possible options for frame and
     packet headers, even if they are encrypted prior to transmission. With known ciphertext and good guesses available for both
     the key stream and portions of the plaintext, the FMS technique can discover the underlying WEP key. Because the FMS
     attack iteratively uncovers the key one byte at a time, increasing the length of the key is a futile defense against the attack.


                                                                4-9
