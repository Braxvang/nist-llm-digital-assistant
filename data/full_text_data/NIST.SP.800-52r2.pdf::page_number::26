NIST SP 800-52 REV. 2                                                               GUIDELINES FOR TLS IMPLEMENTATIONS


    •    TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA 21 (0xC0, 0x09)
    •    TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA (0xC0, 0x0A)

3.3.1.1.2 Cipher Suites for RSA Certificates

TLS 1.2 servers that are configured with RSA certificates may be configured to support the
following cipher suites:

    •    TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 (0xC0, 0x2F)
    •    TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384 (0xC0, 0x30)
    •    TLS_DHE_RSA_WITH_AES_128_GCM_SHA256 (0x00, 0x9E)
    •    TLS_DHE_RSA_WITH_AES_256_GCM_SHA384 (0x00, 0x9F)
    •    TLS_DHE_RSA_WITH_AES_128_CCM (0xC0, 0x9E)
    •    TLS_DHE_RSA_WITH_AES_256_CCM (0xC0, 0x9F)
    •    TLS_DHE_RSA_WITH_AES_128_CCM_8 (0xC0, 0xA2)
    •    TLS_DHE_RSA_WITH_AES_256_CCM_8 (0xC0, 0xA3)
    •    TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256 (0xC0, 0x27)
    •    TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384 (0xC0, 0x28)
    •    TLS_DHE_RSA_WITH_AES_128_CBC_SHA256 (0x00, 0x67)
    •    TLS_DHE_RSA_WITH_AES_256_CBC_SHA256 (0x00, 0x6B)

TLS servers may be configured to support the following cipher suites when RSA certificates are
used with TLS versions 1.2, 1.1, or 1.0:

    •    TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA (0xC0, 0x13)
    •    TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA (0xC0, 0x14)
    •    TLS_DHE_RSA_WITH_AES_128_CBC_SHA (0x00, 0x33)
    •    TLS_DHE_RSA_WITH_AES_256_CBC_SHA (0x00, 0x39)

3.3.1.1.3 Cipher Suites for DSA Certificates

TLS 1.2 servers that are configured with DSA certificates may be configured to support the
following cipher suites:

    •    TLS_DHE_DSS_WITH_AES_128_GCM_SHA256 (0x00, 0xA2)
    •    TLS_DHE_DSS_WITH_AES_256_GCM_SHA384 (0x00, 0xA3)
    •    TLS_DHE_DSS_WITH_AES_128_CBC_SHA256 (0x00, 0x40)


21 In TLS versions 1.0 and 1.1, DHE and ECDHE cipher suites use SHA-1 for signature generation on the ephemeral parameters

    (including keys) in the ServerKeyExchange message. While the use of SHA-1 for digital signature generation is generally
    disallowed by [10], exceptions can be granted by protocol-specific guidance. SHA-1 is allowed for generating digital
    signatures on ephemeral parameters in TLS. Due to the random nature of the ephemeral keys, a third party is unlikely to
    cause effective collision. The server and client do not have anything to gain by causing a collision for the connection.
    Because of the client random and server random values, the server, the client, or a third party cannot use a colliding set of
    messages to masquerade as the client or server in future connections. Any modification to the parameters by a third party
    during the handshake will ultimately result in a failed connection.


                                                               17
