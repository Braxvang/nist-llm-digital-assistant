                                                                                               NIST SP 800-163 REV. 1                                                    VETTING THE SECURITY OF MOBILE APPS


                                                                                                     •    Enhancement CM-7 (5) Least Functionality, Unauthorized Software−Whitelisting is a
                                                                                                          deny-all, permit-by-exception policy to allow the execution of only authorized software
                                                                                                          programs on the system. This requires the organization to develop and maintain a list of
                                                                                                          authorized software (apps)

                                                                                               Both whitelisting and blacklisting can be augmented and facilitated via MAM/MDM software.
                                                                                               For federal organizations it is important to note at the time of this document’s publication, 800-
                                                                                               53 Rev. 4 recommends blacklisting for systems in the moderate baseline allocation and
                                                                                               whitelisting for systems with high baseline allocation. Future revisions of 800-53 14 may also
                                                                                               recommend blacklisting and whitelisting in both the moderate and high baseline allocations.

                                                                                               5.3       App Vetting Limitations

                                                                                               As with any software assurance process, there is no guarantee that even the most thorough
This publication is available free of charge from: https://doi.org/10.6028/NIST.SP.800-163r1




                                                                                               vetting process will uncover all potential vulnerabilities or malicious behavior. Organizations
                                                                                               should be made aware that although app security assessments generally improve the security
                                                                                               posture of the organization, the degree to which they do so may not be easily or immediately
                                                                                               ascertained. Organizations should also be made aware of what the vetting process does and does
                                                                                               not provide in terms of security.

                                                                                               Organizations should also be educated on the value of humans in security assessment processes
                                                                                               and ensure that their app vetting does not rely solely on automated tests. Security analysis is
                                                                                               primarily a human-driven process [19] [32]; automated tools by themselves cannot address many
                                                                                               of the contextual and nuanced interdependencies that underlie software security. The most
                                                                                               obvious reason for this is that fully understanding software behavior is one of the classic
                                                                                               impossible problems of computer science [33], and in fact current technology has not even
                                                                                               reached the limits of what is theoretically possible. Complex, multifaceted software architectures
                                                                                               cannot be fully analyzed by automated means.

                                                                                               Additionally, current software analysis tools do not inherently understand what software has to
                                                                                               do to behave in a secure manner in a particular context. For example, failure to encrypt data
                                                                                               transmitted to the cloud may not be a security issue if the transmission is tunneled through a
                                                                                               virtual private network (VPN). Even if the security requirements for an app have been correctly
                                                                                               predicted and are completely understood, there is no current technology for unambiguously
                                                                                               translating human-readable requirements into a form that can be understood by machines.

                                                                                               For these reasons, security analysis requires human analysts be in the loop, and by extension the
                                                                                               quality of the outcome depends, among other things, on the level of human effort and expertise
                                                                                               available for an evaluation. Analysts should be familiar with standard processes and best
                                                                                               practices for software security assessment [19] [34–36]. In order to be successful, a robust app
                                                                                               vetting process should use a toolbox approach where multiple assessment tools and processes, as
                                                                                               well as human interaction work together. Reliance on only a single tool, even with human
                                                                                               interaction, is a significant risk because of the inherent limitations of each tool.



                                                                                               14 https://csrc.nist.gov/publications/detail/sp/800-53/rev-5/draft




                                                                                                                                                                    22
