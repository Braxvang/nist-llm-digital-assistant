                                                                               GUIDE TO SECURE WEB SERVICES



service candidates in the registry, performance rankings for algorithms used to search, match and
compose services can vary from case to case.

As the set of available Web services expands, advanced tools to help identify services that match a
customerâ€™s functional and security requirements become increasingly important. It is important for
service providers to describe their service capabilities and service requesters to describe their
requirements in an unambiguous and semantic way. Techniques that take advantage of Semantic Web
technologies can improve discovery capabilities. The Ontology Web Language for Services (OWL-S) is
an example, but more work needs to be done to integrate such technologies into Web service registries.
In OWL-S, the service requester can describe the service requirements using terms from a semantic
model. Reasoning techniques are then used to find the semantic similarity between the service
description and the request to find a set of matching services automatically. While both UDDI and OWL-
S can be used to specify the security properties of a Web service, such support is not inherent in the
discovery system. However, W3C's Semantic Annotations for WSDL is a step in the direction of
merging Web services discovery technology with semantic Web technology. Even with semantic Web
services discovery, true automation will require that the requester be able to determine explicitly the
security requirements of the provider in addition to its functionality.

End to End Quality of Service and Protection

Most Web services deployed do not provide guarantees for Quality of Service (QoS) or Quality of
Protection (QoP) under the scenario of attacks. QoS is important in defining the expected level of
performance a particular Web service will have. By prioritizing traffic, overall performance of the system
can be improved. The WS-Reliability and WS-ReliableMessaging standards provide some level of QoS.
Both standards support guaranteed message delivery and message ordering. The standard considers other
QoS parameters, such as rate of failure or average latency, as out of scope because they are usually dealt
with by lower layer protocols. For Web services to truly support QoS, existing QoS support must be
extended so that the packets corresponding to individual Web service messages can be routed accordingly
to achieve predictable performance.

Overlap between OASIS and W3C Standards

Similar and overlapping Web services security standards that are being developed by multiple standard
bodies are a source of confusion to system developers. Moreover, these standards are constantly being
updated, resulting in interoperability problems. There is a need for more formal specification and testing
of standards.

Methodologies for Web Services Security

The main emphasis of Web services security today is on basic infrastructure (e.g., protocols and
languages). As technology matures and Web services become widely adopted, there will be a need for
methodologies and recommended practices for security to help developers identify assets to be protected,
analyze possible attacks, and decide protection levels and tradeoffs.

Availability and Protection from Denial of Service Attacks

Availability enables a Web services application to detect a Denial of Service (DoS) attack, to continue
operation as long as possible, and then to gracefully recover and resume operations after a DoS attack.
There is a need for techniques to replicate data and services to ensure continuity of operations in the event
of a fault. There is also a need for management and monitoring solutions to provide service performance
and availability monitoring to meet certain service level objectives.



                                                    ES-3
