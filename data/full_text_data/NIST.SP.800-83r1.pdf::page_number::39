                                 GUIDE TO MALWARE INCIDENT PREVENTION AND HANDLING FOR DESKTOPS AND LAPTOPS


case, shutting down the affected services might be the best way to contain the infection without losing all
services. This action is typically performed at the application level (e.g., disabling a service on servers) or
at the network level (e.g., configuring firewalls to block IP addresses or ports associated with a service).
The goal is to disable as little functionality as possible while containing the incident effectively. To
support the disabling of network services, organizations should maintain lists of the services they use and
the TCP and UDP ports used by each service.

From a technology standpoint, disabling a service is generally a simple process; understanding the
consequences of doing so tends to be more challenging. Disabling a service that the organization relies on
has an obvious negative impact on the organization’s functions. Also, disabling a service might
inadvertently disrupt other services that depend on it. For example, disabling email services could impair
directory services that replicate information through email. Organizations should maintain a list of
dependencies between major services so that incident handlers are aware of them when making
containment decisions. Also, organizations might find it helpful to provide alternative services with
similar functionality. For example, in a highly managed environment, if a vulnerability in an email client
were being exploited by a new virus, users could be blocked temporarily from using that email client and
instead directed to use a web-based email client that did not have the vulnerability. This step would help
contain the incident while providing users with email access. The same strategy could be used for cases
involving exploitation of vulnerabilities in web browsers and other common client applications.

4.3.4   Containment Through Disabling Connectivity

Containing incidents by placing temporary restrictions on network connectivity can be very effective. For
example, if infected hosts attempt to establish connections with an external host to download rootkits,
handlers should consider blocking all access to the external host (by IP address or domain name, as
appropriate). Similarly, if infected hosts within the organization attempt to spread their malware, the
organization might block network traffic from the hosts’ IP addresses to control the situation while the
infected hosts are physically located and disinfected. An alternative to blocking network access for
particular IP addresses is to disconnect the infected hosts from the network, which could be accomplished
by reconfiguring network devices to deny network access or physically disconnecting network cables
from infected hosts.

The most drastic containment step is purposely breaking needed network connectivity for uninfected
hosts. This could eliminate network access for groups of hosts, such as remote VPN users. In worst-case
scenarios, isolating subnets from the primary network or the Internet might be necessary to stop the
spread of malware, halt damage to hosts, and provide an opportunity to mitigate vulnerabilities.
Implementing a widespread loss of connectivity to achieve containment is most likely to be acceptable to
an organization in cases in which malware activity is already causing severe network disruptions or
infected hosts are performing an attack against other organizations. Because a major loss of connectivity
almost always affects many organizational functions, connectivity usually must be restored as soon as
possible.

Organizations can design and implement their networks to make containment through loss of connectivity
easier to do and less disruptive. For example, some organizations place their servers and workstations on
separate subnets; during a malware incident targeting workstations, the infected workstation subnets can
be isolated from the main network, and the server subnets can continue to provide functionality to
external customers and internal workstation subnets that are not infected. Another network design strategy
related to malware containment is the use of separate virtual local area networks (VLAN) for infected
hosts. With this design, a host’s security posture is checked when it wants to join the network, and also
may be checked periodically while connected. The security checking is often done through network
access control software by placing on each host an agent that monitors various characteristics of the host,


                                                      28
