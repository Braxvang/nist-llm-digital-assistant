Practical Combinatorial Testing
________________________________________________________________

Definition. We define a sequence covering array, SCA(N, S, t) as an N x S matrix where
entries are from a finite set S of s symbols, such that every t-way permutation of symbols
from S occurs in at least one row; the t symbols in the permutation are not required to be
adjacent. That is, for every t-way arrangement of symbols x1, x2, ..., xt, the regular
expression .*x1.*x2.*xt.* matches at least one row in the array. Sequence covering arrays,
as the name implies, are analogous to standard covering arrays, which include at least one
of every t-way combination of any n variables, where t<n. A variety of algorithms are
available for constructing covering arrays, but these are not usable for generating t-way
sequences because they are designed to cover combinations in any order.

Example 1. Consider the problem of testing four events, a, b, c, and d. For convenience, a
t-way permutation of symbols is referred to as a t-way sequence. There are 4! = 24 possible
permutations of these four events, but we can test all 3-way sequences of these events with
only six tests (see Table 7).

                                        Test
                                         1         a   d   b   c
                                         2         b   a   c   d
                                         3         b   d   c   a
                                         4         c   a   b   d
                                         5         c   d   b   a
                                         6         d   a   c   b

                              Table 7. Tests for four events.


5.1   Constructing Sequence Covering Arrays

         A 2-way sequence covering array can be constructed by listing the events in some order for
one test and in reverse order for the second test:

                                         1     a   b   c   d
                                         2     d   c   b   a

To see that the procedure in Example 2 generates tests that cover all 2-way sequences, note
that for 2-way sequence coverage, every pair of variables x and y, x..y and y..x must both be
in some test (where a..b means that a is eventually followed by b). All variables are
included in each test, therefore any sequence x..y must be in either test 1 or test 2 and its
reverse y..x in the other test.

        For t-way sequence test generation, where t > 2, we use a greedy algorithm that
generates a large number of tests, scores each by the number of previously uncovered
sequences it covers, then chooses the highest scoring test. This simple approach produces
surprisingly good results,

5.2   Using Sequence Covering Arrays

    Sequence covering arrays have been incorporated into operational testing for a
mission-critical system that uses multiple devices with inputs and outputs to a laptop



24
