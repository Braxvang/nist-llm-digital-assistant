                                                                                                 NIST SP 800-160, VOL. 2, REV. 1                                         DEVELOPING CYBER-RESILIENT SYSTEMS
                                                                                                 _________________________________________________________________________________________________


                                                                                                 and transmission overhead. Therefore, this structural principle is most effective in support of
                                                                                                 the Focus on common critical assets strategic principle.

                                                                                                 Ideally, any system element that cannot be determined to be trustworthy—initially via
                                                                                                 hardware and software assurance processes and subsequently via Substantiated Integrity—
                                                                                                 should be assumed to be compromised. However, in practice, that assumption is difficult to
                                                                                                 apply. This principle is consistent with the weaker assumption that some resources will be
                                                                                                 compromised and calls for mechanisms to detect and respond to evidence of compromise.

                                                                                                 Mechanisms to determine trustworthiness need to be applied in a coordinated manner, across
This publication is available free of charge from: https://doi.org/10.6028/NIST.SP.800-160v2r1




                                                                                                 architectural layers, among different types of system elements, and (if applicable) with insider
                                                                                                 threat controls.

                                                                                                 D.5.2.13 Change or Disrupt the Attack Surface
                                                                                                 Disruption of the attack surface can also lead an adversary to reveal its presence. A growing set
                                                                                                 of moving target defenses is intended to change or disrupt the attack surface of a system.
                                                                                                 Moving Target Defense (MTD) is an active area of research and development. MTD can be
                                                                                                 categorized in terms of the layer or level at which the defenses are applied (e.g., software,
                                                                                                 runtime environment, data, platform, and network). However, MTD can be applied at other
                                                                                                 layers. For example, when this design principle is used in conjunction with the Make resources
                                                                                                 location-versatile principle, MTD can also be applied at the physical or geographic levels. MTD is
                                                                                                 particularly well-suited to cloud architectures [Shetty16] where implementation is at the
                                                                                                 middleware level.

                                                                                                 MTD can also be categorized in terms of strategy: move, morph, or switch. Resources can be
                                                                                                 moved (e.g., execution of a service can be moved from one platform or virtual machine to
                                                                                                 another). This approach, which leverages the design principle of Dynamic Positioning, can be
                                                                                                 used in conjunction with the Make resources location-versatile principle. The terms “cyber
                                                                                                 maneuver” and MTD are often reserved for morphing—that is, making specific changes to the
                                                                                                 properties of the data, runtime environment, software, platform, or network [Okhravi13] or by
                                                                                                 using configuration changes in conjunction with the techniques of Diversity and Unpredictability
                                                                                                 or randomization [Jajodia11, Jajodia12] rather than including relocation or distribution. Data or
                                                                                                 software can be morphed using synthetic diversity; the behavior of system elements can be
                                                                                                 morphed via configuration or resource allocation changes. Morphing can also be part of a
                                                                                                 Deception strategy. Finally, switching can leverage diversity and distributed resources. Mission
                                                                                                 applications that rely on a supporting service can switch from one implementation of the service
                                                                                                 to another. Switching can also be used in conjunction with Deception, as when adversary
                                                                                                 interactions with the system are switched to a deception environment.

                                                                                                 This structural design principle supports the Expect adversaries to evolve strategic principle. It
                                                                                                 can also support the Reduce attack surfaces strategic principle. Alternately, the principle can
                                                                                                 support the Assume compromised resources principle. When Unpredictability is part of the way
                                                                                                 this principle is applied, it should be used in conjunction with the Make the effects of deception
                                                                                                 and unpredictability user-transparent structural principle.

                                                                                                 D.5.2.14 Make Deception and Unpredictability Effects User-Transparent
                                                                                                 Deception and unpredictability are intended to increase an adversary’s uncertainty about the
                                                                                                 system’s structure and behavior, what effects an adversary might be able to achieve, and what


                                                                                                 APPENDIX D                                                                                        PAGE 131
