                                                                                              NIST SP 800-204B                                                  ABAC FOR MICROSERVICES-BASED
                                                                                                                                                              APPLICATIONS USING A SERVICE MESH

                                                                                              4     Authentication and Authorization Policy Configuration in Service Mesh

                                                                                              Fine-grained access control for microservices can be enforced through the configuration of
                                                                                              authentication and access control policies. These policies are defined in the control plane of the
                                                                                              service mesh, mapped into low-level configurations, and pushed into the sidecar proxies that
                                                                                              form the data plane of the service mesh. The configurations enable the proxies to enforce the
                                                                                              policies at application runtime (or request time), thus making the proxies act as Policy
                                                                                              Enforcement Points (PEPs). As stated in the introduction, the objective of this document is to
                                                                                              provide guidance for the deployment of an authentication and authorization framework that is
                                                                                              external to the application and agnostic to the platform hosting the application and the service
                                                                                              mesh product that implements the application infrastructure. However, Kubernetes is used as
This publication is available free of charge from: https://doi.org/10.6028/NIST.SP.800-204B




                                                                                              the reference application platform and Istio as the service mesh infrastructure platform to
                                                                                              provide concrete examples of the concepts and to allow for recommendations with more clarity
                                                                                              and specificity.

                                                                                              4.1   Application Orchestration and Resource Management Platform Configuration

                                                                                              The reference application orchestration and resource management platform configuration data
                                                                                              for microservices-based applications using service mesh that are, at the minimum, needed for
                                                                                              authentication and authorization policy configuration are:

                                                                                              • Metadata, like application service name and the sets of instances of that service hosted on
                                                                                                the orchestration platform (such as Kubernetes)
                                                                                              ● Runtime data, such as a service’s protocols and ports
                                                                                              ● Namespaces that provide logical isolation boundaries for sets of services
                                                                                              ● Unique runtime identities for each service

                                                                                              In the instance of the reference platform Kubernetes, this is realized as:

                                                                                              ● Service resource, which declares a service’s name, protocol (e.g., TCP), and ports (e.g.,
                                                                                                9080)
                                                                                              ● Deployment resource, which declares deployment of pods that implement that service,
                                                                                                including metadata such as labels and version
                                                                                              ● Namespace construct and Role-based Access Control (RBAC) for managing how users are
                                                                                                allowed to publish configuration into namespaces
                                                                                              ● Service accounts, which are identities unique to each namespace bound to individual
                                                                                                services

                                                                                              4.2   Service Mesh Configuration

                                                                                              The installation of any service mesh involves the following components:

                                                                                              ● Ingress Gateway, which is the first point of entry into the microservices-based application.
                                                                                                This gateway specification includes names, ports, and routes that the application client must
                                                                                                take to access the application. In some implementations, an ingress gateway is optional as
                                                                                                the sidecar itself can perform its functions.
                                                                                              ● Egress gateway for the application to call outside services or applications. Just like an

                                                                                                                                                13
