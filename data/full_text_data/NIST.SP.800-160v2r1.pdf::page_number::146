                                                                                                 NIST SP 800-160, VOL. 2, REV. 1                                         DEVELOPING CYBER-RESILIENT SYSTEMS
                                                                                                 _________________________________________________________________________________________________


                                                                                                 other software executes [SP 800-125B], enable processes, services, and applications to be
                                                                                                 transient. At the network layer, technologies for network virtualization, network functions
                                                                                                 virtualization, software-defined networking, and just-in-time connectivity can support non-
                                                                                                 persistence. Data virtualization provides a strategy for reducing persistent local data stores. As
                                                                                                 noted above, this principle is synergistic with Make resources location-versatile. Since transient
                                                                                                 resources can be virtually isolated, this principle can also be used in conjunction with Contain
                                                                                                 and exclude behaviors.

                                                                                                 Logical transient system elements (e.g., processes, files, connections) need to be expunged (i.e.,
                                                                                                 removed in such a way that no data remains on the shared resources). 132 If an executing process
This publication is available free of charge from: https://doi.org/10.6028/NIST.SP.800-160v2r1




                                                                                                 or service has been compromised by malicious software that changes its behavior or corrupts
                                                                                                 the data it offers to other system elements, expunging it—either by bringing it down or by
                                                                                                 moving it and deleting the prior instance—also mitigates the compromise. This can be done in
                                                                                                 response to suspicious behavior or be deliberately unpredictable.

                                                                                                 In addition, system elements can be made attritable and expendable, such as in the case of
                                                                                                 unmanned air systems. These physically transient system elements also need mechanisms for
                                                                                                 ensuring that no data is left behind.

                                                                                                 The instantiation of a transient resource depends on being able to Determine ongoing
                                                                                                 trustworthiness of the resources from which it is constructed. Support for such verification
                                                                                                 and/or validation can include gold copies of software and configuration data, policy data for
                                                                                                 network function virtualization, and data quality validation as part of data virtualization.

                                                                                                 D.5.2.12 Determine Ongoing Trustworthiness
                                                                                                 In the Command and Control and Defense Evasion phases of the cyber-attack life cycle
                                                                                                 [MITRE18], an adversary can modify system components (e.g., modify software, replace
                                                                                                 legitimate software with malware), system data (e.g., modify configuration files, fabricate
                                                                                                 entries in an authorization database, fabricate or delete audit data), or mission or business data
                                                                                                 (e.g., deleting, changing, or inserting entries in a mission or business database; replacing user-
                                                                                                 created files with fabricated versions). These modifications enable the adversary to take actions
                                                                                                 in the Impact and Persistence phases of the cyber-attack life cycle. Periodic or ongoing validation
                                                                                                 can detect the effects of adversary activities before they become too significant or irremediable.

                                                                                                 A variety of Substantiated Integrity mechanisms can be used to identify suspicious changes to
                                                                                                 properties or behavior. Some behaviors (e.g., the frequency with which a service makes
                                                                                                 requests, the latency between a request to it and its response, and the size of requests or
                                                                                                 responses it makes) can be verified or validated by other services. Other behaviors (e.g.,
                                                                                                 processor, memory, disk, or network) can be verified or validated by other system components
                                                                                                 (e.g., the operating system’s task manager). Note that making the behavior capable of being
                                                                                                 verified or validated can impede the use of unpredictability.

                                                                                                 This principle is strongly synergistic with Manage resources (risk-) adaptively. Some changes can
                                                                                                 trigger the use of Privilege Restriction or Analytic Monitoring mechanisms. Other changes can
                                                                                                 trigger quarantine via Segmentation. However, such mechanisms can add storage, processing,


                                                                                                 132 See [SP 800-53] controls SC-4 (Information in Shared System Resources) and MP-6 (Media Sanitization).




                                                                                                 APPENDIX D                                                                                                  PAGE 130
