                                                                                               NIST SP 800-177 REV. 1                                                             TRUSTWORTHY EMAIL




                                                                                               �e public part of the key pair is stored in a the DKIM TXT Resource Record (RR). �is record
                                                                                               should be added to the organization’s DNS server and tested to make sure that it is accessible
                                                                                               both within and outside the organization.

                                                                                               �e private part of the key pair is used by the MTA to sign outgoing mail. Administrators must
                                                                                               conﬁgure their mail systems to protect the private part of the key pair from exposure to prevent
                                                                                               an attacker from learning the key and using it to spoof email with the victim domain's DKIM
                                                                                               key. For example, if the private part of the key pair is kept in a ﬁle, ﬁle permissions must be set
                                                                                               so that only the user under which the MTA is running can read it.

                                                                                               As with any cryptographic keying material, enterprises should use a Cryptographic Key
                                                                                               Management System (CKMS) to manage the generation, distribution, and lifecycle of DKIM
                                                                                               keys. Federal agencies are encouraged to consult NIST SP 800-130 [SP800-130] and NIST SP
                                                                                               800-152 [SP800-152] for guidance on how to design and implement a CKMS within an agency.
This publication is available free of charge from: https://doi.org/10.6028/NIST.SP.800-177r1




                                                                                               Security Recommendation 4-3: Federal agency administrators shall only use keys with
                                                                                               approved algorithms and lengths for use with DKIM.

                                                                                               Security Recommendation 4-4: Administrators should ensure that the private portion of the
                                                                                               key pair is adequately protected on the sending MTA and that only the MTA software has read
                                                                                               privileges for the key. Federal agency administrators should follow FISMA control SC-12
                                                                                               [SP800-53] guidance with regards to distributing and protecting DKIM key pairs.

                                                                                               Security Recommendation 4-5: Each sending MTA should be conﬁgured with its own
                                                                                               private key and its own selector value, to minimize the damage that may occur if a private key is
                                                                                               compromised. �is private key must have protection against both accidental disclosure or
                                                                                               attacker’s attempt to obtain or modify.

                                                                                               4.5.4   Example of a DKIM Signature

                                                                                               Below is an example of a DKIM signature as would be seen in an email header. A signature is
                                                                                               made up of a collection of tag=value pairs that contain parameters needed to successfully
                                                                                               validate the signature as well as the signature itself. An administrator usually cannot conﬁgure
                                                                                               the tags individually as these are done by the MTA functionality that does DKIM, though some
                                                                                               require conﬁguration (such as the selector, discussed above). Some common tags are described
                                                                                               in Table 4-4.
                                                                                                                        Table 4-4: DKIM Signature Tag and Value Descriptions

                                                                                                       Tag                Name                                      Description
                                                                                                       v=    Version                            Version of DKIM in use by the signer. Currently
                                                                                                                                                the only deﬁned value is "1".
                                                                                                       a=    Algorithm                          �e algorithm used (rsa-sha1 or rsa-sha256)
                                                                                                       b=    Signature (“base”)                 �e actual signature encoded as a base64 string
                                                                                                                                                in textual representations


                                                                                                                                                37
