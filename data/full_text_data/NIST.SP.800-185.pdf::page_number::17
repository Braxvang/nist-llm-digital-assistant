                                                                                             NIST SP 800-185                                               SHA-3 DERIVED FUNCTIONS: CSHAKE,
                                                                                                                                                          KMAC, TUPLEHASH, AND PARALLELHASH

                                                                                             KMAC256(K, X, L, S):
                                                                                             Validity Conditions: len(K) <22040 and 0 ≤ L < 22040 and len(S) < 22040

                                                                                             1. newX = bytepad(encode_string(K), 136) || X || right_encode(L).
                                                                                             2. return cSHAKE256(newX, L, “KMAC”, S).

                                                                                             Note that the numbers 168 and 136 are rates (in bytes) of the KECCAK[256] and KECCAK[512]
                                                                                             sponge functions, respectively.

                                                                                             4.3.1   KMAC with Arbitrary-Length Output

                                                                                             Some applications of KMAC may not know the number of output bits they will need until after
This publication is available free of charge from: https://doi.org/10.6028/NIST.SP.800-185




                                                                                             the outputs begin to be produced. For these applications, KMAC can also be used as a XOF (i.e.,
                                                                                             the output can be extended to any desired length), which mimics the behavior of cSHAKE.

                                                                                             When used as a XOF, KMAC is computed by setting the encoded output length to 0, as shown in
                                                                                             right_encode(0) in Step 1 of the KMACXOF128(K, X, L, S) and KMACXOF256(K, X, L, S)
                                                                                             pseudocodes below. Conceptually, KMAC in XOF mode produces an infinite-length output
                                                                                             string, and the caller simply uses as many bits of the output string as are needed. Truncated
                                                                                             outputs of KMAC in XOF mode can be computed by the function KMACXOF128(K, X, L, S) or
                                                                                             KMACXOF256(K, X, L, S) given by the following pseudocode:

                                                                                             KMACXOF128(K, X, L, S):
                                                                                             Validity Conditions: len(K) < 22040 and 0 ≤ L and len(S) < 22040

                                                                                             1. newX = bytepad(encode_string(K), 168) || X || right_encode(0).
                                                                                             2. return cSHAKE128(newX, L, “KMAC”, S).

                                                                                             KMACXOF256(K, X, L, S):
                                                                                             Validity Conditions: len(K) <22040 and 0 ≤ L and len(S) < 22040

                                                                                             1. newX = bytepad(encode_string(K), 136) || X || right_encode(0).
                                                                                             2. return cSHAKE256(newX, L, “KMAC”, S).




                                                                                                                                             11
