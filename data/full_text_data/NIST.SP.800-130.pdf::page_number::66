SP 800-130                                                              August 2013



6.7.2 Restricting Cryptographic-Module Entry and Output of Plaintext Keys
A well-designed CKMS will minimize the access of humans to plaintext keys. The
primary need for keys to be in plaintext is when they are performing cryptographic
functions within a cryptographic module. These modules usually provide physical
protection to the plaintext keys so that they will not be exposed. The module may
generate the keys and perform cryptographic functions on behalf of humans, and the
humans need never see a plaintext symmetric or private key. This feature makes a CKMS
using such modules more transparent and more secure. For example, a private key
transport key could be generated within the module and never be allowed to leave the
module. Keys that are output from the module could be transported (in encrypted form)
using a key transport scheme. A symmetric encryption/decryption key could be encrypted
and transported using the public key of the receiving entity. A key may be securely stored
outside of the module when encrypted under a public key storage key or symmetric key
wrapping key. Sometimes, plaintext key output is permitted to support legacy systems. In
such cases, multi-party control, discussed in Section 6.7.4 below, should be considered.

Requirements for the entry and output of keys into and from a cryptographic module are
specified in Section 6.4.19 and Section 6.4.20, respectively.

FR: 6.94 The CKMS design shall specify the circumstances under which plaintext secret
or plaintext private keys are entered into or output from a cryptographic module.

FR: 6.95 If plaintext secret or plaintext private keys are entered into or output from any
cryptographic module, then the CKMS design shall specify how the plaintext keys are
protected and controlled outside of the cryptographic module.

FR: 6.96 If plaintext secret or plaintext private keys are entered into or output from any
cryptographic module, then the CKMS design shall specify how such actions are audited.

6.7.3 Controlling Human Input
If a key management function requires the human input of keys or sensitive metadata,
then there is a dependence on the human for the accuracy and perhaps the security of the
input. In addition, there could be a dependency on the human to enter the input at the
proper time or when the proper event occurs. In this case, the issue arises as to what
action the system should take if the human input is not provided. If such functions can be
performed automatically by the CKMS when they are necessary, the system becomes
more transparent to the user and possibly more secure.

FR: 6.97 For each key and metadata management function, the CKMS design shall
specify all human input parameters, their formats, and the actions to be taken by the
CKMS if they are not provided.

6.7.4 Multiparty Control
Certain key management functions could require multiple cooperating entities to perform
the function. This multiparty control could be enforced by requiring k of n entities to

                                            58
