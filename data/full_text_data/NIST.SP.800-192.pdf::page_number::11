                                                                                             NIST SP 800-192                                                       VERIFICATION & TEST METHODS FOR
                                                                                                                                                                   ACCESS CONTROL POLICIES/MODELS

                                                                                             to limit a user's access to a file; it is the owner of the file who controls other users' accesses to the
                                                                                             file. Only those users specified by the owner may have some combination of read, write, execute,
                                                                                             etc. permissions to the file. DAC policy tends to be very flexible and is widely used in commercial
                                                                                             and government sectors. However, DAC is known to be inherently weak for two reasons. First,
                                                                                             granting read access is transitive; for example, when Ann grants Bob read access to a file, nothing
                                                                                             stops Bob from copying the contents of Ann’s file to an object that Bob controls. Bob may now
                                                                                             grant any other user access to the copy of Ann’s file without Ann’s knowledge. Second, DAC
                                                                                             policy is vulnerable to Trojan horse attacks. Because programs inherit the identity of the invoking
                                                                                             user, Bob may, for example, write a program for Ann that, on the surface, performs some useful
                                                                                             function, while at the same time destroy the contents of Ann’s files. When investigating the
                                                                                             problem, the audit files would indicate that Ann destroyed her own files. Thus, formally, the
                                                                                             drawbacks of DAC are as follows:
This publication is available free of charge from: https://doi.org/10.6028/NIST.SP.800-192




                                                                                                  • Information can be copied from one object to another; therefore, there is no real assurance
                                                                                                    on the flow of information in a system.
                                                                                                  • No restrictions apply to the usage of information when the user has received it.
                                                                                                  • The privileges for accessing objects are decided by the owner of the object, rather than
                                                                                                    through a system-wide policy that reflects the organization’s safety requirements.

                                                                                             ACLs and owner/group/other AC mechanisms (e.g. permission bits in UNIX) are by far the most
                                                                                             common mechanisms for implementing DAC policies. Other mechanisms, even though not
                                                                                             designed with DAC in mind, may have the capabilities to implement a DAC policy.

                                                                                             Non-Discretionary Access Control

                                                                                             In general, all AC policies other than DAC are grouped under the category of non-discretionary
                                                                                             AC (NDAC). As the name implies, policies in this category have rules that are not established at
                                                                                             the discretion of the user. Non-discretionary policies establish controls that cannot be changed by
                                                                                             users, but only through administrative action. Static NDAC, for example, are MLS, ABAC, and
                                                                                             RBAC, and dynamic NDAC such as Separation of duty (SOD) policy can be used to enforce
                                                                                             constraints on the assignment of users to roles or tasks. An example of a constraint is the
                                                                                             requirement that two roles be mutually exclusive; e.g., if one role requests expenditures and
                                                                                             another approves them, the organization may prohibit the same user from being assigned to both
                                                                                             roles. So, membership in one role may prevent the user from being a member of one or more other
                                                                                             roles, depending on the SOD rules, such as Work Flow and RBAC. Another example of NDAC is
                                                                                             a history-based SOD policy that regulates, for example, whether the same subject (role) can access
                                                                                             the same object for a variable number of times.

                                                                                             Due to the fact that DAC policies have no well-defined variables in terms of model definition, they
                                                                                             are in general hard to formalize and verify efficiently with first order models, which most of the
                                                                                             black box and white box verification tools are based on. This document does not cover DAC
                                                                                             policies.




                                                                                                                                                4
