A STATISTICAL TEST SUITE FOR RANDOM AND PSEUDORANDOM NUMBER GENERATORS FOR CRYPTOGRAPHIC APPLICATIONS



Input Parameter:

x0 = 7844506a9456c564b8b8538e0cc15aff46c95e69600f084f0657c2401b3c244734b62e
a9bb95be4923b9b7e84eeaf1a224894ef0328d44bc3eb3e983644da3f5

Description:

Using a 512-bit modulus, and a random 512-bit seed x0, construct subsequent elements (each 512-bit
numbers) in the sequence via the rule:

                                  xi+1 = 2xi2 + 3xi + 1 mod 2512, for i ≥ 0.

D.4            Cubic Congruential Generator II (CCG)

The input parameter to the CCG is fixed in code, but may be modified by the user.

Input Parameter:

x0 =7844506a9456c564b8b8538e0cc15aff46c95e69600f084f0657c2401b3c244734b62ea
9bb95be4923b9b7e84eeaf1a224894ef0328d44bc3eb3e983644da3f5

Description:

Given a 512 bit seed x0, construct subsequent 512-bit strings via the rule:

                                        xi+1 = xi3 mod 2512, for i ≥ 0.

D.5            Exclusive OR Generator (XORG)

The input parameter to the XORG is a 127-bit seed that is fixed in code, but may be user modified.

Input Parameter:

x1 , x2 ,…, x127 = 00010110110110010001011110010010100110111011010001000000101
01111111010100100001010110110000000000100110000101110011111111100111

Description:

Choose a bit sequence, x1 , x2 ,…, x127 . Construct subsequent bits via the rule:

                                        xi = xi −1 ⊕ xi −127 , for i ≥ 128.

D.6            Modular Exponentiation Generator (MODEXPG)

The input parameters to the MODEXPG are fixed in code, but they may be user modified.

Input Parameters:

seed = 7AB36982CE1ADF832019CDFEB2393CABDF0214EC




                                                      D-2
