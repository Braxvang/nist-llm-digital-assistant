NIST SP 800-167                                                                            GUIDE TO APPLICATION W HITELISTING


2.2.3      Whitelist Generation and Maintenance

There are two primary methods of generating an application whitelist for a host. One is to use vendor-
provided information on the characteristics of known good applications, supplemented with organization-
generated information on the characteristics of organization-specific applications (i.e., in-house custom
applications). The other method of generating an application whitelist is to scan the files on a clean host6
to build a good known baseline.7

Both of these methods are effective on their own, except when applications are updated (e.g., patched) or
new applications are installed. If the vendor is providing the whitelist information, the vendor will have to
acquire the patch or new application, record its files’ characteristics, and send the corresponding
information to customers. If the organization is building its own whitelist information, it will have to:
acquire each patch or new application, record its files’ characteristics, and update its whitelists with the
new information; or, redo its known good baseline to serve as the new reference baseline. Any of these
methods may cause problematic delays for organizations that apply patches quickly, especially
automatically; patched software may be seen as unknown software and prohibited from running. Certain
attributes, such as file path and publisher, generally do not change with each patch and so whitelists
utilizing those attributes do not need to be updated as often and should cause fewer of these delays.

To avoid these problems with updates, most application whitelisting technologies offer maintenance
options. For example, many technologies allow the administrator to select certain services (e.g., patch
management software) to be trusted updaters. This means that any files that they add to or modify on a
host are automatically added to the whitelist. Similar options are available for designating trusted
publishers (i.e., software vendors), users (e.g., system administrators), sources (e.g., trusted network
paths), and other trusted entities that may update whitelists.

Another option available with some application whitelisting technologies is the use of reputation services.
These services determine if a service, publisher, or other external entity is generally associated with benign
or malicious content. This allows application whitelisting software to make decisions about how to handle
new or modified files based on the reputation of the associated service, publisher, etc., instead of simply
adding them to a graylist for subsequent manual processing.

2.3       Application Whitelisting Modes

Most application whitelisting technologies offer two operational runtime modes:

     Audit mode allows items, including those not on the whitelist to be executed and logs their
      execution. This mode provides data for continuous monitoring processes to analyze.
     Enforcement mode automatically permits execution of whitelisted items and/or blocks execution of
      blacklisted items. There are different forms of enforcement mode, which are differentiated by how
      they handle items that are not whitelisted or blacklisted. These forms include the following:
      o    Whitelist enforcement permits only whitelist items to be executed and blocks execution of all
           others;



6 “Clean host” refers to a host with an operating system installation that has never been accessed by end users, such as a host

      freshly built from a fully-patched security baseline image. Using anything other than a clean host for whitelist generation
      poses significant risks of inadvertently categorizing malware on the host as whitelisted software.
7     NIST hosts the National Software Reference Library (NSRL), which contains metadata for application files for forensic
      investigation purposes. See http://www.nsrl.nist.gov/ for additional information.



                                                                5
