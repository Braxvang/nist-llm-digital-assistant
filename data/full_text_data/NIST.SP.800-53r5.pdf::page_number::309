                                                                                              NIST SP 800-53, REV. 5                      SECURITY AND PRIVACY CONTROLS FOR INFORMATION SYSTEMS AND ORGANIZATIONS
                                                                                              _________________________________________________________________________________________________


                                                                                                              as requiring no known vulnerabilities in the delivered system with a Common Vulnerability
                                                                                                              Scoring System (CVSS) severity of medium or high.
                                                                                                              Related Controls: None.
                                                                                                       (2) DEVELOPMENT PROCESS, STANDARDS, AND TOOLS | SECURITY AND PRIVACY TRACKING TOOLS
                                                                                                              Require the developer of the system, system component, or system service to select and
                                                                                                              employ security and privacy tracking tools for use during the development process.
                                                                                                              Discussion: System development teams select and deploy security and privacy tracking
                                                                                                              tools, including vulnerability or work item tracking systems that facilitate assignment,
                                                                                                              sorting, filtering, and tracking of completed work items or tasks associated with
                                                                                                              development processes.
                                                                                                              Related Controls: SA-11.
This publication is available free of charge from: https://doi.org/10.6028/NIST.SP.800-53r5




                                                                                                       (3) DEVELOPMENT PROCESS, STANDARDS, AND TOOLS | CRITICALITY ANALYSIS
                                                                                                              Require the developer of the system, system component, or system service to perform a
                                                                                                              criticality analysis:
                                                                                                              (a) At the following decision points in the system development life cycle: [Assignment:
                                                                                                                  organization-defined decision points in the system development life cycle]; and
                                                                                                              (b) At the following level of rigor: [Assignment: organization-defined breadth and depth
                                                                                                                  of criticality analysis].
                                                                                                              Discussion: Criticality analysis performed by the developer provides input to the criticality
                                                                                                              analysis performed by organizations. Developer input is essential to organizational criticality
                                                                                                              analysis because organizations may not have access to detailed design documentation for
                                                                                                              system components that are developed as commercial off-the-shelf products. Such design
                                                                                                              documentation includes functional specifications, high-level designs, low-level designs,
                                                                                                              source code, and hardware schematics. Criticality analysis is important for organizational
                                                                                                              systems that are designated as high value assets. High value assets can be moderate- or
                                                                                                              high-impact systems due to heightened adversarial interest or potential adverse effects on
                                                                                                              the federal enterprise. Developer input is especially important when organizations conduct
                                                                                                              supply chain criticality analyses.
                                                                                                              Related Controls: RA-9.
                                                                                                       (4) DEVELOPMENT PROCESS, STANDARDS, AND TOOLS | THREAT MODELING AND VULNERABILITY
                                                                                                              ANALYSIS
                                                                                                              [Withdrawn: Incorporated into SA-11(2).]
                                                                                                       (5) DEVELOPMENT PROCESS, STANDARDS, AND TOOLS | ATTACK SURFACE REDUCTION
                                                                                                              Require the developer of the system, system component, or system service to reduce
                                                                                                              attack surfaces to [Assignment: organization-defined thresholds].
                                                                                                              Discussion: Attack surface reduction is closely aligned with threat and vulnerability analyses
                                                                                                              and system architecture and design. Attack surface reduction is a means of reducing risk to
                                                                                                              organizations by giving attackers less opportunity to exploit weaknesses or deficiencies (i.e.,
                                                                                                              potential vulnerabilities) within systems, system components, and system services. Attack
                                                                                                              surface reduction includes implementing the concept of layered defenses, applying the
                                                                                                              principles of least privilege and least functionality, applying secure software development
                                                                                                              practices, deprecating unsafe functions, reducing entry points available to unauthorized
                                                                                                              users, reducing the amount of code that executes, and eliminating application programming
                                                                                                              interfaces (APIs) that are vulnerable to attacks.
                                                                                                              Related Controls: AC-6, CM-7, RA-3, SA-11.
                                                                                                       (6) DEVELOPMENT PROCESS, STANDARDS, AND TOOLS | CONTINUOUS IMPROVEMENT



                                                                                              CHAPTER THREE                                                                                             PAGE 282
