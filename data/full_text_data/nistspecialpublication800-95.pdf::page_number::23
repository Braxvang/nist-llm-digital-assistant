                                                                                             GUIDE TO SECURE WEB SERVICES



 Confidentiality. Preserving authorized restrictions on information access and disclosure, including
  means for protecting personal privacy and proprietary information
 Privacy. Restricting access to subscriber or relying party information in accordance with Federal law
  and organization policy
2.3     Web Services Security Dimensions

The Web services security dimensions have been defined as: secure messaging, resource protection,
negotiation of contracts, trust management, and security properties 12. These dimensions encompass the
elements of security (discussed in Section 2.2) in a Web services environment. Each dimension is
essential to the development of secure applications using Web services, but each dimension affects a
different layer of the Web service. This section describes each security dimension and provides an
overview of what technologies are available, what is on the horizon, and what remains to be done.

2.3.1     Secure Messaging

Web services rely on the Internet for communication. Because SOAP was not designed with security in
mind, 13 SOAP messages can be viewed or modified by attackers as the messages traverse the Internet.
There are several options available for securing Web service messages:

 HTTP over SSL/TLS (HTTPS). Because SOAP messages are transmitted using HTTP, it is trivial
  to modify a Web service to support HTTPS.
 XML Encryption and XML Signature. These XML security standards developed by W3C allow
  XML content to be signed and encrypted. Because all SOAP messages are written in XML, Web
  service developers can sign or encrypt any portion of the SOAP message using these standards, but
  there is no standard mechanism for informing recipients how these standards were applied to the
  message.
 WS-Security. WS-Security was developed to provide SOAP extensions that define mechanisms for
  using XML Encryption and XML Signature to secure SOAP messages.
Each secure messaging option has its own strengths and weaknesses. They are discussed in more depth
in Section 3.6.

2.3.2     Protecting Resources

When resources are made publicly available, it is important to ensure that they are adequately protected.
Usually, Web services are intended to be accessible only to authorized requesters, requiring mechanisms
for access control. To perform access control, Web services need to identify and authenticate one
another. Several different methods are available, including transport layer authentication, token
authentication via the WS-Security specification using SAML assertions or other tokens, and the SOAP
authentication header. Authorizations for Web services are often done through custom implementations,
but the XACML is an OASIS standard available for performing authorization decisions, eliminating the
time and cost associated with developing and testing a custom solution.



12
      These dimensions are based on those defined in the paper Securing Service-Based Interactions: Issues and Directions by
      Hamid Nezhad, et al and can be found at http://dsonline.computer.org/WAS.
13
      According to the SOAP specification, secure messaging was intended to be developed as an extension to the SOAP
      standard.


                                                              2-8
