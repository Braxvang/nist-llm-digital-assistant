A STATISTICAL TEST SUITE FOR RANDOM AND PSEUDORANDOM NUMBER GENERATORS FOR CRYPTOGRAPHIC APPLICATIONS



                   01001101       (2)                01010001        (1)
                   00010011       (2)                11010110        (2)
                   10000000       (1)                11010111        (3)
                   11001100       (2)                11100110        (3)
                   11011000       (2)                10110010        (2)

(processing)       ν0 = 4; ν1 = 9; ν2 = 3; ν4 = 0; χ2 = 4.882457

(output)           P-value = 0.180609

(conclusion)       Since the P-value is ≥ 0.01, accept the sequence as random.


2.5     Binary Matrix Rank Test

2.5.1 Test Purpose
The focus of the test is the rank of disjoint sub-matrices of the entire sequence. The purpose of this test is
to check for linear dependence among fixed length substrings of the original sequence. Note that this test
also appears in the DIEHARD battery of tests [7].

2.5.2 Function Call
Rank(n), where:

           n       The length of the bit string.

Additional input used by the function supplied by the testing code:

The sequence of bits as generated by the RNG or PRNG being tested; this exists as a global structure at
the time of the function call; ε = ε1, ε2, … , εn.

           M       The number of rows in each matrix. For the test suite, M has been set to 32. If other
                   values of M are used, new approximations need to be computed.

           Q       The number of columns in each matrix. For the test suite, Q has been set to 32. If other
                   values of Q are used, new approximations need to be computed.

2.5.3      Test Statistic and Reference Distribution
           χ2(obs):       A measure of how well the observed number of ranks of various orders match the
                          expected number of ranks under an assumption of randomness.

The reference distribution for the test statistic is a χ2 distribution.

2.5.4      Test Description
                                                                                                n 
(1)        Sequentially divide the sequence into M•Q-bit disjoint blocks; there will exist N =        such
                                                                                                MQ 
           blocks. Discarded bits will be reported as not being used in the computation within each block.
           Collect the M•Q bit segments into M by Q matrices. Each row of the matrix is filled with
           successive Q-bit blocks of the original sequence ε.



                                                       2-10
