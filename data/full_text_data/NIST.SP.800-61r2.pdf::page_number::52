                                                                 COMPUTER SECURITY INCIDENT HANDLING GUIDE



 Acquire tools and resources that may be of value during incident handling. The team will be
  more efficient at handling incidents if various tools and resources are already available to them.
  Examples include contact lists, encryption software, network diagrams, backup devices, digital
  forensic software, and port lists.
 Prevent incidents from occurring by ensuring that networks, systems, and applications are
  sufficiently secure. Preventing incidents is beneficial to the organization and also reduces the
  workload of the incident response team. Performing periodic risk assessments and reducing the
  identified risks to an acceptable level are effective in reducing the number of incidents. Awareness of
  security policies and procedures by users, IT staff, and management is also very important.
 Identify precursors and indicators through alerts generated by several types of security
  software. Intrusion detection and prevention systems, antivirus software, and file integrity checking
  software are valuable for detecting signs of incidents. Each type of software may detect incidents that
  the other types of software cannot, so the use of several types of computer security software is highly
  recommended. Third-party monitoring services can also be helpful.
 Establish mechanisms for outside parties to report incidents. Outside parties may want to report
  incidents to the organization—for example, they may believe that one of the organization’s users is
  attacking them. Organizations should publish a phone number and email address that outside parties
  can use to report such incidents.
 Require a baseline level of logging and auditing on all systems, and a higher baseline level on all
  critical systems. Logs from operating systems, services, and applications frequently provide value
  during incident analysis, particularly if auditing was enabled. The logs can provide information such
  as which accounts were accessed and what actions were performed.
 Profile networks and systems. Profiling measures the characteristics of expected activity levels so
  that changes in patterns can be more easily identified. If the profiling process is automated, deviations
  from expected activity levels can be detected and reported to administrators quickly, leading to faster
  detection of incidents and operational issues.
 Understand the normal behaviors of networks, systems, and applications. Team members who
  understand normal behavior should be able to recognize abnormal behavior more easily. This
  knowledge can best be gained by reviewing log entries and security alerts; the handlers should
  become familiar with the typical data and can investigate the unusual entries to gain more knowledge.
 Create a log retention policy. Information regarding an incident may be recorded in several places.
  Creating and implementing a log retention policy that specifies how long log data should be
  maintained may be extremely helpful in analysis because older log entries may show reconnaissance
  activity or previous instances of similar attacks.
 Perform event correlation. Evidence of an incident may be captured in several logs. Correlating
  events among multiple sources can be invaluable in collecting all the available information for an
  incident and validating whether the incident occurred.
 Keep all host clocks synchronized. If the devices reporting events have inconsistent clock settings,
  event correlation will be more complicated. Clock discrepancies may also cause issues from an
  evidentiary standpoint.
 Maintain and use a knowledge base of information. Handlers need to reference information
  quickly during incident analysis; a centralized knowledge base provides a consistent, maintainable
  source of information. The knowledge base should include general information, such as data on
  precursors and indicators of previous incidents.


                                                    43
