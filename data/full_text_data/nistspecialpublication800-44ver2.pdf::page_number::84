                                                                       GUIDELINES ON SECURING PUBLIC WEB SERVERS



7.5.6      SSL/TLS Implementations

Although some Web servers come packaged with SSL capabilities already integrated, many do not. This
section discusses various commercial and open-source SSL/TLS implementations. Some of these
packages contain the functionality to generate SSL certificates without the need of a CA. The following
list includes some of the SSL toolkits available:

 OpenSSL is an open-source implementation of SSL/TLS for Unix and Linux platforms
  (http://www.openssl.org/).

 Network Security Services (NSS) is an open-source implementation of SSL/TLS developed by the
  Mozilla foundation. 61 NSS is derived from the original Netscape SSL implementation.

 GnuTLS is an open-source implementation of SSL/TLS developed by the Free Software
  Foundation. 62

 Java Secure Socket Extension (JSSE) is an implementation of SSL/TLS developed by Sun for
  distribution as part of the Java Runtime Environment (JRE). 63

 Security Support Provider Interface (SSPI) is an implementation of SSL/TLS available on Microsoft
  Windows Server 2003.

 IBM Java Secure Sockets Extension (IBMJSSE) is an implementation of SSL/TLS for the
  WebSphere Application Server.

Federal government organizations are required to use Federal Information Processing Standards (FIPS)-
validated SSL/TLS implementations when protecting data using SSL/TLS. The Cryptographic Module
Validation Program (CMVP) performs validation testing of cryptographic modules, including SSL/TLS
implementations. 64 NIST provides a list of FIPS 140-2 65 -compliant vendors and implementations. 66
Regardless of what SSL/TLS implementation is used, it is important to ensure that security patches are
regularly applied. Security flaws in SSL/TLS implementations can potentially allow attackers to spoof
PKI certificates, forge digital signatures, perform DoS attacks, or execute arbitrary code in the Web
server.

7.6      Brute Force Attacks

Many Web sites authenticate users via username and password combinations—whether through HTTP
Basic, HTTP Digest, or a Web form over SSL. Regardless of implementation, username and password
combinations are susceptible to brute force attacks. Brute force attacks can occur in multiple forms:

 Username Harvesting—Applications that differentiate between an invalid password and an invalid
  username can allow attackers to construct a list of valid user accounts.




61
      http://www.mozilla.org/projects/security/pki/nss/
62
      http://www.gnu.org/software/gnutls/
63
      http://java.sun.com/products/jsse/index.jsp
64
      http://csrc.nist.gov/cryptval/
65
      http://csrc.nist.gov/publications/fips/fips140-2/fips1402.pdf
66
      http://csrc.nist.gov/cryptval/140-1/1401vend.htm


                                                                7-12
