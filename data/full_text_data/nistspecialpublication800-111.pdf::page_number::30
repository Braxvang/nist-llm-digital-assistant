                                                      GUIDE TO STORAGE ENCRYPTION TECHNOLOGIES FOR END USER DEVICES



site. The user provides the code to the Web site and gives proof of identity, such as answering questions
about personal preferences (e.g., favorite color) that the user has previously configured. The Web site
then provides the user’s password or a one-time recovery code that the user enters into the computer to
regain access. A similar process can also be performed by having users call a help desk instead of
accessing a particular Web site.

For user authentication methods other than password-based, recovery is often more difficult, especially if
the user is not at the organization’s facilities. Some storage encryption products allow the password-
based authentication recovery mechanisms to be used and permit the user to temporarily use password-
based authentication. However, because this is generally a reduction in the strength of authentication,
many organizations do not permit its use. This means that a loss of authenticator could cause an extended
loss of availability to the data, until the user can receive a new authenticator (e.g., smart card,
cryptographic token) and an administrator can configure the device to use the new authenticator.

Recovery mechanisms increase the availability of the storage encryption solution for individual users, but
they can also increase the likelihood that an attacker can gain unauthorized access to encrypted storage by
abusing the recovery mechanisms. Organizations should consider the tradeoff between availability and
security when selecting and planning recovery mechanisms.

Some storage encryption products also offer protection against authentication-guessing attempts. For
example, if there are too many consecutive failed authentication attempts, some products can either lock
the computer for a period of time or increase the delay between attempts. In particularly high-security
situations, some products can be configured so that too many failed attempts causes the product to wipe
all the protected data from the device. This approach strongly favors security over functionality.

4.3     Implement and Test Prototype

After the solution has been designed, the next step is to implement and test a prototype of the design.
Ideally, implementation and testing should first be performed on lab or test devices. Only
implementations in final testing should be conducted on production devices. Aspects of the solution to
evaluate include the following:

 Protection. Each type of information that needs protection should be protected in accordance with
  the information gathered during the Identify Needs phase. This should be verified by using forensic
  tools to confirm that the information is encrypted. For devices that use FDE and offer hibernation,
  standby, or other “suspend” modes, encryption should be verified in each mode; if the mode does not
  write the contents of memory out to disk and encrypt it, then the information may be readily available
  unencrypted. 38

 Authentication. Performing robust testing of authentication is important, especially for more
  complex authentication solutions that depend on centralized authentication services; a loss of those
  services could cause a loss of storage encryption services as well.

 OS and Application Compatibility. The solution should not break or interfere with the use of
  existing OS configurations and software applications. Examples of applications that may be
  particularly problematic are, for FDE, disk-level software tools, asset management software, and
  dual-boot configurations, and for all storage encryption technologies, backup utilities, forensic tools,
  and other storage encryption programs.


38
      This can be addressed by configuring the device not to use modes that maintain the data in an unencrypted format.


                                                               4-6
