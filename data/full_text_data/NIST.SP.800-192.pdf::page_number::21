                                                                                             NIST SP 800-192                                                       VERIFICATION & TEST METHODS FOR
                                                                                                                                                                   ACCESS CONTROL POLICIES/MODELS


                                                                                                     if (a & b & c) then grant; if (d & e) then grant; else deny;

                                                                                             modeled by:
                                                                                                   P = ((a b c) → G) ((d e) → G) · ( ~(a b c) · ~(d e) → ~G)

                                                                                             Suppose the policy is implemented incorrectly, leaving out condition a:

                                                                                                     Ptc = ((b c) → G) ((d e) → G) · ( ~(b c) · ~(d e) → ~G)

                                                                                             The detection conditions for this type of flaw in Ptc are:
This publication is available free of charge from: https://doi.org/10.6028/NIST.SP.800-192




                                                                                                     P ⨁ Ptc = a̅ b c d̅ + a̅ b c e̅

                                                                                             That is, for inputs of either a̅ b c d̅ or a̅ b c e̅ , policy Ptc produces an incorrect result, so a test
                                                                                             with either of these inputs will detect the error. A different faulty policy may replace the condition
                                                                                             in rule 1 with its negation:

                                                                                             Pnc = ((~a b c) → G ) ((d e) → G ) ( ~(~ a b c) · ~(d e) → ~G)

                                                                                             For the implementation Pnc, the detection conditions are:

                                                                                                     P ⨁ Pnc = b c d̅ + b c e̅

                                                                                             Thus a test with b c d̅ + b c e̅ (and either a or a̅ ) would detect the error. Notice that P ⨁ Ptc, ⇒
                                                                                             P ⨁ Pnc, i.e., the detection conditions for Ptc subsume those for Pnc , so a test that detects the
                                                                                             faulty policy Ptc, with the true condition, will also detect policies with the same condition
                                                                                             negated in the same rule. For example, the test a̅ b c d̅ would detect both vulnerabilities by
                                                                                             evaluating to G in both faulty implementations, instead of the correct result G̅ .




                                                                                                                                                14
