                                                                                             NIST SP 800-192                                                           VERIFICATION & TEST METHODS FOR
                                                                                                                                                                       ACCESS CONTROL POLICIES/MODELS

                                                                                             5     VERIFICATION AND TESTING TECHNOLOGY

                                                                                             To verify the correctness of an AC model, the model and verified safety requirements are specified
                                                                                             in a formal logic formula (including first and higher logic proof). For example, safety requirements
                                                                                             against the model are verified using a model checker. In this process, confidence in the model’s
                                                                                             correctness depends on the quality of the specified safety requirements. Hence, white box analysis
                                                                                             can be applied to check if the entities (i.e., rules) of the model are sufficiently covered and confined
                                                                                             by the safety requirements, as well as the quality of given safety requirements. Finally, test cases
                                                                                             are generated from the domain variables in the AC model and specified safety requirements. These
                                                                                             test inputs are fed into real AC implementation of the given model to verify whether the actual test
                                                                                             outputs are the same as the expected outputs. (IJEKE)
This publication is available free of charge from: https://doi.org/10.6028/NIST.SP.800-192




                                                                                             5.1       Model Checker

                                                                                             A model checker provides the modular hierarchical descriptions, and for the definition of reusable
                                                                                             components of the specification of Finite State Machines (FSMs) which range from completely
                                                                                             synchronous to completely asynchronous ones, and from detailed to abstract ones. The only data
                                                                                             types in the specification are finite Booleans, scalars, fixed arrays, and static data types that can be
                                                                                             constructed. The specified model in an FSM describes the transition states of the FSM. In general,
                                                                                             any expression in the propositional calculus can be used to define the transition relation of states;
                                                                                             however, the flexibility of the expression is accompanied by the risk of a logical contradiction,
                                                                                             which makes specifications vacuously true or makes the system unimplementable. Fundamentally,
                                                                                             there are three basic types (as described in Section 2.2) of FSM expressions for specifying AC
                                                                                             models in terms of the sequence of the state transitions:

                                                                                                   •    Synchronous. An AC model is expressed by defining the value of AC constraints in the
                                                                                                        next state (i.e., after each transition), given the value of constraints in the current states
                                                                                                        (i.e., before transition).

                                                                                                   •    Asynchronous. An AC model is expressed by a collection of concurrency states. This type
                                                                                                        of model is for AC systems whose authorization decisions are triggered from more than
                                                                                                        one clock region such as mutual exclusion, communication protocols, and asynchronous
                                                                                                        circuits.

                                                                                                   •    Direct specification. An AC model is specified directly in terms of propositional formulas.
                                                                                                        The set of possible initial states is specified as a formula in the current state variables. A
                                                                                                        state is initial if it satisfies the formula. The transition relation is directly specified as a
                                                                                                        propositional formula in terms of the current and next values of the state variable. Any
                                                                                                        current state/next state pair is in the transition relation if and only if it satisfies the formula.

                                                                                             FSM Model Checking Basic

                                                                                             Based on the type of transition state (as describe above) of the FSM specification, a model checker
                                                                                             verifies if a model satisfies a set of desired safety requirements specified by the user. The
                                                                                             specifications can be checked by temporal logics such as Computation Tree Logic (CTL), and
                                                                                             Linear Temporal Logic (LTL) extended with Past Operators. CTL and TTL formulas consist of

                                                                                                                                                    23
