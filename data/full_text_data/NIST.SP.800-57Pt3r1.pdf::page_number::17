Certificates are generally issued in accordance with a certificate policy. Generally that
policy can be found on the issuing CA’s website. If an organization’s policy, for
example, is to accept only certificates that use at least 2048-bit RSA, 2048-bit DSA or
224-bit elliptic curve cryptography, and either, SHA-224 or SHA-256, then the only
practical way to ensure that public key sizes meet the requirements is usually to ensure
that the root certificate store contains only root certificates with a certificate policy that
requires these algorithms and key sizes in its subordinate certificates. Current
applications that use PKI will check to ensure that a certificate has been issued under the
root certificate in the application’s root store, and that it has not been subsequently
revoked, but will not otherwise check the suitability of the public key or hash algorithms
used in the certificate – the application will simply use the specified keys to compute the
mathematically correct results. So, correctly configuring root certificate stores is a critical
step in key management.

The specifics of where the root certificate store is located and how it is managed for each
application and protocol are beyond the scope of this Recommendation. Typically,
however, there are menus for viewing and managing certificate stores in the browser
applications, but this is subject to change with each product update. There may also be
utilities and features in the operating system or application for centralized management
by the system administrator. When a browser or other application encounters an
unrecognized CA certificate, end users may be prompted to add that certificate to their
permanent trusted certificate store, temporarily trust the certificate, or reject the
certificate and close the application.

The most common certificate format is the X.509 version 3 (X.509v3) certificate [RFC
5280]. In addition to the user and issuer names and the public key, all X.509 certificates
also include a digital signature, validity (starting and expiring times), and identifiers that
specify the cryptographic algorithm(s) to be used with the public key and signature.
X.509v3 certificates include an extensibility feature; CAs usually include standard
extensions in their certificates to indicate which cryptographic operations the public key
was intended to support, the policy that governed certificate issuance, and where to find
out if the certificate has been revoked (i.e., an authoritative source for certificate status
information). CAs may also include “private” extensions in their certificates that contain
information particular to an application or domain of users.

A relying party is an individual or organization that relies on the certificate and the CA
that issued the certificate to provide valid information (see Appendix A). Before a relying
party uses the public key in a certificate, he must determine whether the key used by the
issuer to sign this certificate can be trusted. In the simplest case, the relying party knows
about the issuer, and has already decided to trust certificates issued by that CA. CAs that
a relying party trusts directly are called trust anchors. When multiple trust anchors are
recognized, the set of trust anchors is referred to as the trust list.

In some cases, a relying party will wish to process user certificates that were signed by
issuers other than a CA in its trust list. To support this goal, CAs issue cross certificates
that bind another issuer’s name to that issuer’s public key. Cross certificates are an
assertion that a public key may be used to verify signatures on other certificates. A
relying party may be able to develop a certification path – a sequence of certificates –

                                               9
