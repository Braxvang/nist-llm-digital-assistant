                                                                                              NIST SP 800-53, REV. 5                      SECURITY AND PRIVACY CONTROLS FOR INFORMATION SYSTEMS AND ORGANIZATIONS
                                                                                              _________________________________________________________________________________________________


                                                                                                              (a) Design and structure the security-relevant hardware, software, and firmware to use a
                                                                                                                  complete, conceptually simple protection mechanism with precisely defined
                                                                                                                  semantics; and
                                                                                                              (b) Internally structure the security-relevant hardware, software, and firmware with
                                                                                                                  specific regard for this mechanism.
                                                                                                              Discussion: The principle of reduced complexity states that the system design is as simple
                                                                                                              and small as possible (see SA-8(7)). A small and simple design is easier to understand and
                                                                                                              analyze and is also less prone to error (see AC-25, SA-8(13)). The principle of reduced
                                                                                                              complexity applies to any aspect of a system, but it has particular importance for security
                                                                                                              due to the various analyses performed to obtain evidence about the emergent security
                                                                                                              property of the system. For such analyses to be successful, a small and simple design is
                                                                                                              essential. Application of the principle of reduced complexity contributes to the ability of
                                                                                                              system developers to understand the correctness and completeness of system security
This publication is available free of charge from: https://doi.org/10.6028/NIST.SP.800-53r5




                                                                                                              functions and facilitates the identification of potential vulnerabilities. The corollary of
                                                                                                              reduced complexity states that the simplicity of the system is directly related to the number
                                                                                                              of vulnerabilities it will contain. That is, simpler systems contain fewer vulnerabilities. An
                                                                                                              important benefit of reduced complexity is that it is easier to understand whether the
                                                                                                              security policy has been captured in the system design and that fewer vulnerabilities are
                                                                                                              likely to be introduced during engineering development. An additional benefit is that any
                                                                                                              such conclusion about correctness, completeness, and existence of vulnerabilities can be
                                                                                                              reached with a higher degree of assurance in contrast to conclusions reached in situations
                                                                                                              where the system design is inherently more complex.
                                                                                                              Related Controls: AC-25, SA-8, SC-3.
                                                                                                       (6) DEVELOPER SECURITY AND PRIVACY ARCHITECTURE AND DESIGN | STRUCTURE FOR TESTING
                                                                                                              Require the developer of the system, system component, or system service to structure
                                                                                                              security-relevant hardware, software, and firmware to facilitate testing.
                                                                                                              Discussion: Applying the security design principles in [SP 800-160-1] promotes complete,
                                                                                                              consistent, and comprehensive testing and evaluation of systems, system components, and
                                                                                                              services. The thoroughness of such testing contributes to the evidence produced to generate
                                                                                                              an effective assurance case or argument as to the trustworthiness of the system, system
                                                                                                              component, or service.
                                                                                                              Related Controls: SA-5, SA-11.
                                                                                                       (7) DEVELOPER SECURITY AND PRIVACY ARCHITECTURE AND DESIGN | STRUCTURE FOR LEAST PRIVILEGE
                                                                                                              Require the developer of the system, system component, or system service to structure
                                                                                                              security-relevant hardware, software, and firmware to facilitate controlling access with
                                                                                                              least privilege.
                                                                                                              Discussion: The principle of least privilege states that each component is allocated sufficient
                                                                                                              privileges to accomplish its specified functions but no more (see SA-8(14)). Applying the
                                                                                                              principle of least privilege limits the scope of the componentâ€™s actions, which has two
                                                                                                              desirable effects. First, the security impact of a failure, corruption, or misuse of the system
                                                                                                              component results in a minimized security impact. Second, the security analysis of the
                                                                                                              component is simplified. Least privilege is a pervasive principle that is reflected in all aspects
                                                                                                              of the secure system design. Interfaces used to invoke component capability are available to
                                                                                                              only certain subsets of the user population, and component design supports a sufficiently
                                                                                                              fine granularity of privilege decomposition. For example, in the case of an audit mechanism,
                                                                                                              there may be an interface for the audit manager, who configures the audit settings; an
                                                                                                              interface for the audit operator, who ensures that audit data is safely collected and stored;
                                                                                                              and, finally, yet another interface for the audit reviewer, who only has a need to view the
                                                                                                              audit data that has been collected but no need to perform operations on that data.



                                                                                              CHAPTER THREE                                                                                             PAGE 287
