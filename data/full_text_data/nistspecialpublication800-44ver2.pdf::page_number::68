                                                                  GUIDELINES ON SECURING PUBLIC WEB SERVERS



    falls in these categories: letters a-z, A-Z, and 0-9. Care should be taken when accepting special
    characters such as &, ′, ″, @, and !. These symbols may have special meanings within the content
    generation language or other components of the Web application.

 Ensure that the dynamically generated pages do not contain dangerous metacharacters. It is possible
  for a malicious user to place these tags in a database or a file. When a dynamic page is generated
  using the altered data, the malicious code embedded in the tags may be passed to the client browser.
  Then the user’s browser can be tricked into running a program of the attacker’s choice. This program
  will execute in the browser’s security context for communicating with the legitimate Web server, not
  the browser’s security context for communicating with the attacker. Thus, the program will execute
  in an inappropriate security context with inappropriate privileges.

 Character set encoding should be explicitly set in each page. Then the user data should be scanned
  for byte sequences that represent special characters for the given encoding scheme.

 Each character in a specified character set can be encoded using its numeric value. Encoding the
  output can be used as an alternate for filtering the data. Encoding becomes especially important when
  special characters, such as copyright symbols, can be part of the dynamic data. However, encoding
  data can be resource intensive, and a balance must be struck between encoding and other methods for
  filtering the data.

 Cookies should be examined for any special characters. Any special characters should be filtered out.

 An encryption mechanism should be used to encrypt passwords entered through script forms (see
  Section 7.5).

 For Web applications that are restricted by username and password, none of the Web pages in the
  application should be accessible without executing the appropriate login process.

 Many Web servers and some other Web server software install sample scripts or executables during
  the installation process. Many of these have known vulnerabilities and should be removed
  immediately. See appropriate manufacturer’s documentation or Web sites for more information.

When considering a server-side content generator, it is important to review public vulnerability and
security databases (such as NVD, http://nvd.nist.gov/) to determine the relative risk of the various
technologies under consideration. Although the historical record will not be a perfect indicator of future
risk, it does indicate which technologies appear to be more vulnerable.

Various organizations research network and system security topics and periodically publish information
concerning recently discovered vulnerabilities in software. This includes Web server software and
supporting technologies, such as scripting languages and external programs. External programs that are
in wide use are regularly analyzed by researchers, users, and security incident response teams and by
attackers. Attackers will often publish exploit scripts that take advantage of known vulnerabilities in Web
service software and external programs commonly used by public Web servers. Web administrators
should review public information sources frequently and be aware of all security-relevant information
about any external programs that they are considering.




                                                   6-16
