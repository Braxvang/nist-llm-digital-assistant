               The Technical Specification for the Security Content Automation Protocol (SCAP): SCAP Version 1.2


       </cat:catalog>
     </ds:component-ref>
   </ds:checklists>
   <ds:checks>
     <ds:component-ref id="ref3" xlink:href="#oval1"/>
   </ds:checks>
 </ds:data-stream>
 <ds:component id="xccdf1">
   <xccdf:Benchmark>
     <xccdf:Rule>
       <xccdf:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
         <xccdf:check-content-ref href="sample-oval.xml" name="oval:gov.nist:def:1"/>
       </xccdf:check>
     </xccdf:Rule>
   </xccdf:Benchmark>
 </ds:component>
 <ds:component id="oval1">
   <oval-def:oval_definitions>...</oval-def:oval_definitions>
 </ds:component>
 <ds:component id="dict1">
   <cpe2-dict:cpe-list>
     <cpe2-dict:cpe-item name="cpe:/a:oracle:database_server:11.1.0.6.0::enterprise">
       <cpe2-dict:check href="dict-oval.xml"
        system="http://oval.mitre.org/XMLSchema/oval-definitions-5>
        oval:gov.nist:def:2</cpe2-dict:check>
       <cpe2-dict-ext:cpe23-item
        name="cpe:2.3:a:oracle:database_server:11.1.0.6.0:-:-:-:enterprise:-:-:-"/>
     </cpe2-dict:cpe-item>
   </cpe2-dict:cpe-list>
 </ds:component>
</ds:data-stream-collection>

The design of the SCAP source data stream is important for the following reasons:
    1. Individual components may be developed outside of an SCAP data stream where the binding to
       other components is not necessarily known at the time the component is created.
    2. The SCAP source data stream creates a binding between different components that were not
       necessarily designed to reference each other. For example, XCCDF was not designed to reference
       a particular checking system; it can reference OVAL, OCIL, and other checking systems.
    3. The logical link mapping in the data stream places a layer of capability within the data stream to
       control the dereferencing of URIs within components, creating a complete solution related to
       bundling components.
    4. The SCAP source data stream format will be useful in future communication models such as web
       services, transport protocols, tasking mechanisms, etc.
    5. The SCAP source data stream format supports more comprehensive validation of component
       content, including interrelationships between components.

3.1.1   Source Data Stream Data Model
The tables in this section formalize the SCAP source data stream data model. The tables contain
requirements and MUST be interpreted as follows:
       The “Element Name” field indicates the name for the XML element being described. Each
        element name has a namespace prefix indicating the namespace to which the element belongs.
        See Table 1 for a mapping of namespace prefixes to namespaces.




                                                      12
