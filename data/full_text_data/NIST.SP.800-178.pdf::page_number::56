                                                                                               NIST SP 800-178                                                     COMPARISON OF ABAC STANDARDS FOR
                                                                                                                                                                     DATA SERVICES: XACML AND NGAC


                                                                                               store. Performance optimization is achieved by caching “Request-Access Decision”
                                                                                               combinations and using efficient algorithms for evaluating logical expressions. The impact of
                                                                                               caching is pronounced in application environments where access requests are similar (instead of
                                                                                               being completely random), where the number of rules using dynamic attributes is limited and the
                                                                                               policy store is relatively stable (no frequent addition/deletion of policies or policy sets) [29].
                                                                                               Although there is no formal analysis of the complexity of the XACML decision process that we
                                                                                               are aware of, empirical studies have shown that the most significant factor impacting
                                                                                               performance is the number of policies and/or rules which beyond a certain level present
                                                                                               scalability issues [26]. This level is dependent on a number of factors in the deployment
This publication is available free of charge from: http://dx.doi.org/10.6028/NIST.SP.800-178




                                                                                               environment such as sensitivity and number of applications and desired granularity of access
                                                                                               control.

                                                                                               In regard to NGAC, the conditions necessary for the existence of a valid privilege (right to
                                                                                               perform an operation) can be expressed as follows in the graphical representation [30]:

                                                                                               A user is allowed to perform an operation on an object if and only if there exists a set of edges
                                                                                               labeled with the desired operation such that the tail of each edge is reachable from the user, and
                                                                                               the head of each edge is reachable from the target object, and the set of policy class nodes
                                                                                               reachable from the set of head nodes is a superset of the set of policy class nodes reachable from
                                                                                               the target object.

                                                                                               The NGAC specification describes what constitutes a valid implementation using set theoretic
                                                                                               notation, but does not provide implementation guidance. This leaves room for multiple
                                                                                               competing approaches and implementations with decision processing algorithms of varying
                                                                                               efficiencies. In the method adopted in [30], an algorithm that is linear with regard to the size of
                                                                                               the policy graph (i.e., O(m + n) where m is the number of edges and n is the number of nodes)
                                                                                               has been developed and implemented. The linearity is not in relation to the entire access control
                                                                                               graph, but only to the portion of the graph relevant to a particular user.

                                                                                               5.4   Attribute and Policy Management

                                                                                               XACML and NGAC both offer a delegation mechanism in support of decentralized
                                                                                               administration of access policies. Both allow an authority (delegator) to delegate all or parts of
                                                                                               its own authority or someone else’s authority to another user (delegate). Unlike NGAC,
                                                                                               XACML’s delegation method is a partial solution. It is dependent on trusted and untrusted access
                                                                                               policies, where trusted access policies are assumed valid, and their origin is established outside
                                                                                               the delegation model. XACML enables policy statements to be written by multiple writers.
                                                                                               Although XACML facilitates the independent writing, collection, and combination of policy
                                                                                               components, XACML does not describe any normative way to coordinate the creation and
                                                                                               modification of policy components among these writers. NGAC enables a systematic approach
                                                                                               to the creation of administrative responsibilities. The approach begins with a single administrator
                                                                                               that can create and delegate administrative capabilities to include further delegation authority to
                                                                                               intermediate administrators. The process ends with users with data service, policy, and attribute
                                                                                               management capabilities.

                                                                                               Although one could imagine a means of administering attributes through the use of XACML
                                                                                               policies, in practice the creation of attribute values and subject and resource assignments to those

                                                                                                                                                44
