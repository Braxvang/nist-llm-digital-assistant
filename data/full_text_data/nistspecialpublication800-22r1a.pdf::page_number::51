A STATISTICAL TEST SUITE FOR RANDOM AND PSEUDORANDOM NUMBER GENERATORS FOR CRYPTOGRAPHIC APPLICATIONS



2.12 Approximate Entropy Test

2.12.1 Test Purpose
As with the Serial test of Section 2.11, the focus of this test is the frequency of all possible overlapping
m-bit patterns across the entire sequence. The purpose of the test is to compare the frequency of
overlapping blocks of two consecutive/adjacent lengths (m and m+1) against the expected result for a
random sequence.

2.12.2 Function Call
ApproximateEntropy(m,n), where:

        m        The length of each block – in this case, the first block length used in the test. m+1 is the
                 second block length used.

        n        The length of the entire bit sequence.

Additional input used by the function, but supplied by the testing code:

        ε        The sequence of bits as generated by the RNG or PRNG being tested; this exists as a
                 global structure at the time of the function call; ε = ε1, ε2, … , εn.

2.12.3 Test Statistic and Reference Distribution
χ2(obs):      A measure of how well the observed value of ApEn(m) (see step 6 in Section 2.12.4)
              matches the expected value.

The reference distribution for the test statistic is the χ2 distribution.

2.12.4 Test Description
(1)    Augment the n-bit sequence to create n overlapping m-bit sequences by appending m-1 bits from
       the beginning of the sequence to the end of the sequence.

        For example, if ε = 0100110101 and m = 3, then n = 10. Append the 0 and 1 at the beginning of
        the sequence to the end of the sequence. The sequence to be tested becomes 010011010101.
        (Note: This is done for each value of m.)

(2)     A frequency count is made of the n overlapping blocks (e.g., if a block containing εj to εj+m-1 is
        examined at time j, then the block containing εj+1 to εj +m is examined at time j+1). Let the count
        of the possible m-bit ((m+1)-bit) values be represented as C im , where i is the m-bit value.

        For the example in this section, the overlapping m-bit blocks (where m = 3) become 010, 100,
        001, 011, 110, 101, 010, 101, 010, and 101. The calculated counts for the 2m = 23 = 8 possible m-
        bit strings are:

        #000 = 0, #001 = 1, #010 = 3, #011 = 1, #100 = 1, #101 = 3, #110 = 1, #111 = 0

                          #i
(3)     Compute C im =       for each value of i.
                          n




                                                       2-29
