                                                                                              NIST SP 800-53, REV. 5                      SECURITY AND PRIVACY CONTROLS FOR INFORMATION SYSTEMS AND ORGANIZATIONS
                                                                                              _________________________________________________________________________________________________


                                                                                                              combined with a precise definition of their functional behaviorâ€”promotes ease of analysis,
                                                                                                              inspection, and testing as well as the correct and secure use of the system. The clarity of an
                                                                                                              abstraction is subjective. Examples that reflect the application of this principle include
                                                                                                              avoidance of redundant, unused interfaces; information hiding; and avoidance of semantic
                                                                                                              overloading of interfaces or their parameters. Information hiding (i.e., representation-
                                                                                                              independent programming), is a design discipline used to ensure that the internal
                                                                                                              representation of information in one system component is not visible to another system
                                                                                                              component invoking or calling the first component, such that the published abstraction is
                                                                                                              not influenced by how the data may be managed internally.
                                                                                                              Related Controls: None.
                                                                                                       (2) SECURITY AND PRIVACY ENGINEERING PRINCIPLES | LEAST COMMON MECHANISM
                                                                                                              Implement the security design principle of least common mechanism in [Assignment:
This publication is available free of charge from: https://doi.org/10.6028/NIST.SP.800-53r5




                                                                                                              organization-defined systems or system components].
                                                                                                              Discussion: The principle of least common mechanism states that the amount of mechanism
                                                                                                              common to more than one user and depended on by all users is minimized [POPEK74].
                                                                                                              Mechanism minimization implies that different components of a system refrain from using
                                                                                                              the same mechanism to access a system resource. Every shared mechanism (especially a
                                                                                                              mechanism involving shared variables) represents a potential information path between
                                                                                                              users and is designed with care to ensure that it does not unintentionally compromise
                                                                                                              security [SALTZER75]. Implementing the principle of least common mechanism helps to
                                                                                                              reduce the adverse consequences of sharing the system state among different programs. A
                                                                                                              single program that corrupts a shared state (including shared variables) has the potential to
                                                                                                              corrupt other programs that are dependent on the state. The principle of least common
                                                                                                              mechanism also supports the principle of simplicity of design and addresses the issue of
                                                                                                              covert storage channels [LAMPSON73].
                                                                                                              Related Controls: None.
                                                                                                       (3) SECURITY AND PRIVACY ENGINEERING PRINCIPLES | MODULARITY AND LAYERING
                                                                                                              Implement the security design principles of modularity and layering in [Assignment:
                                                                                                              organization-defined systems or system components].
                                                                                                              Discussion: The principles of modularity and layering are fundamental across system
                                                                                                              engineering disciplines. Modularity and layering derived from functional decomposition are
                                                                                                              effective in managing system complexity by making it possible to comprehend the structure
                                                                                                              of the system. Modular decomposition, or refinement in system design, is challenging and
                                                                                                              resists general statements of principle. Modularity serves to isolate functions and related
                                                                                                              data structures into well-defined logical units. Layering allows the relationships of these
                                                                                                              units to be better understood so that dependencies are clear and undesired complexity can
                                                                                                              be avoided. The security design principle of modularity extends functional modularity to
                                                                                                              include considerations based on trust, trustworthiness, privilege, and security policy.
                                                                                                              Security-informed modular decomposition includes the allocation of policies to systems in a
                                                                                                              network, separation of system applications into processes with distinct address spaces,
                                                                                                              allocation of system policies to layers, and separation of processes into subjects with distinct
                                                                                                              privileges based on hardware-supported privilege domains.
                                                                                                              Related Controls: SC-2, SC-3.
                                                                                                       (4) SECURITY AND PRIVACY ENGINEERING PRINCIPLES | PARTIALLY ORDERED DEPENDENCIES
                                                                                                              Implement the security design principle of partially ordered dependencies in [Assignment:
                                                                                                              organization-defined systems or system components].
                                                                                                              Discussion: The principle of partially ordered dependencies states that the synchronization,
                                                                                                              calling, and other dependencies in the system are partially ordered. A fundamental concept
                                                                                                              in system design is layering, whereby the system is organized into well-defined, functionally


                                                                                              CHAPTER THREE                                                                                             PAGE 258
