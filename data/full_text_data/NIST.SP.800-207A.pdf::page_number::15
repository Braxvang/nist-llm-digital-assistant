NIST SP 800-207A                                               ZTA Model for Access Control in Cloud-Native
September 2023                                                   Applications in Multi-Location Environments




                   Fig. 1. Enterprise infrastructure layer for uniform policy deployment


      Designing a Policy Framework for ZTA for Cloud-Native Application
Environments
Based on the set of zero trust principles and some strawman ZTAs provided in [1], the following
driver assumptions were formulated for realizing a ZTA for an enterprise cloud-native
application environment (i.e., a set of microservices in various clusters with each cluster
managed by a service mesh and augmented with an enterprise-level infrastructure that consists of
a global control plane and management plane). These driver assumptions are:
   •   Trust can no longer be based on a network perimeter as perimeters can always be
       breached.
   •   Policies have to be defined based on the assumption that the attacker is already inside of
       the corporate network.
   •   All access decisions have to rely on least-privilege, per-request, and context-based
       principles and on identities associated with users, services, and devices. This results in a
       form of runtime isolation for applications, which this document refers to as “identity-
       based segmentation”.
   •   Since APIs play a crucial role in cloud-native applications, proper versioning (to provide
       backward compatibility), proper input validation techniques (to prevent attacks, such as
       Structured Query Language (SQL) injection and cross-site scripting), and output
       encoding must be part of the policy framework in addition to general requirements, such
       as proper documentation for key areas (e.g., usage instructions).
The above driver assumptions provide the design requirements for a ZTA as follows:
   •   No single component or function is sufficient to implement ZTA. Rather, they must
       collectively enforce zero trust principles across all applications in the infrastructure.
   •   ZTA component functions should be clearly articulated, including their interrelationships
       and workflows.


                                                    7
