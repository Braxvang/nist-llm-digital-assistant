                                                                                Guidelines on PDA Forensics


       an attacker to generate a passcode table and find consistent values to uncover the device
       password, and required correction [Cha02]. Besides its built-in security features, third-party
       security solutions also exist for Linux, to provide additional security measures for device and
       file access.

       The bootloader is firmware that is responsible for initializing hardware and physical memory,
       and loading and transferring control to the kernel. Linux-based bootloaders on embedded
       devices usually can accept kernel images transferred over one or more different interfaces,
       including serial connections, Ethernet connections, and memory cards. They also may provide
       a rich command set. For instance, the flash bootloader for Linux on iPAQ devices is a full-
       featured program that includes commands to read and write arbitrary RAM locations and write
       arbitrary flash ROM locations.16

2.5   Generic States

       The simplest view of a computing device, such as a desktop computer, is that it is in either an
       “on” or “off” state. However, further amplification is needed, particularly for PDAs, whose
       behavior is more complex. Figure 5 gives a high-level diagram that illustrates the various
       states in which a PDA can be at any time, along with the transitions that can occur to cause a
       change of state. While a more detailed state diagram is possible, the following four states
       provide a simple but comprehensive generic model that applies to most PDAs:

                    Nascent State – Devices are in the nascent state when received from the manufacturer
                    – the device contains no user data and observes factory configuration settings. The
                    PDA must be charged to a minimum voltage level to be usable and to gain initial entry
                    to the nascent state, which is attained when the device is first powered on by pressing
                    the power button. Any user action transitions the device out of this state. This state
                    can be attained again by performing a hard reset or letting the battery drain, which
                    clears both the filesystem and dynamic working memory and restores factory settings.

                    Active State – Devices that are in the active state are powered on, performing tasks,
                    and able to be customized by the user and have their filesystems populated with data.
                    If a soft reset is performed, the device returns back to the active state after clearing
                    working memory. If user authentication mechanisms are enabled, they are asserted on
                    a power on or soft reset transition to this state.

                    Quiescent State – The quiescent state is a dormant mode that conserves battery life
                    while maintaining user data and performing other background functions. Context
                    information for the device is preserved in memory to allow a quick resumption of
                    processing when returning to the active state. Pressing the power button when in the
                    active or semi-active state (i.e., to power off the device), or having an inactivity timer
                    expire when in the semi-active state, causes a transition to the quiescent state.

                    Semi-Active State – The semi-active state is a state partway between active and
                    quiescent. The state is reached by a timer, which is triggered after a period of
                    inactivity allowing battery life to be preserved by dimming the display and taking
                    other appropriate actions. The semi-active state returns to the active state when a


       16
            Code is available at http://www.handhelds.org/sources.html.

                                                            14
