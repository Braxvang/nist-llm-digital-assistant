                                                                                              NIST SP 800-204C                                            DEVSECOPS FOR A MICROSERVICES-BASED
                                                                                                                                                                 APPLICATION WITH SERVICE MESH

                                                                                              Infrastructure as code (IaC) is a declarative style of code that encodes computer instructions that
                                                                                              encapsulate the parameters necessary to deploy virtual infrastructure on a public cloud service or
                                                                                              private data center via a service’s management APIs [28]. In other words, infrastructures are
                                                                                              defined in a declarative way and versioned using the same source code control tools (e.g.,
                                                                                              GitOps) used for the application code. Depending on the particular IaC tool, this language can
                                                                                              either be a scripting language (e.g., JavaScript, Python, TypeScript, etc.) or a proprietary
                                                                                              configuration language (e.g., HCL) that may or may not be compatible with standardized
                                                                                              languages (e.g., JSON). The basic instructions consist of telling the system how to provision and
                                                                                              manage infrastructure (whether that is an individual compute instance or a complete server, such
                                                                                              as physical servers or virtual machines), containers, storage, network connections, connection
This publication is available free of charge from: https://doi.org/10.6028/NIST.SP.800-204C




                                                                                              topology, and load balancers. [29]. In some cases, the infrastructure may be short-lived or
                                                                                              ephemeral, and the lifespan of the infrastructure (whether immutable or mutable) does not
                                                                                              warrant continued configuration management. Provisioning could be tied to individual commits
                                                                                              of application code using tools that can connect application code and infrastructure code in a way
                                                                                              that is logical, expressive, and familiar to development and operations teams, where application
                                                                                              code increasingly defines the infrastructure resource requirements for a cloud application [30].

                                                                                              IaC thus involves codifying all software deployment tasks (allocation of type of servers, such as
                                                                                              bare metal, VMs or containers, resource content of servers) and the configuration of these servers
                                                                                              and their networks. The software containing this code type is also called a resource manager or
                                                                                              deployment manager. In other words, IaC software automates the management of the whole IT
                                                                                              infrastructure life cycle (provisioning and de-provisioning of resources) and enables a
                                                                                              programmable infrastructure. The integration of this software as part of the CI/CD pipeline not
                                                                                              only results in agile deployment and maintenance but also in a robust application platform that is
                                                                                              secure and meets performance needs.

                                                                                              4.3.1 Protection for IaC

                                                                                              When infrastructure is code as in IaC, it can include bugs and oversights that can potentially
                                                                                              become vulnerabilities and, therefore, be exploited just as in application code. Thus, protecting
                                                                                              the IaC is protecting the infrastructure definitions and eventually the deployment environment.
                                                                                              Any piece of IaC has to be scanned for potential vulnerabilities before it enters the GitOps and is
                                                                                              merged.

                                                                                              In addition, the assurance of a secure application platform can be obtained only if there is a
                                                                                              methodical drift management process in place. This assurance can be obtained only if the
                                                                                              architecture defined in IaC is what actually exists in the deployed environment since this
                                                                                              equivalence could be altered by an inadvertent or intentional change made through a console or
                                                                                              CLI – thus bypassing the IaC. Ensuring this equivalence has to be done immediately after
                                                                                              deployment and periodically during runtime as any change to the architecture could result in the
                                                                                              introduction of security design flaws and may require making changes to IaC.




                                                                                                                                              22
