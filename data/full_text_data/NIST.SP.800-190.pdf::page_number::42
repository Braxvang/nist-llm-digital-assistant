                                                                                             NIST SP 800-190                                              APPLICATION CONTAINER SECURITY GUIDE



                                                                                             5       Container Threat Scenario Examples

                                                                                             To illustrate the effectiveness of the recommended countermeasures from Section 4, consider the
                                                                                             following threat scenario examples for containers.

                                                                                             5.1     Exploit of a Vulnerability within an Image

                                                                                             One of the most common threats to a containerized environment is application-level
                                                                                             vulnerabilities in the software within containers. For example, an organization may build an
                                                                                             image based on a common web app. If that app has a vulnerability, it may be used to subvert the
                                                                                             app within the container. Once compromised, the attacker may be able to map other systems in
                                                                                             the environment, attempt to elevate privileges within the compromised container, or abuse the
This publication is available free of charge from: https://doi.org/10.6028/NIST.SP.800-190




                                                                                             container for use in attacks on other systems (such as acting as a file dropper or command and
                                                                                             control endpoint).

                                                                                             Organizations that adopt the recommended countermeasures would have multiple layers of
                                                                                             defense in depth against such threats:

                                                                                                   1. Detecting the vulnerable image early in the deployment process and having controls in
                                                                                                      place to prevent vulnerable images from being deployed would prevent the vulnerability
                                                                                                      from being introduced into production.
                                                                                                   2. Container-aware network monitoring and filtering would detect anomalous connections
                                                                                                      to other containers during the attempt to map other systems.
                                                                                                   3. Container-aware process monitoring and malware detection would detect the running of
                                                                                                      invalid or unexpected malicious processes and the data they introduce into the
                                                                                                      environment.

                                                                                             5.2     Exploit of the Container Runtime

                                                                                             While an uncommon occurrence, if a container runtime were compromised, an attacker could
                                                                                             utilize this access to attack all the containers on the host and even the host itself.

                                                                                             Relevant mitigations for this threat scenario include:

                                                                                                   1. The usage of mandatory access control capabilities can provide additional barriers to
                                                                                                      ensure that process and file system activity is still segmented within the defined
                                                                                                      boundaries.
                                                                                                   2. Segmentation of workloads ensures that the scope of the compromise would be limited to
                                                                                                      apps of a common sensitivity level that are sharing the host. For example, a compromised
                                                                                                      runtime on a host only running web apps would not impact runtimes on other hosts
                                                                                                      running containers for financial apps.
                                                                                                   3. Security tools that can report on the vulnerability state of runtimes and prevent the
                                                                                                      deployment of images to vulnerable runtimes can prevent workloads from running there.

                                                                                             5.3     Running a Poisoned Image

                                                                                             Because images are easily sourced from public locations, often with unknown provenance, an
                                                                                             attacker may embed malicious software within images known to be used by a target. For

                                                                                                                                             30
