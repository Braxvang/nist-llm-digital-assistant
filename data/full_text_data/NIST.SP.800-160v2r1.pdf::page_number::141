                                                                                                 NIST SP 800-160, VOL. 2, REV. 1                                         DEVELOPING CYBER-RESILIENT SYSTEMS
                                                                                                 _________________________________________________________________________________________________


                                                                                                 can also be based on criticality (i.e., the importance to achieving mission objectives). While
                                                                                                 some resources can be determined to be mission-critical or mission-essential a priori, the
                                                                                                 criticality of other resources can change dynamically. For example, a resource that is vital to one
                                                                                                 phase of mission processing can become unimportant after that phase is completed.

                                                                                                 Many systems or system components provide the capability to define and manage privileges
                                                                                                 associated with software, services, processes, hardware, communications channels, and
                                                                                                 individual users. The assignment of privileges should ideally reflect judgments of operational
                                                                                                 need (e.g., need-to-know, need-to-use) as well as trustworthiness. The restriction of privileges is
                                                                                                 well established as a security design principle (i.e., least privilege). Privilege restrictions force
This publication is available free of charge from: https://doi.org/10.6028/NIST.SP.800-160v2r1




                                                                                                 adversaries to focus efforts on a restricted set of targets, which can be assured (in the case of
                                                                                                 software), validated (in the case of data), or monitored (in the case of individuals, processes,
                                                                                                 communications channels, and services). Non-Persistence and Segmentation can also limit
                                                                                                 visibility. Thus, this principle can be applied in conjunction with the Contain and exclude
                                                                                                 behaviors and Maximize transience principles.

                                                                                                 D.5.2.3 Contain and Exclude Behaviors
                                                                                                 The behavior of a system or system element—including what resources it uses, which systems
                                                                                                 or system elements it interacts with, or when it takes a given action—can vary based on many
                                                                                                 legitimate circumstances. However, analysis of the organizational missions or business functions
                                                                                                 and the processes that carry out those missions and functions [SP 800-39] can identify some
                                                                                                 behaviors that are always unacceptable and others that are acceptable only under specific
                                                                                                 circumstances. Therefore, excluding behaviors prevents them from having undesirable
                                                                                                 consequences. Behaviors can be excluded a priori with varying degrees of assurance, from
                                                                                                 removing functionality to restricting functionality or use, with trade-offs between assurance and
                                                                                                 flexibility. For example, user activity outside of specific time windows can be precluded. In
                                                                                                 addition, behaviors can be interrupted based on ongoing monitoring when that monitoring
                                                                                                 provides a basis for suspicion.

                                                                                                 Containing behaviors involves restricting the set of resources or system elements that can be
                                                                                                 affected by the behavior of a given system element. Such restrictions can but do not necessarily
                                                                                                 involve a temporal aspect. Containment can be achieved a priori, via predefined privileges and
                                                                                                 segmentation. Alternately, or perhaps additionally, Dynamic Segmentation and Isolation and
                                                                                                 Adaptive Response and can be applied. For example, a sandbox or deception environment can
                                                                                                 be dynamically created in response to suspicious behavior, and subsequent activities can be
                                                                                                 diverted there.

                                                                                                 D.5.2.4 Layer Defenses and Partition Resources
                                                                                                 Defense-in-depth is the integration of people, technology, and operations capabilities to
                                                                                                 establish variable barriers across multiple layers and missions [CNSSI 4009] and is a well-
                                                                                                 established security strategy. It describes security architectures constructed through the
                                                                                                 application of multiple mechanisms to create a series of barriers to prevent, delay, or deter an
                                                                                                 attack by an adversary [SP 800-160 v1]. Multiple mechanisms to achieve the same objective or
                                                                                                 provide equivalent functionality can be used at a single layer (e.g., different COTS firewalls to
                                                                                                 separate zones in a DMZ) or at different layers (e.g., detection of suspicious behavior at the
                                                                                                 application, operating system, and network layers). To avoid inconsistencies that could result in
                                                                                                 errors or vulnerabilities, such (multiple) mechanisms should be managed consistently.



                                                                                                 APPENDIX D                                                                                        PAGE 125
