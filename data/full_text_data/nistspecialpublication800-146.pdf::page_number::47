                                                            CLOUD COMPUTING SYNOPSIS AND RECOMMENDATIONS



6.4.3    Security Engineering of PaaS Applications

A PaaS application developer must manage a number of security exposures. Unlike the case of an
application that can potentially run in an isolated environment using only local resources, PaaS
applications access networks intrinsically. Additionally, PaaS applications must explicitly use
cryptography, and must interact with the presentation features of common Web browsers that provide
output to consumers. PaaS applications typically also require the use of multiple languages and formats,
e.g., HTML, Java, JavaScript, XML, HTTP, .Net, and Web resource archive formats.

6.5     Candidate Application Classes

PaaS toolkits and services can be used to develop a wide variety of applications that can then be used as
SaaS. The application classes that are good fits for PaaS are therefore essentially the same as those for
SaaS, as presented in Section 5.5.

6.6     Recommendations for Platform as a Service

For Federal information systems and those operated on behalf of the US Government, the Federal
Information Security Management Act (FISMA) of 2002 and the associated NIST standards and special
publications (e.g. FIPS 199, FIPS 200, SP 800-53, etc.) do apply to PaaS systems. General
recommendations for cloud computing services are given in section 9. See also Appendix A on the
sharing of roles and responsibilities between customers and cloud providers. The following are additional
recommendations for PaaS systems:

 Generic Interfaces. Before a decision is made to develop new applications on a public PaaS cloud
  platform, it is recommended to evaluate whether the application infrastructure interfaces (for file,
  queue, hash table, etc.) provided in that platform are or could be made generic enough to support
  portability and interoperability of the application. PaaS clouds that support generic interfaces are
  preferable.
 Standard Languages and Tools. Choose PaaS systems that work with standardized languages and
  tools unless the only practical options are PaaS systems that are restricted to proprietary languages
  and tools.
 Data Access. Choose PaaS systems that work with standard data access protocols (e.g., SQL) when
  practicable.
 Data Protection. Analyze the PaaS provider’s data protection mechanisms, data location
  configuration and database organization/transaction processing technologies, and assess whether they
  will meet the confidentiality, compliance, integrity and availability needs of the organization that will
  be using the subscribed PaaS application.
 Application Frameworks. If available, choose PaaS systems that provide application development
  frameworks that include an architecture and tools for mitigating security vulnerabilities.
 Component Testing. Before a decision is made to deploy a new application on a public PaaS cloud
  platform (or in some cases composing an application from the building blocks provided by the PaaS
  cloud provider), ensure that software libraries included in the compilation phase or called during the
  execution phase behave as intended both in terms of functionality and performance.
 Security. Ensure that a PaaS application can be configured to run in a secure manner (e.g., a
  dedicated VLAN segment, using cryptography for client-server communications) and can be



                                                    6-5
