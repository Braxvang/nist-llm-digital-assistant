GUIDE TO INTEGRATING FORENSIC TECHNIQUES INTO INCIDENT RESPONSE



indicate the characteristics that are most pertinent to network forensics. Section 6.1.5 explains how the
layers relate to each other.




                                             Figure 6-2. TCP/IP Encapsulation



6.1.1     Application Layer

The application layer enables applications to transfer data between an application server and client. An
example of an application layer protocol is Hypertext Transfer Protocol (HTTP), which transfers data
between a Web server and a Web browser. Other common application layer protocols include Domain
Name System (DNS), File Transfer Protocol (FTP), Simple Mail Transfer Protocol (SMTP), and Simple
Network Management Protocol (SNMP). There are hundreds of unique application layer protocols in
common use, and many more that are not so common.83 Regardless of the protocol in use, application
data is generated and then passed to the transport layer for further processing. Section 7 focuses on
application-related data collection, examination, and analysis.

6.1.2     Transport Layer

The transport layer is responsible for packaging data so that it can be transmitted between hosts. After the
transport layer has encapsulated application data, the resulting logical units are referred to as packets. (A
packet can also be created without application dataâ€”for example, when a connection is first negotiated.)
Each packet contains a header, which is composed of various fields that specify characteristics of the
transport protocol in use; optionally, packets may also contain a payload, which holds the application
data.

Most applications that communicate over networks rely on the transport layer to ensure reliable delivery
of data. Generally, this is accomplished by using the TCP transport layer protocol, which establishes a
connection between two hosts and then makes a best effort to ensure the reliable transfer of data over that
connection. Each TCP packet includes a source port and a destination port. One of the ports is associated
with a server application on one system; the other port is associated with a corresponding client
application on the other system. Client systems typically select any available port number for application
use, whereas server systems normally have a static port number dedicated to each application. Although
many server ports are usually used by particular applications (e.g., FTP servers at port 21, HTTP servers

83
     For this reason, a detailed discussion of individual application layer protocols is beyond the scope of this document.


                                                               6-2
