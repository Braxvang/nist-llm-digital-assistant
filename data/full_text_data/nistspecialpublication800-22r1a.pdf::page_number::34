A STATISTICAL TEST SUITE FOR RANDOM AND PSEUDORANDOM NUMBER GENERATORS FOR CRYPTOGRAPHIC APPLICATIONS



2.5.6 Conclusion and Interpretation of Results
Since the P-value obtained in step 5 of Section 2.5.4 is ≥ 0.01 (P-value = 0.741948), the conclusion is that
the sequence is random.

Note that large values of χ 2 ( obs ) (and hence, small P-values) would have indicated a deviation of the
rank distribution from that corresponding to a random sequence.

2.5.7 Input Size Recommendation
The probabilities for M = Q = 32 have been calculated and inserted into the test code. Other choices of
M and Q may be selected, but the probabilities would need to be calculated. The minimum number of
bits to be tested must be such that n ≥ 38MQ (i.e., at least 38 matrices are created). For M = Q = 32, each
sequence to be tested should consist of a minimum of 38,912 bits.

2.5.8 Example
(input)    ε = the first 100,000 binary digits in the expansion of e

(input)          n = 100000, M = Q = 32            (NOTE: 672 BITS WERE DISCARDED.)

(processing)     N = 97

(processing)     FM = 23, FM-1 = 60, N – FM – FM-1= 14

(processing)     χ2 = 1.2619656

(output)         P-value = 0.532069

(conclusion)     Since P-value ≥ 0.01, accept the sequence as random.


2.6   Discrete Fourier Transform (Spectral) Test

2.6.1 Test Purpose
The focus of this test is the peak heights in the Discrete Fourier Transform of the sequence. The purpose
of this test is to detect periodic features (i.e., repetitive patterns that are near each other) in the tested
sequence that would indicate a deviation from the assumption of randomness. The intention is to detect
whether the number of peaks exceeding the 95 % threshold is significantly different than 5 %.

2.6.2 Function Call
DiscreteFourierTransform(n), where:

           n     The length of the bit string.

Additional input used by the function, but supplied by the testing code:

           ε     The sequence of bits as generated by the RNG or PRNG being tested; this exists as a
                 global structure at the time of the function call; ε = ε1, ε2, … , εn.




                                                     2-12
