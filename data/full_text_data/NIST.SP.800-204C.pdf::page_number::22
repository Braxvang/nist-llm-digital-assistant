                                                                                              NIST SP 800-204C                                               DEVSECOPS FOR A MICROSERVICES-BASED
                                                                                                                                                                    APPLICATION WITH SERVICE MESH

                                                                                              3.3 DevSecOps – Key Primitives and Implementation Tasks

                                                                                              The key primitives and implementation tasks involved are:
                                                                                              • Concept of pipelines and the CI/CD pipeline
                                                                                              • Building blocks for the CI/CD pipeline
                                                                                              • Designing and executing the CI/CD pipeline
                                                                                              • Strategies for automation
                                                                                              • Requirements for security automation tools in the CI/CD pipeline

                                                                                              3.3.1 Concept of Pipelines and the CI/CD Pipeline
This publication is available free of charge from: https://doi.org/10.6028/NIST.SP.800-204C




                                                                                              DevSecOps, being a methodology or framework for agile application development, deployment,
                                                                                              and operations – is made up of stages just like any other methodology [14]. The sequence and
                                                                                              flow of information through the stages is called workflow, where some stages can be executed in
                                                                                              parallel while others have to follow a sequence. Each stage may require the invocation of a
                                                                                              unique job to execute the activities in that stage.

                                                                                              A unique concept that DevSecOps introduces in the process workflow is the concept of
                                                                                              “pipelines” [15]. With pipelines, there is no need to individually write jobs for
                                                                                              initiating/executing each stage of the process. Instead, there is only one job that starts from the
                                                                                              initial stage, automatically triggers the activities/tasks pertaining to other stages (both sequential
                                                                                              and parallel), and creates an error-free smart workflow.

                                                                                              The pipeline in DevSecOps is called the CI/CD pipeline based on the overall tasks it
                                                                                              accomplishes and the two individual stages it contains. CD can denote either the continuous
                                                                                              delivery or continuous deployment stage. Depending on this latter stage, CI/CD can involve the
                                                                                              following tasks:
                                                                                              • Build, Test, Secure, and Deliver – the tested modified code is delivered to the staging area.
                                                                                              • Build, Test, Secure, Deliver, and Deploy – the code in the stage area is automatically
                                                                                                  deployed.

                                                                                              In the former, automation ends at the delivery stage, and the next task of deployment of the
                                                                                              modified application in the hosting platform infrastructure is performed manually. In the latter,
                                                                                              the deployment is also automated. Automation of any stage in the pipeline is enabled by tools that
                                                                                              express the pipeline stage as code.

                                                                                              The workflow process for a CI/CD pipeline is depicted in Figure 1 below:




                                                                                                                                                12
