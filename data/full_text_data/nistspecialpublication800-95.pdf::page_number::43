                                                                              GUIDE TO SECURE WEB SERVICES



 Identity and attribute mapping services. Often included within the trust services, these services
  map supplied identifying information or attributes to their local equivalents.
 User lifecycle management services. These services allow the establishment or mapping of
  identifying information and attributes for a user from a different organization.
 Authorization services. Often implemented locally for individual services, authorization services
  can process the credentials provided by the sender, query the appropriate security policy and
  determine whether the sender is allowed to perform the requested action.
Identity management systems may provide these abstract services in various configurations, with some
being explicit Web services while others are implicitly supplied. Should an organization choose to
implement its own identity management architecture, it should determine which of these services are
necessary and implement them accordingly.

3.3   Establishing Trust between Services

For SAML or WS-Security to be useful on a large scale, trust relationships need to be established between
remote Web services. A signed SAML assertion or WS-Security message is of no use if the receiver of
the assertion cannot guarantee that the information asserted is trustworthy.

In the original SAML specification, only direct trust relationships are discussed—these are referred to as
pairwise circles of trust. By contrast, SAML v2.0 provides two additional trust models for SAML:
brokered trust and community trust.

Pairwise trust circles are the tightest and most direct form of trust relationship. Each entity that is
authorized to communicate with another must share its key information. In a pairwise trust circle, if a
SAML assertion can be verified, it is from an authorized entity. One major drawback of pairwise trust is
that each entity must have a copy of the public key from every other entity with which it communicates,
making the system inherently unscalable.

Brokered trust models are an extension of the pairwise trust model. When two services communicate that
do not know each other’s keys, a TTP is used to exchange the key information for them. This scales
better than the pairwise trust circle because adding a new service provider involves simply exchanging its
key information with the TTP. The Web service providers have to trust that the TTP has not been
compromised. This differs from the pairwise model in which each service provider is independently
responsible for trust.

Another difficulty with the brokered trust model is that there may be a situation where the two services
can communicate with the TTP but should not communicate with each other. In the pairwise model,
entities that should not communicate with one another would simply not have the appropriate
cryptographic keys to do so, preventing any messages from being passed. In the brokered trust model,
each entity can communicate with the TTP and thus with other entities. Either the TTP or the individual
entities must know who should and should not communicate with one another.

The community trust model relies on an external PKI for establishing trust. This trust model assumes that
the PKI interfaces are implemented correctly and that none of the certificate authorities have been
compromised. This model provides simplicity similar to that of the pairwise trust model and scalability
superior to the brokered trust model. If the remote entity’s key can be retrieved through the PKI interface,
a trusted authority has signed its key and it is safe to communicate with it. There must be a mechanism in
place preventing two entities from communicating against policy even if they can retrieve each other’s



                                                    3-8
