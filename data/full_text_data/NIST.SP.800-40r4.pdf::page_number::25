                                                                                              NIST SP 800-40r4                                   GUIDE TO ENTERPRISE PATCH MANAGEMENT PLANNING:
                                                                                                                                                          PREVENTIVE MAINTENANCE FOR TECHNOLOGY

                                                                                              such as passive (unauthenticated) instead of active (authenticated) vulnerability scans, will
                                                                                              generally underreport vulnerabilities and thus skew the higher-level metrics.

                                                                                              3.7     Consider Software Maintenance in Procurement

                                                                                              Organizations should take software maintenance into consideration when procuring
                                                                                              software. Software maintenance is one factor of many that organizations should consider. It is
                                                                                              beyond the scope of this publication to provide methodologies for estimating software
                                                                                              maintenance costs or factoring software maintenance into procurement decisions. However, the
                                                                                              following is a sample questionnaire that an organization could use to help it understand the
                                                                                              software maintenance needs of new software that it may procure:
                                                                                                    1. Will you be releasing updates for this software to address vulnerabilities?
This publication is available free of charge from: https://doi.org/10.6028/NIST.SP.800-40r4




                                                                                                    2. Approximately how many patches, updates, and upgrades do you expect to release each
                                                                                                       year for this software? On average, how quickly do you expect to address each
                                                                                                       vulnerability and release a patch? Do you bundle patches together or is each patch
                                                                                                       separate? How often do you anticipate releasing emergency updates?
                                                                                                    3. For how many years are you committed to correcting vulnerabilities in the software?
                                                                                                    4. Will you release updates on a regular schedule, as needed, or both? If a schedule will be
                                                                                                       followed, what is that schedule (weekly, monthly, quarterly, etc.)?
                                                                                                    5. Do you have a vulnerability disclosure and incident response program for your software?
                                                                                                       How transparent are you in your security-related communications to your customers?
                                                                                                    6. When a vulnerability in your software becomes public but a patch, update, or upgrade is
                                                                                                       not available, how do you recommend that customers protect their computing assets
                                                                                                       running your software? Will you provide an emergency mitigation to prevent
                                                                                                       vulnerability exploitation while maintaining most or all software functionality?
                                                                                                    7. When your software is patched or updated, how disruptive will that be to the operating
                                                                                                       software? For instance, will it require restarting the software, rebooting the asset on
                                                                                                       which the software is running, etc.?
                                                                                                    8. How do you test your patches before release? How often do customers experience
                                                                                                       significant issues with your patches? Do you provide rollback capabilities for uninstalling
                                                                                                       patches?




                                                                                                                                                18
