                                                                                             NIST SP 800-192                                                     VERIFICATION & TEST METHODS FOR
                                                                                                                                                                 ACCESS CONTROL POLICIES/MODELS

                                                                                             method on entities in the model and safety requirements is required to assess the sufficiency of the
                                                                                             safety, covering and confinement of the model. [HKXH11].

                                                                                             In terms of AC attributes, the formal definition of AC model can be illustrated by a deterministic
                                                                                             finite state transducer corresponding to a Finite State Machine (FSM) with a five-tuple M = (Σ, ST,
                                                                                             s0, δ, F), where: Σ is the input alphabet that represents the attributes associated with subjects,
                                                                                             actions, objects, and environment conditions. ST is a finite, non-empty set of recorded AC system
                                                                                             states and permissions. s0 is the initial state, δ is the state-transition function, where δ : ST× Σ →
                                                                                             ST, F is the set of final states include Grant, Deny as the output

                                                                                             For static AC models as described in Section 2.2 a), the FSM Mstatic does not require internal
                                                                                             states st to reach the permission state, thus F = ST = {Grant, Deny}, i.e., Mstatic is just a
This publication is available free of charge from: https://doi.org/10.6028/NIST.SP.800-192




                                                                                             straightforward FSM model without state transitions. For dynamic AC models as described in
                                                                                             Section 2.2 b), the input alphabets of FSM Mdynamic are Σdynamic = {gCond1, …, gCondn},
                                                                                             where gCondi is the threshold indicator of the access limitation, such as the number of persons
                                                                                             that have to access at the same time in a N-Person control policy, or the maximum number of
                                                                                             accesses allowed for a Limited_Number_of_Access policy. For historical AC models as described
                                                                                             in Section 2.2 c), the input alphabets of the FSM Mhistorical are Σhistorical = Σ -{gCond1, …,
                                                                                             gCondn}, where sCondi, aCondi, and oCondi contribute to a historical recording that is used as
                                                                                             determining factors for the next permission decision. Note that it is possible for different types of
                                                                                             AC models to combine into one model such that Mcombine = {Mstatic ∪ Mdynamic ∪
                                                                                             Mhistorical}2

                                                                                             An AC safety requirement p is expressed by the proposition p: ST × Σ2 → ST of FSM, which can
                                                                                             be collectively translated in terms of logical formulae such that p = (si*sCond1*…*sCondn*
                                                                                             aCond1*…* aCondn* oCond1* …* oCondn*gCond1* …*gCondn) → d, where p ∈ P is a set of
                                                                                             safety requirements, and * is a Boolean operator in terms of logical formulas of temporal logic
                                                                                             such as computational tree logic (CTL) and linear-time temporal logic (LTL). The purpose of
                                                                                             model checking is to verify the set ST in M in which p is true according to an exhaustive state
                                                                                             space search. In addition, by verifying the set of states in which the negation of p is true, we can
                                                                                             obtain the set of counterexamples to make the assertion that p is true. The satisfaction of an AC
                                                                                             model M to the AC safety requirement P by model checking is composed of two requirements:

                                                                                             (1) Safety, where M satisfies P. That is, there is no violation of rules to the logic specified in P,
                                                                                             and it is assured that M will eventually be in a desired state after it takes actions in compliance
                                                                                             with a user access request.

                                                                                             (2) Liveness, where M will not have neither a deadlock in which the system waits forever for
                                                                                             system events, nor a livelock in which the model repeatedly executes the same operations
                                                                                             forever. Figure 3 shows the relations between M and P in a model checking framework.

                                                                                                          Policy:             Access control model: M
                                                                                                                                                                  AC
                                                                                                          (rules,             = (Σ, ST, s0, δ, F)                 requirements:
                                                                                                          constraints)
                                                                                                                                                        Verify the P ={p1…pn}
                                                                                                                                                        safety and
                                                                                                                                                        liveness of P


                                                                                                                           Figure 3 AC model and safety requirement


                                                                                                                                               16
