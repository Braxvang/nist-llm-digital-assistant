                                NIST Special Publication 800-38D


Given a bit string X, the bit length of X is denoted len(X). For example, len(00010)=5.

Given a bit string X and a non-negative integer s such that len(X)≥s, the functions LSBs(X) and
MSBs(X) return the s least significant (i.e., right-most) bits and the s most significant (i.e., left-
most) bits, respectively, of X.           For example, LSB3(111011010) = 010, and
MSB4(111011010) = 1110.

Given a bit string X, the (single) right-shift function, denoted X >> 1, is MSBlen(X)(0 || X). For
example, 0110111 >> 1 = 0011011.

Given a positive integer s and a non-negative integer x that is less than 2s, the integer-to-string
function, denoted [x]s, is the binary representation of x as a string of bit length s with the least
significant bit on the right. For example, for the (base 10) integer 39, the binary representation
(base 2) is 100111, so [39] 8 = 00100111.

Given a (non-empty) bit string X, the string-to-integer function, denoted int(X), is the integer x
such that [x]len(X) = X. In other words, int(X) is the non-negative integer less than 2len(X) whose
binary representation is X. For example, int(00011010) = 26.

6.2   Incrementing Function

For a positive integer s and a bit string X such that len(X)≥s, let the s-bit incrementing function,
denoted incs(X), be defined as follows:

                         incs(X)=MSBlen(X)-s(X) || [int(LSBs(X))+1 mod 2s]s

In other words, the function increments the right-most s bits of the string, regarded as the binary
representation of an integer, modulo 2s; the remaining, left-most len(X)-s bits remain unchanged.

6.3   Multiplication Operation on Blocks

Let R be the bit string 11100001 || 0120. Given two blocks X and Y, Algorithm 1 below
computes a “product” block, denoted X •Y:

       Algorithm 1: X •Y

       Input:
       blocks X, Y.

       Output:
       block X •Y.

       Steps:
       1.     Let x0x1...x127 denote the sequence of bits in X.
       2.     Let Z0 = 0128 and V0 = Y.
       3.     For i = 0 to 127, calculate blocks Zi+1 and Vi+1 as follows:




                                                 11
