                                                                                              NIST SP 800-204C                                             DEVSECOPS FOR A MICROSERVICES-BASED
                                                                                                                                                                  APPLICATION WITH SERVICE MESH

                                                                                              2       Reference Platform for the Implementation of DevSecOps Primitives

                                                                                              As stated in Section 1.1, the reference platform is a container orchestration and management
                                                                                              platform. In modern application environments, the platform is an abstraction layer over a physical
                                                                                              (bare metal) or virtualized (e.g., virtual machines, containers) infrastructure. Before the
                                                                                              implementation of DevSecOps primitives, the platform simply contains the application code,
                                                                                              which contains the application logic and the service mesh code, which in turn provides
                                                                                              application services. This section will consider the following:

                                                                                                  •    A container orchestration and resource management platform that houses both the
This publication is available free of charge from: https://doi.org/10.6028/NIST.SP.800-204C




                                                                                                       application code and most of the service mesh code
                                                                                                  •    The service mesh software architecture

                                                                                              2.1 Container Orchestration and Resource Management Platform

                                                                                              Since microservices are typically implemented as containers, a container orchestration and
                                                                                              resource management platform are used for deployment, operations, and maintenance of services.

                                                                                              A typical orchestration and resource management platform consists of various logical (forming
                                                                                              the abstraction layer) and physical artifacts for the deployment of containers. For example, in
                                                                                              Kubernetes, containers run inside the smallest unit of deployment called a pod. A pod can
                                                                                              theoretically host a group of containers, though usually, only one container runs inside a pod. A
                                                                                              group of pods are defined inside what is known as a node, where a node can be either a physical
                                                                                              or virtual machine (VM). A group of nodes constitutes a cluster. Usually, multiple instances of a
                                                                                              single microservice are needed to distribute the workload to achieve the desired performance
                                                                                              level. A cluster is a pool of resources (nodes) that is used to distribute the workload of
                                                                                              microservices. One of the techniques used is horizontal scaling, where microservices that are
                                                                                              accessed more frequently are allocated more instances or allocated to nodes with more resources
                                                                                              (e.g., CPUs and/or memory).

                                                                                              2.1.1    Security Limitations of Orchestration Platform

                                                                                              Microservices-based applications require several application services, including security services
                                                                                              such as authentication and authorization, as well as the generation of metrics for individual pods
                                                                                              (monitoring), consolidated logging (to ascertain causes of failures of certain requests), tracing
                                                                                              (sequence of service calls for an application request), traffic control, caching, secure ingress,
                                                                                              service-to-service (east/west traffic), and egress communication.
                                                                                              Taking the example of secure communications between containers, specific code needs to be
                                                                                              added in order to secure the communications between pods in a platform such as Kubernetes (e.g.,
                                                                                              with mTLS). Pods that communicate do not apply identity and access management between
                                                                                              themselves. Though there are tools that can be implemented to act as a firewall between pods,
                                                                                              such as the Kubernetes Network Policy [8], this is a layer 3 solution rather than a layer 7 solution,
                                                                                              which is what most modern firewalls are. This means that while one can know the source of
                                                                                              traffic, one cannot peek into the data packets to understand what they contain. Further, it does not
                                                                                              allow for making vital metadata-driven decisions, such as routing on a new version of a pod
                                                                                                                                                6
