                                                                                               NIST SP 800-178                                                         COMPARISON OF ABAC STANDARDS FOR
                                                                                                                                                                         DATA SERVICES: XACML AND NGAC


                                                                                               Role(u) = ‚Äúdoctor‚Äù AND Ward (u) = Ward (o) AND (a = read OR a = write) specifies that any
                                                                                               user with a Role of doctor can read or write any object where the Ward of the user is the same as
                                                                                               the Ward of the object. XACML includes a policy specification language that falls into this
                                                                                               category. Two other policy models that fall in this category are ABAC ùû™ùû™ [7] and HGABAC
                                                                                               (Hierarchical Group and Attribute Based Access Control) [8]. The second technique for
                                                                                               expressing policy is by enumeration involving configurations of relations. NGAC and LaBAC
                                                                                               (Label-Based Access Control) [6] fall under this category. For example, NGAC specifies polices
                                                                                               in part by using combinations of association relations of the form (ua i , ars i , oa i ), with the
                                                                                               meaning that the users in user attribute, ua i have the access rights in access right set, ars i on the
This publication is available free of charge from: http://dx.doi.org/10.6028/NIST.SP.800-178




                                                                                               objects in the object attribute, oa i .

                                                                                               XACML and NGAC are ABAC standards for facilitating policy-preserving user executions of
                                                                                               data service capabilities (data service operations on data service resources). In general, data
                                                                                               services are a class of applications that provide users with capabilities to consume, manipulate,
                                                                                               manage, and share data. Examples of data services include applications such as ‚Äútime and
                                                                                               attendance reporting‚Äù, payroll processing, corporate calendaring, and health benefits
                                                                                               management, all with a strong need for access control. XACML and NGAC provide a single
                                                                                               generic access control facility for applications, resulting in a dramatic alleviation of many of the
                                                                                               administrative, interoperability, and usability challenges otherwise faced by enterprises. This is
                                                                                               achieved by removing the access control logic from the access control mechanism in the
                                                                                               operating environment of each application. Instead the access control logic is implemented using
                                                                                               a common set of access control modules that provide access decision functionality, which
                                                                                               support these applications using a centralized policy and attribute repository.

                                                                                               Stated another way, from the perspective of access control, a data service can be conceptually
                                                                                               viewed as an application with a presentation/logic layer and an operating environment layer
                                                                                               delineated by their functionality and interfaces. The presentation layer provides users with an
                                                                                               interface and methods for creating, displaying, and altering data. The presentation layer does not
                                                                                               carry out operations that store, retrieve, or alter the state of stored data, or alter the access state to
                                                                                               data (e.g., read, write/save, create and delete files, submit, approve, schedule), but instead issues
                                                                                               requests to the operating environment layer to perform those operations. An operating
                                                                                               environment implements operational routines to carry out access requests and provides access
                                                                                               control to ensure that executions of processes involving operational routines are policy
                                                                                               preserving.

                                                                                               Access control mechanisms comprise several components that work together to bring about
                                                                                               policy-preserving data access. These components include access control data for expressing
                                                                                               access control policies and representing attributes, and a set of functions for trapping access
                                                                                               requests and for computing and enforcing access decisions over those requests. Most operating
                                                                                               environments implement access control in different ways, each with a different scope of control
                                                                                               (e.g., users, resources), and each with respect to different operation types (e.g., read, send,
                                                                                               approve, select) and data types (e.g., files, messages, work items, records).

                                                                                               This heterogeneity introduces a number of administrative and policy enforcement challenges.
                                                                                               Administrators are forced to contend with a multitude of security domains when managing
                                                                                               access policies and attributes. Even if properly coordinated across operating environments,

                                                                                                                                                   3
