                                              GUIDE TO INTEGRATING FORENSIC TECHNIQUES INTO INCIDENT RESPONSE



          saver passwords without rebooting the system. These utilities generally rely on the CD drive’s
          autorun feature; the utility automatically runs in the background, then locates the encrypted
          password and attempts to decrypt it.
      ! Log Modification. The user might try to reduce the usefulness of logs by disabling log features,
        modifying log settings so that there is little storage available for logs, or writing many spurious
        events to the logs. One way of reducing the impact of logging changes is to configure systems to
        archive their log entries on a centralized server.
      ! Hard Drives with Flash Memory. Occasionally, an analyst might come across a hard drive that
        also contains flash memory. This flash memory could contain a password that is needed to access
        the drive, even when the drive has been removed from the computer. Typically, the analyst must
        then find, guess, or crack the password to gain access to the drive.
      ! Key Remapping. On some computers, individual keys or combinations of keystrokes can be
        remapped to perform a different function from their initial purpose. For example, a person could
        map the Ctrl, Alt, and Del keys so that they wipe the computer’s hard drive instead of the
        expected action, rebooting the system. An analyst who uses the keyboard of a computer of
        interest could enter keystrokes that cause unexpected actions to be performed. The best way to
        avoid key remapping problems is by collecting data from the computer without using its
        keyboard. For example, the analyst could attach a forensic workstation to a computer of interest
        using a crossover network cable and run scripts from the forensic workstation.
5.3     Examining and Analyzing OS Data

Various tools and techniques can be used to support the examination process. Many of the tools and
techniques discussed in Section 4.3 for examining collected data files can also be used with collected OS
data. In addition, as described in Section 7, security applications, such as file integrity checkers and host
IDSs, can be very helpful in identifying malicious activity against OSs. For instance, file integrity
checkers can be used to compute the message digests of OS files and compare them against databases of
known message digests to determine whether any files have been compromised. If intrusion detection
software is installed on the computer, it might contain logs that indicate the actions performed against the
OS.

Another issue that analysts face is the examination of swap files and RAM dumps, which are large binary
data files containing unstructured data. Hex editors can be used to open these files and examine their
contents; however, on large files, manually trying to locate intelligible data using a hex editor can be a
time-consuming process. Filtering tools automate the process of examining swap and RAM dump files
by identifying text patterns and numerical values that might represent phone numbers, names of people, e-
mail addresses, Web addresses, and other types of critical information.

Analysts often want to gather additional information about a particular program running on a system, such
as the process’s purpose and manufacturer. After obtaining a list of the processes currently running on a
system, analysts can look up the process name to obtain such additional information. However, users
might change the names of programs to conceal their functions, such as naming a Trojan program
calculator.exe. Therefore, process name lookups should be performed only after verifying the identity of
the process’s files by computing and comparing their message digests. Similar lookups can be performed
on library files, such as DLLs on Windows systems, to determine which libraries are loaded and what
their typical purposes are.

As described in Section 5.2, analysts may collect many different types of OS data, including multiple
filesystems. Trying to sift through each type of data to find relevant information can be a time-intensive


                                                    5-11
