                                                                                           GUIDE TO SSL VPNS



    resources for which the current user is authorized. If relevant, it should be consistent with the
    organization’s guidelines for Web sites and applications.
 Security of the Implementation. Parts of the SSL VPN’s implementation, such as the SSL code or
  the firewall code, may contain vulnerabilities that attackers could exploit. Organizations with high
  security requirements may want to perform extensive vulnerability assessments against the SSL VPN
  components. At a minimum, the testers should update the SSL VPN components with the latest
  patches and configure the components following sound security practices. If the device supports
  features to protect against cross-site scripting, Structured Query Language (SQL) injection, and buffer
  overflow attacks, then these features should be enabled.
 Endpoint Security. Only the client machines that pass the security requirements (e.g., firewall,
  antivirus software) should be granted access to the SSL VPN. If any security mechanism such as a
  virtual storage space or cache cleaner is enabled during a login session, these mechanisms should
  erase all data downloaded during the VPN session.
 Default Settings. SSL VPN implementations have many default configuration settings. SSL VPN
  implementers should carefully review the default values for each setting and alter the settings as
  necessary to support their design goals. They should also ensure that the implementation does not
  unexpectedly “drop back” to default settings for interoperability or other reasons.
4.4.1   Application and Client Interoperability

Application and client interoperability is a key requirement for a successful SSL VPN implementation.
This is especially important because of the diversity of both the accessible applications and the potential
user client environments. It is difficult to predict how a specific client will interoperate with a specific
application through the SSL VPN.

Some examples of potential interoperability issues are as follows:

 Complex Web applications that use JavaScript, Flash, or other languages may not function correctly
  after being translated by the SSL VPN proxy component. For example, these applications may
  include URLs to internal sites that cannot be traversed because they are not visible to the proxy. Even
  if the proxy can translate some of the programming code, it might not be able to translate all of it.
 Some SSL VPN devices alter the URL when they function as a proxy. In other words, the user enters
  a URL for a Web site to access, but this URL is altered so it no longer resembles what was originally
  entered. This alteration may prevent some applications from working correctly.
 Clients may not be able to download and install the active content controls that are required to
  establish the SSL VPN network extension. This may be due to popup blocker settings in the user’s
  browser, managed desktop settings that prevent the installation of active content controls for security
  reasons, or idiosyncrasies on the client machine.
 Endpoint security mechanisms may not work correctly on a client machine, either preventing login or
  failing to erase sensitive data from the machine after the session is over. These issues may be due to
  idiosyncrasies on the client machine, a conflict with other security programs such as personal
  firewalls, or a conflict between multiple endpoint security programs that are running at the same time.
The best way to determine if there are interoperability issues is to test as many configurations as possible
in a lab or test environment. The most popular configurations of all target operating system platforms
(e.g., Windows, Mac OS X, Linux) should be tested with the most popular Web browsers (e.g., Internet
Explorer, Firefox, Opera, Safari). The testing process should also attempt to verify that the organization’s



                                                    4-27
