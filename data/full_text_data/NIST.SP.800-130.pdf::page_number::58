SP 800-130                                                                 August 2013



FR:6.67 The CKMS design shall specify how, where and the circumstances under
which, private keys or key pairs and/or metadata are validated.

6.4.26 Validate the Possession of a Private Key
This function is used by an entity that receives a public key and wishes to obtain
assurance that the claimed owner of the public key has possession of the corresponding
private key, and is therefore the owner of the key pair. The key-pair owner is typically
required to use the private key in a cryptographic transaction in which another entity uses
the public key in an attempt to verify the possession. For example, the owner may sign
data (e.g., the public key and other information) using the private key before sending it to
the receiver. The receiver uses the received public key to validate the signature on the
received data (see [SP 800-56A], [SP 800-56B], and [SP 800-89]). This function may
also contain the capability for a private-key owner to validate the possession of the
owner’s own private key.

FR: 6.68 The CKMS design shall specify how, where, and the circumstances under
which, possession of private keys and their metadata are validated.

6.4.27 Perform a Cryptographic Function using the Key
The main usage functions are the actual functions that provide the cryptographic
protection to data. These functions may include signature generation, signature
verification, encryption, decryption, key wrapping, key unwrapping, MAC generation,
and MAC verification. They should be performed within a cryptographic module.

FR: 6.69 The CKMS design shall specify all cryptographic functions that are supported
and where they are performed in the CKMS (e.g., CA, host, or end user system).

6.4.28 Manage the Trust Anchor Store
A CKMS may require that certain entities have one or more trusted public keys. These
public keys are also referred to as trust anchors. A trust anchor is used to establish trust in
other public keys that are not otherwise trusted. The trust in these otherwise un-trusted
public keys is established by verifying all signatures in a chain of public key certificates
(termed “certification path” in Section 6.4.23), starting with a trust anchor that is trusted
by the relying entity. Thus, the integrity of trust anchors is critical to the security of the
CKMS. The CKMS typically supports trust anchor management functions, such as
adding, deleting and storing trust anchors. Trust anchor formats are specified in [RFC
5914]. The Secure Trust Anchor Management Protocol (TAMP) is defined in [RFC
5934].

FR: 6.70 The CKMS design shall specify all trust anchor management functions that are
supported (see [RFC 6024]).

FR: 6.71 The CKMS design shall specify how the trust anchors are securely distributed
so that the relying parties can perform source authentication and integrity verification on
those trust anchors.

                                              50
