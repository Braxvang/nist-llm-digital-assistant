                                                                GUIDELINES FOR THE SECURE DEPLOYMENT OF IPV6


standardized as the main security building block for the IPv6 Secure Neighbor Discovery (SEND)
protocol RFC 3971, and they have been proposed for use with the Site Multihoming for IPv6 (SHIM6)
protocol. A different construction based on the same ideas is used in the experimental Host Identity
Protocol (HIP).

In all cases, the hash algorithm currently specified for CGA is SHA-1, the signature algorithm is RSA,
and the signature format follows RSA’s PKCS (Public Key Cryptography Standard) #1, version 1.5,
described in RFC 3447.

CGAs are specified in RFC 3972 and RFC 4581. Implementations need to generate and store
cryptographic values securely to use these protocols safely. See in particular RFC 4086 for a discussion
of securely generating pseudo-random values.

The strength of the cryptographic security provided by CGAs is limited. The RSA keys are specified to
be from 384 to 2096 bits long. The smaller end of this range is certainly vulnerable to factoring attacks,
whereas the larger end is in line with current security recommendations. Also, the CGAs themselves
have only 59 bits of cryptographic payload, so conceivably one could mount a search for a key that
matches a known CGA. Mass searches for such matches are made more difficult by adding a randomly
chosen ―salt‖ value to each CGA.

5.3   IPsec in IPv6

In the early 1990s, the IETF began to view the lack of IP-level security as a serious drawback, and it
started developing a collection of network-layer security protocols known as IPsec to be used specifically
to secure IP communications. The IETF has published three versions of IPsec, which now provides
strong, up-to-date confidentiality and integrity protection, access control, replay detection, key
management, and strong peer-entity authentication for IPv4. IPsec has proved difficult to deploy with
IPv4, and its widespread use has been limited to protecting certain virtual private networks (VPNs) and
for secure remote access to enterprise networks when strong security is a requirement. Some explanations
include the perceived complexity of IPsec, the lack of sufficient infrastructure for authentication, and
inability of application programs to interface with an IPsec subsystem located in an operating system,
networking card, or external device. All of these have been or are being addressed to a certain extent. The
use of Network Address Translation (NAT) at many edge or customer premise routers complicates the
use of IPsec to provide end-to-end security by using non-routable addresses at end systems. Although
various workarounds such as UDP encapsulation have been deployed in the above scenarios, full use of
IPsec depends upon true peer-to-peer, end-to-end interaction at the network layer.

IPsec was designed long after IPv4. Today, most operating systems, routers, and security appliances
bundle or integrate IPsec with their IPv4 protocol stacks, but historically, IPsec was implemented
separately from IPv4. IPv6 does not have the addressing limitations that inhibit end-to-end use of IPsec
with IPv4. Also, IPsec has been recommended as the way to secure important features of IPv6 such as
OSPFv3 routing, mobility, and even neighbor discovery (see Section 5.4).

When IPv6 was developed (RFC 1883 in 1995, which was replaced by RFC 2460 in 1998), one view (or
hope) was that it could provide end-to-end security for all network communications and eliminate the
need for intermediate security layers and devices such as firewalls. This meant that hosts would simply
be able to establish secure tunnels to other hosts as a complete security solution. Security has turned out
to be more complicated than that. Many organizations provide internal applications with weak security
and rely on a perimeter defense to exclude outsiders. Others wish to exercise tight controls on
information entering or leaving their internal networks. Additionally, an authenticated and encrypted
virus or worm is still a virus or worm. Therefore, most organizations are unlikely to rely solely upon


                                                    5-4
