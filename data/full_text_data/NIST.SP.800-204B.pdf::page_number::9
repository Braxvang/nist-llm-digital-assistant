                                                                                              NIST SP 800-204B                                                     ABAC FOR MICROSERVICES-BASED
                                                                                                                                                                 APPLICATIONS USING A SERVICE MESH

                                                                                              1     Introduction

                                                                                              A microservices-based architecture in applications and service mesh application infrastructure
                                                                                              that provides various security services through service proxies has emerged as the widespread
                                                                                              application environment for cloud-native applications. With the disappearance of the network
                                                                                              perimeter due to the need for ubiquitous access to these applications from multiple remote
                                                                                              locations using different types of devices, it is necessary to build the concept of zero trust [1] into
                                                                                              this application environment. Zero trust assumes that there is no implicit trust granted to assets or
                                                                                              user accounts based solely on their physical or network location (i.e., local area networks versus
                                                                                              the internet) or based on asset ownership (enterprise or personally owned) [1]. Zero trust focuses
This publication is available free of charge from: https://doi.org/10.6028/NIST.SP.800-204B




                                                                                              on protecting resources (e.g., assets, services, workflows, and network accounts) rather than
                                                                                              network segments since the network location is no longer seen as the prime component to the
                                                                                              security posture of the resource. Furthermore, the loosely coupled nature of the components (i.e.,
                                                                                              microservices) of these cloud-native applications facilitates independent design, development,
                                                                                              and agile deployment (e.g., Continuous Integration/ Continuous Delivery or Deployment
                                                                                              (CI/CD) [2]) of the constituent microservices, enabling paradigms such as DevSecOps [3]
                                                                                              (representing Development, Security and Operations) to be used.

                                                                                              The security requirements for microservices-based applications are discussed extensively in [4]
                                                                                              and summarized here to provide context for this discussion. They are:

                                                                                              ● Multiple, loosely coupled microservices communicate through network calls, and these
                                                                                                communication links must be protected. In the case of monolithic applications, these
                                                                                                communications take place through procedure calls.
                                                                                              ● The entire network and all microservices are untrusted. Therefore, mutual authentication and
                                                                                                secure communication channels between microservices through mechanisms such as mutual
                                                                                                Transport Layer Security (TLS) (mTLS) are required.
                                                                                              ● The logging data that pertains to each microservice must be consolidated to obtain a security
                                                                                                profile in order for forensics, audits, and analytics to assess the overall health of the
                                                                                                application.

                                                                                              Operating in multiple security domains and multiple clouds, cloud-native applications require a
                                                                                              secure authentication and authorization framework. When implemented within the service mesh,
                                                                                              the critical requirements of this framework are:

                                                                                              ● The code that is part of this framework should be verifiable and non-bypassable (always
                                                                                                invoked), thus satisfying the requirements of a security kernel.
                                                                                              ● The framework should provide authentication and authorization services at both the service
                                                                                                level and end-user level.
                                                                                              ● The framework should be able to support a diverse set of authorization policies.

                                                                                              The operational assurances are required for meeting the above requirements, and others are
                                                                                              provided by the service mesh. The specific features in the service mesh that enable these are
                                                                                              given in the next section.

                                                                                                                                                1
