                                                                                              NIST SP 800-40r4                                    GUIDE TO ENTERPRISE PATCH MANAGEMENT PLANNING:
                                                                                                                                                           PREVENTIVE MAINTENANCE FOR TECHNOLOGY

                                                                                                    •    Select stacks or platforms that are likely to have fewer vulnerabilities over time compared
                                                                                                         to other stacks or platforms (e.g., running software within a small container instead of a
                                                                                                         larger operating system).

                                                                                              Organizations should consider deploying applications in ways that make patching less
                                                                                              likely to disrupt operations. One example is to run applications on stacks or platforms where
                                                                                              patching is a fundamental part of the deployed technology and is less likely to disrupt operations
                                                                                              (e.g., modernizing and running software within cloud-based containers instead of on-premises
                                                                                              server operating systems). Another example is to take advantage of existing toolchains that
                                                                                              already build applications with updated components and test them before production release.

                                                                                              3.2       Inventory Your Software and Assets
This publication is available free of charge from: https://doi.org/10.6028/NIST.SP.800-40r4




                                                                                              Organizations should establish and constantly maintain up-to-date software inventories for
                                                                                              their physical and virtual computing assets, including OT, IoT, and container assets. This
                                                                                              information could be in a single enterprise asset inventory, or it could be split among multiple
                                                                                              resources. While a comprehensive inventory of all assets is ideal, it may be impossible to
                                                                                              achieve, given the highly dynamic nature of assets and software. A realistic goal is to maintain a
                                                                                              close-to-comprehensive inventory by relying on automation to constantly discover new assets
                                                                                              and collect up-to-date information on all assets. Some vendors might also provide machine-
                                                                                              consumable data on their assets’ software composition, such as a software bill of materials
                                                                                              (SBOM), which could be used to augment organization inventories.

                                                                                              Without constant updates, inventories will quickly become outdated and provide increasingly
                                                                                              inaccurate and incomplete information for patching efforts. At one time, when assets and
                                                                                              software were mostly static and were located within static logical and physical perimeters, it was
                                                                                              generally considered acceptable to update inventories on a monthly or quarterly basis by
                                                                                              performing a vulnerability scan. That model should no longer be used.

                                                                                              Constantly updating inventories for all of the technologies and environments in use today
                                                                                              requires a combination of automation techniques and tools. Organizations should leverage
                                                                                              inventory capabilities built into platforms and assets whenever feasible. For example, APIs built
                                                                                              into a cloud-based platform may enable continuous updates of inventory information for the
                                                                                              software on that platform, as well as other platform characteristics helpful for patch management
                                                                                              purposes. Vulnerability scans and passive network monitoring on local networks can still
                                                                                              contribute to asset inventories, especially in terms of asset discovery. If vulnerability scans are to
                                                                                              be used for software inventories, they will need sufficient access to the assets (i.e., authenticated
                                                                                              scanning) in order to detect changes to their software and other technical characteristics.

                                                                                              Organizations should approach patching from a per-asset perspective. Software inventories
                                                                                              should include information on each computing asset’s technical characteristics and
                                                                                              mission/business characteristics. Making decisions for risk responses and their prioritization
                                                                                              should not be based solely on which software and software versions are in use. Each asset has
                                                                                              technical and mission/business characteristics that should be taken into consideration because
                                                                                              they provide context for the vulnerable software running on that asset.




                                                                                                                                                 10
