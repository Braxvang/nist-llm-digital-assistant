NIST SP 800-186                                                Discrete Logarithm-based Cryptography:
February 2023                                                        Elliptic Curve Domain Parameters

C.3.4. Verification of Curve Generation (Binary Case)
Given the hdigest-bit domain parameter seed value s, verify that the coefficient b was obtained
from s via the cryptographic hash function HASH as follows:
Inputs:
   1.   Prime number m
   2.   The coefficient b (using the normal basis representation)
   3.   Bit-string s of length hdigest
   4.   Approved hash function HASH with output length of hdigest bits and security design
        strength of at least requested_security_strength

Output: Verification that the coefficient b was obtained from s via the cryptographic hash
function HASH

Process:
Define
                  v =  (m – 1) / hdigest 
                  w= m – hdigest v
   1. Compute h = HASH(s).
   2. Let h0 be the bit string obtained by taking the w rightmost bits of h.
   3. Let z be the integer whose binary expansion is given by the hdigest-bit string s.
   4. For i = 1 to v, do:
      4.1 Define the hdigest-bit string si to be binary expansion of the integer (z + i) mod
           (2160).
      4.2 Compute hi = HASH(si ).
   5. For i = 1 to v, do:
             h = h0 || h1 || … || hv.
   6. Let c be the element of GF(2m ), which is represented by the bit string h in the Gaussian
      Normal Basis (see Section G.3.1).
   7. Verify that c = b.




                                               41
