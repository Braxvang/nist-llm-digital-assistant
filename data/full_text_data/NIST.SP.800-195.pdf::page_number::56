          software application bridges the communication between                              With the conceptual system architecture and protocols
          EaaS and the hardware component. Examples of secure                            defined, the project team continues to engage with industry
          hardware components are the Trusted Platform Module (TPM),                     and academia to obtain feedback on the approach and
          TrustZone technology in Advanced Reduced Instruction Set                       identify possibilities for collaborative approaches to solving
          Computing (RISC) Machine (ARM) processors, and Identity                        important cybersecurity challenges in the domains of
          Protection Technology in Intel processors. If a client system                  cryptography and supply-chain management (e.g., integrated
          or device doesn’t have a secure hardware component, it can                     circuit counterfeiting). The team published a peer-reviewed
          still use EaaS. The presence of a hardware component simply                    paper on EaaS in IEEE Computer, a top professional journal,
          provides further guarantees to the system or device user,                      in September 2016. The team also started a collaboration
          when present.                                                                  with a team of researchers at the University of Florida who
               EaaS uses HTTP to transfer entropy payloads from the                      won a NIST research grant to explore ways to leverage
          service to clients. To secure this transmission, the server                    EaaS in protecting against integrated circuit counterfeiting
          encrypts the data using the client’s provided public key and                   and thereby help secure the supply chain. The University of
          digitally signs the payload with the server’s own private key.                 Florida researchers will start their project in FY 2017.

              Client devices mix this data with locally available random                     The team continues to develop the system to provide
          data to seed random number generators to generate strong                       a publicly accessible NIST EaaS instance in FY 2017. During
          cryptographic keys and other random values independently                       the summer of FY 2016, the team hosted a Summer
          from the remote sources.                                                       Undergraduate Research Fellowship (SURF) student who
                                                                                         developed a sample EaaS-client implementation with a




48

                                                            Figure 15: High-level Architecture of EaaS

     N I S T/ I T L C Y B E R S E C U R I T Y P R O G R A M A N N U A L R E P O R T 2 0 1 6       T H I S P U B L I C AT I O N I S AVA I L A B L E F R E E O F C H A R G E F R O M :
                                                                                                                          h t t p : // d x . d o i . o r g / 1 0 . 6 0 2 8 / N I S T . S P. 8 0 0 - 1 9 5
