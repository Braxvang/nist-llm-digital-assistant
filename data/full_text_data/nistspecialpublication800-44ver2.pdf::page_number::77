                                                                              GUIDELINES ON SECURING PUBLIC WEB SERVERS



     presented, organizations that rely on self-signed certificates might instruct users to ignore such
     warnings.

 Exploiting vulnerabilities in a Web browser so that the Web site appears to be valid to an untrained
  user

 Taking advantage of a cross-site scripting vulnerability on a legitimate Web site. The Web browser
  will be accessing two different sites, but it will appear to the user that only the legitimate site is being
  accessed.

 Taking advantage of the certificate approval process to receive a valid certificate and apply it to the
  attacker’s own site. By using a valid certificate on what appears to be a valid site, the certificate will
  validate, and the user would have to somehow realize that the site being accessed is malicious.

SSL spoofing attacks can occur without requiring any user intervention. As a proof of concept in 2005,
the Shmoo Group registered an internationalized domain name that looked similar to a valid site when
displayed in a browser. The SSL certificate matched the internationalized domain name of the Web site,
so no user warning occurred. In the address bar, the URL appeared almost identical to that of the original
spoofed Web site [NVD06].

Users can prevent less sophisticated attacks by confirming the validity of a certificate 54 before relying on
the security of an SSL/TLS session and rejecting certificates for which the browser presents warnings. 55
Browsers perform some checks automatically, but they cannot be relied upon in all instances.

7.5.3    Example SSL/TLS Session

The SSL/TLS protocols use a combination of public key and symmetric key encryption. Symmetric key
encryption is much faster than public key encryption, whereas public key encryption is better suited to
provide authentication and establish symmetric keys. An SSL/TLS session always begins with an
exchange of messages called the SSL/TLS handshake. The handshake allows the server to authenticate
itself to the client using public key techniques; this allows the client and the server to cooperate in the
creation of symmetric keys used for rapid encryption, decryption, and tamper detection during the session
that follows. The handshake also allows the client to authenticate itself to the server.

The exact programmatic details of the messages exchanged during the SSL/TLS handshake are beyond
the scope of this document. However, the basic steps involved can be summarized as follows [SSL98]:

     1. “The client sends the server the client’s SSL/TLS version number, cipher settings, randomly
        generated data, and other information the server needs to communicate with the client using
        SSL/TLS.”

     2. “The server sends the client the server’s SSL/TLS version number, cipher settings, randomly
        generated data, and other information the client needs to communicate with the server over
        SSL/TLS. The server also sends its own certificate and, if the client is requesting a server
        resource that requires client authentication, requests the client’s certificate.”



54
     Checking a certificate using most Web browsers involves clicking on a padlock icon in the lower right-hand corner of the
     browser (this icon will only appear when accessing an SSL/TLS-protected resource).
55
     When organizations use self-signed certificates and instruct users to accept them, it may encourage users to do so with
     potentially malicious certificates.


                                                              7-5
