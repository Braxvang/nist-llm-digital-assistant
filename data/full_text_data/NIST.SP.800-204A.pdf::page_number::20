                                                                                              NIST SP 800-204A                                BUILDING SECURE MICROSERVICES-BASED APPLICATIONS
                                                                                                                                                              USING SERVICE-MESH ARCHITECTURE


                                                                                              loopback channel (e.g., localhost IP address, UNIX domain socket, etc.). Further, service
                                                                                              proxies should only communicate with each other by setting up a mutual TLS (mTLS) session
                                                                                              where every exchanged data packet is encrypted.

                                                                                              4.2   Configuration for Ingress Proxies

                                                                                              Recommendation for Ingress Proxies (SM-DR7): There should be features for configuring traffic
                                                                                              routing rules for ingress (standalone) proxies just like service proxies. This is needed because
                                                                                              consistent enforcement of routing policy is required all the way to the edge of the application
                                                                                              deployment.
This publication is available free of charge from: https://doi.org/10.6028/NIST.SP.800-204A




                                                                                              4.3   Configuration for Access to External Services

                                                                                              Certain services in the microservices-based application may have to access some public or
                                                                                              private web APIs, third-party services, legacy applications, or applications in different
                                                                                              virtualized infrastructures, such as in VMs or different clusters (than the one in which the Service
                                                                                              Mesh runs). To provide the same security assurance for access to these resources, the following
                                                                                              recommendations are provided:

                                                                                              Recommendation for Restricting Access to External Resources (SM-DR8): Access to external
                                                                                              resources or services outside of the mesh should be disabled by default and only allowed by an
                                                                                              explicit policy that restricts access to specified destinations. Additionally, those external
                                                                                              resources or services should be modeled as services in the Service Mesh itself (e.g., by including
                                                                                              them in the Service Mesh’s service discovery mechanism).

                                                                                              Recommendation for Secure Access to External Resources (SM-DR9): The same availability
                                                                                              improvement features (e.g., retries, timeouts, circuit breakers, etc.) that are configured for
                                                                                              services inside of the Service Mesh must be provided for access to external resources and
                                                                                              services.

                                                                                              Recommendation for Egress Proxies (SM-DR10): There should be features for configuring
                                                                                              traffic routing rules for egress (standalone) proxies just like service and ingress proxies. When
                                                                                              deployed, access to external resources and services should be mediated by these egress proxies.
                                                                                              The egress proxy should implement access and availability policies (SM-DR8). This is useful for
                                                                                              working with traditional network-oriented security models. For example, suppose that outbound
                                                                                              traffic to the internet is only allowed from a specific IP in the network; an egress proxy can be
                                                                                              configured to run with that address while proxying traffic for a range of services in the mesh.

                                                                                              4.4   Configuration for Identity and Access Management

                                                                                              The three main communicating entities of a microservices-based application are clients,
                                                                                              microservices, and external services. During the communication events of any pair (i.e., client-
                                                                                              to-microservice, microservice-to-microservice, or microservice-to-egress-service), both entities
                                                                                              need to have distinct identities and perform mutual authentication. Since mutual TLS (mTLS) is
                                                                                              the de facto mechanism for doing this, the authentication certificate that a client or microservice
                                                                                              holds should carry its identity in its “subject name” or “subject alternative name” fields. This

                                                                                                                                              12
