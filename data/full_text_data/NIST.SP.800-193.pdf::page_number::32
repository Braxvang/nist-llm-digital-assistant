                                                                                             NIST SP 800-193                                           PLATFORM FIRMWARE RESILIENCY GUIDELINES


                                                                                             recovery and update of any Platform Firmware, (b) maintains the security of critical data or (c)
                                                                                             implements interfaces for critical data that are non-bypassable.

                                                                                             Devices that claim conformance with the Protection requirements, and rely on critical platform
                                                                                             firmware to protect the firmware image and/or critical data at OS runtime, must meet the
                                                                                             guidelines in this subsection. The goal of these guidelines is to establish an environment for
                                                                                             critical platform firmware to execute in which it is isolated (protected) from software. Such
                                                                                             isolation (protection) may be provided either logically (e.g., use of System Management Mode in
                                                                                             x86-based platforms, or TrustZone in ARM-based platforms), or physically (e.g. in RAM
                                                                                             attached to a non-host processor which is physically or logically isolated from the host
                                                                                             processor).

                                                                                             This subsection does not necessarily apply to firmware that is classified as non-critical (for
This publication is available free of charge from: https://doi.org/10.6028/NIST.SP.800-193




                                                                                             instance, the majority of the BIOS on a PC-style platform is typically non-critical).

                                                                                                1) If Critical Platform Firmware code in non-volatile memory is copied into RAM to be
                                                                                                   executed (for performance, or for other reasons) then the firmware program in RAM
                                                                                                   shall be protected from modification by software or shall complete its function before
                                                                                                   software starts.
                                                                                                2) If Critical Platform Firmware uses RAM for temporary data storage, then this memory
                                                                                                   shall be protected from software running on the Platform until the data’s use is complete.
                                                                                                3) Software shall not be able to interfere with the intended function of Critical Platform
                                                                                                   Firmware. For example, by denying execution, modifying the processor mode, or
                                                                                                   polluting caches.
                                                                                                            Note: These guidelines do not preclude the use of RAM that is writable by
                                                                                                            software specifically for communication with Firmware or device hardware,
                                                                                                            including using memory as a staging area for updates. The guidelines are
                                                                                                            intended to prevent the unauthorized modification of executing code or private
                                                                                                            state used by Critical Platform Firmware.

                                                                                             4.2.4   Protection of Critical Data

                                                                                             Unauthorized changes to critical data stored and used by devices could also seriously impact the
                                                                                             security posture of a device. Such changes could modify or disable important security-relevant
                                                                                             functions provided by the platform, or prevent the device from functioning at all. While critical
                                                                                             data may need to be modifiable by operating systems and other components, the guidelines in
                                                                                             this section aim to provide a controlled interface for these changes and guard against changes
                                                                                             that would put the device in an invalid state.

                                                                                                1) Critical data shall be modifiable only through the device itself or defined interfaces
                                                                                                   provided by device firmware. Examples of defined interfaces include proprietary or
                                                                                                   public application programming interfaces (APIs) used by the device’s firmware, or
                                                                                                   standards-based interfaces. Symbiont devices may rely on their host devices to meet this
                                                                                                   requirement.



                                                                                                                                              24
