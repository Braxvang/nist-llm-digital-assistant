                                              GUIDE TO INTEGRATING FORENSIC TECHNIQUES INTO INCIDENT RESPONSE



5.2.1   Collecting Volatile OS Data

Volatile OS data involving an event can be collected only from a live system that has not been rebooted
or shut down since the event occurred. Every action performed on the system, whether initiated by a
person or by the OS itself, will almost certainly alter the volatile OS data in some way. Therefore,
analysts should decide as quickly as possible whether the volatile OS data should be preserved. Ideally,
the criteria for making this decision should have been documented in advance so that the analyst can
make the best decision immediately. The importance of this decision cannot be stressed enough, because
powering off the system or even disconnecting it from a network can eliminate the opportunity to collect
potentially important information. For example, if a user recently ran encryption tools to secure data, the
computer’s RAM might contain password hashes, which could be used to determine the passwords.

On the other hand, collecting volatile OS data from a running computer has inherent risks. For instance,
the possibility always exists that files on the computer might change and other volatile OS data might be
altered. In addition, a malicious party might have installed rootkits designed to return false information,
delete files, or perform other malicious acts. In deciding whether to collect volatile data, the risks
associated with such collection should be weighed against the potential for recovering important
information. As noted in Section 3.2, if evidence may be needed, the analyst should fully document what
is seen on the screen before touching the system. If a live system is in sleep mode or has visible password
protection, analysts should also decide whether to alter the state of the system by waking it from sleep
mode or attempting to crack or bypass the password protection so that analysts can attempt to collect
volatile data. If the effort needed to collect the volatile data is not merited, analysts might instead decide
to perform a shutdown, as described in Section 5.2.2.

Section 5.2.1.1 describes how forensic tools should be compiled in preparation for collecting volatile OS
data. Next, Section 5.2.1.2 discusses several types of data and mentions categories of tools or specific OS
tools that are effective in collecting each type of data. Finally, Section 5.2.1.3 explains the need to
identify the types of volatile OS data that are most likely to be valuable in a particular situation and then
to prioritize the collection of data based on importance and relative volatility.

5.2.1.1 Forensic Tool Preparation

When collecting volatile OS data, all forensic tools that might be needed should be placed on a floppy
disk, CD-ROM, or USB flash drive, from which the tools should be executed. Doing so enables analysts
to collect OS data with the least amount of disturbance to the system. In addition, only forensic tools
should be used, since a user might have replaced system commands with malicious programs, such as one
to format a hard disk or return false information. However, use of forensic tools is no guarantee that the
data retrieved will be accurate. If a system has been fully compromised, it is possible that rootkits and
other malicious utilities have been installed that alter the system’s functionality at the kernel level. This
can cause false data to be returned to user-level tools.

When creating a collection of forensic tools, statically linked binary files should be used. Such an
executable file contains all of the functions and library functions that it references, so separate dynamic
link libraries (DLL) and other supporting files are not needed. This eliminates the need to place the
appropriate versions of DLLs on the tool media and increases the reliability of the tools. The analyst
should know how each tool affects or alters the system before collecting the volatile data. The message
digest of each tool should be computed and stored safely to verify file integrity. Licensing and version
information also should be documented for each forensic tool. In addition, the exact commands that were
used to run each forensic tool should be documented (i.e., command line arguments and switches). It may
be helpful to place a script on the tool media that can be run to capture which commands were run, at
what time, and with what output.


                                                     5-5
