                                                                    GUIDELINES ON SECURING PUBLIC WEB SERVERS



server software to follow links and aliases. As stated earlier, Web server log files and configuration files
should reside outside the specified file directory tree for public Web content.

The following steps are required to restrict access to a specific Web content file directory tree:

 Dedicate a single hard drive or logical partition for Web content and establish related subdirectories
  exclusively for Web server content files, including graphics but excluding scripts and other programs.

 Define a single directory tree exclusively for all external scripts or programs executed as part of Web
  content (e.g., CGI, Active Server Page [ASP], PHP).

 Disable the execution of scripts that are not exclusively under the control of administrative accounts.
  This action is accomplished by creating and controlling access to a separate directory intended to
  contain authorized scripts.

 Disable the use of hard or symbolic links.

 Define a complete Web content access matrix. Identify which folders and files within the Web server
  document should be restricted and which should be accessible (and by whom).

Most Web server software vendors provide directives or commands that allow the Web administrator to
restrict user access to public Web server content files. For example, the Apache Web server software
provides a <Limit> directive, which allows the Web administrator to restrict which optional access
features (such as New, Delete, Connect, Head, and Get) are associated with each Web content file; any
HTTP method omitted from the <Limit> directive will be allowed. Within the <Limit> directive,
administrators can specify the requirements that must be met for the Limited action to be allowed. The
Apache Require directive allows the Web administrator to restrict available content to authenticated users
or groups.

Many directives or commands can be overridden on a per-directory basis. The convenience of being able
to make local exceptions to global policy is offset by the threat of a security hole being introduced in a
distant subdirectory, which could be controlled by a hostile user. The Web administrator should disable a
subdirectory’s ability to override top-level security directives unless that override is absolutely necessary.

In most cases, Web server file directory listings should be disabled. The HTTP specifies that a URL
ending in a slash character be treated as a request for a listing of the files in the directory with that name.
Web servers should be prohibited from responding to such requests with a file listing, even if the public
can read all of the directory files. Such requests often indicate an attempt to locate information by means
other than those intended by the Web administrator or Webmaster. Users may attempt this if they are
having difficulty navigating through the site or if a link appears to be broken. Intruders may attempt this
to locate information hidden by the Web site’s interface. Web administrators should investigate requests
of this type found in the Web server log files (see Section 9).

5.2.3   Uniform Resource Identifiers and Cookies

Uniform Resource Identifiers (URI) are the address technology from which URLs are created.
Technically URLs (e.g., http://www.mywww.gov) are a subset of URIs. There are a number of security
issues that arise from URIs. Because URIs are sent in the clear, any data stored within them can be easily
compromised. For example, URIs are recorded in numerous locations, including Web browser logs (i.e.,
browser history), proxy server logs, and third-party HTTP referrer logs. Thus, hiding sensitive data such




                                                      5-5
