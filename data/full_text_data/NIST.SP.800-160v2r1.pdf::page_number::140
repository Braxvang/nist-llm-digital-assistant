                                                                                                 NIST SP 800-160, VOL. 2, REV. 1                                         DEVELOPING CYBER-RESILIENT SYSTEMS
                                                                                                 _________________________________________________________________________________________________


                                                                                                 responsibilities [CNSSI 4009]. Assertions of trustworthiness (e.g., “this software can be relied
                                                                                                 upon to enforce the following security policies with a high level of confidence”) are meaningless
                                                                                                 without some form of verification, validation, or demonstration (e.g., design analysis, testing). In
                                                                                                 the absence of some credible form of assurance (which can be costly and invalidated by changes
                                                                                                 in the system or the environment), assertions of trustworthiness constitute assumptions.
                                                                                                 Reducing the size of the set of trusted entities (whether individuals, software components, or
                                                                                                 hardware components) by minimizing assumptions about what is or can be trusted reduces the
                                                                                                 attack surface and lowers assurance costs.

                                                                                                 The application of this design principle is most effective early in the system life cycle when the
This publication is available free of charge from: https://doi.org/10.6028/NIST.SP.800-160v2r1




                                                                                                 motivation of the Prevent/Avoid objective is clearest. When a system already exists, changes to
                                                                                                 the operational concept (consistent with the Transform objective) or the system architecture
                                                                                                 (applying the Re-Architect objective and the Realignment technique) can increase costs. One
                                                                                                 approach to applying this design principle (using the Coordinated Protection and Privilege
                                                                                                 Restriction techniques) is through limitations on inheritance so that privileges or access rights
                                                                                                 associated with one class of system component are not automatically propagated to classes or
                                                                                                 instances created from the original one. While limitations on inheritance can initially increase
                                                                                                 the burden on developers or administrators, they can also reduce the complexity associated
                                                                                                 with multiple inheritance.

                                                                                                 This design principle supports the strategic design principles of Reduce attack surfaces and
                                                                                                 Assume compromised resources. However, its application increases the difficulty of applying the
                                                                                                 Support agility and architect for adaptability strategic design principle. This design principle can
                                                                                                 also be used in conjunction with Determine ongoing trustworthiness. If a system element is
                                                                                                 assumed or required to have a given level of trustworthiness, some attestation mechanism is
                                                                                                 needed to verify that it has and continues to retain that trustworthiness level. Minimizing the
                                                                                                 number of elements with trustworthiness requirements reduces the level of effort involved in
                                                                                                 determining ongoing trustworthiness. Finally, this design principle can be used in conjunction
                                                                                                 with Plan and manage diversity. The managed use of multiple sources of system elements,
                                                                                                 services, or information can enable behavior or data quality to be validated by comparison.

                                                                                                 D.5.2.2 Control Visibility and Use
                                                                                                 Controlling visibility counters adversary attempts at reconnaissance from outside or within the
                                                                                                 system. Thus, the adversary must exert greater effort to identify potential targets, whether for
                                                                                                 exfiltration, modification, or disruption. The visibility of data can be controlled by mechanisms
                                                                                                 such as encryption, data hiding, or data obfuscation. Visibility into how some resources are used
                                                                                                 can also be controlled directly, such as by adding chaff to network traffic. Visibility into the
                                                                                                 supply chain, development process, or system design can be limited via operations security
                                                                                                 (OPSEC), deception [Heckman15], and split or distributed design and manufacturing. Process
                                                                                                 obfuscation is an area of active research. An increasing number and variety of deception
                                                                                                 technologies (e.g., deception nets) can be applied at the system level.

                                                                                                 Controlling use counters adversary activities and actions in the Control, Execute, and Maintain
                                                                                                 phases of the cyber-attack life cycle [MITRE18]. To limit visibility or control use, access to system
                                                                                                 resources can be controlled from the perspectives of multiple security disciplines, including
                                                                                                 physical, logical (see the discussion of privileges below), and hybrid (e.g., physical locations in a
                                                                                                 geographically distributed system or in a complex, embedded system). Restrictions on access
                                                                                                 and use can be guided by information sensitivity, as in standard security practices. Restrictions


                                                                                                 APPENDIX D                                                                                        PAGE 124
