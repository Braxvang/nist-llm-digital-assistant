                                                                                             NIST SP 800-190                                                APPLICATION CONTAINER SECURITY GUIDE


                                                                                             Registries provide APIs that enable automating common image-related tasks. For example,
                                                                                             organizations may have triggers in the image creation phase that automatically push images to a
                                                                                             registry once tests pass. The registry may have further triggers that automate the deployment of
                                                                                             new images once they have been added. This automation enables faster iteration on projects with
                                                                                             more consistent results.

                                                                                             Once stored in a registry, images can be easily pulled and then run by DevOps personas across
                                                                                             any environment in which they run containers. This is another example of the portability benefits
                                                                                             of containers; image creation may occur in a public cloud provider, which pushes an image to a
                                                                                             registry hosted in a private cloud, which is then used to distribute images for running the app in a
                                                                                             third location.
This publication is available free of charge from: https://doi.org/10.6028/NIST.SP.800-190




                                                                                             2.3.3   Container Deployment and Management

                                                                                             Tools known as orchestrators enable DevOps personas or automation working on their behalf to
                                                                                             pull images from registries, deploy those images into containers, and manage the running
                                                                                             containers. This deployment process is what actually results in a usable version of the app,
                                                                                             running and ready to respond to requests. When an image is deployed into a container, the image
                                                                                             itself is not changed, but instead a copy of it is placed within the container and transitioned from
                                                                                             being a dormant set of app code to a running instance of the app. Examples of orchestrators are
                                                                                             Kubernetes [14], Mesos [15], and Docker Swarm [16].

                                                                                             Note that a small, simple container implementation could omit a full-fledged orchestrator.
                                                                                             Orchestrators may also be circumvented or unnecessary in other circumstances. For example, a
                                                                                             host could directly contact a registry in order to pull an image from it for a container runtime. To
                                                                                             simplify the discussions in this publication, the use of an orchestrator will be assumed.

                                                                                             The abstraction provided by an orchestrator allows a DevOps persona to simply specify how
                                                                                             many containers need to be running a given image and what resources, such as memory,
                                                                                             processing, and disk need to be allocated to each. The orchestrator knows the state of each host
                                                                                             within the cluster, including what resources are available for each host, and determines which
                                                                                             containers will run on which hosts. The orchestrator then pulls the required images from the
                                                                                             registry and runs them as containers with the designated resources.

                                                                                             Orchestration tools are also responsible for monitoring container resource consumption, job
                                                                                             execution, and machine health across hosts. Depending on its configuration, an orchestrator may
                                                                                             automatically restart containers on new hosts if the hosts they were initially running on failed.
                                                                                             Many orchestrators enable cross-host container networking and service discovery. Most
                                                                                             orchestrators also include a software-defined networking (SDN) component known as an overlay
                                                                                             network that can be used to isolate communication between apps that share the same physical
                                                                                             network.

                                                                                             When apps in containers need to be updated, the existing containers are not changed, but rather
                                                                                             they are destroyed and new containers created from updated images. This is a key operational
                                                                                             difference with containers: the baseline software from the initial deployment should not change
                                                                                             over time, and updates are done by replacing the entire image at once. This approach has
                                                                                             significant potential security benefits because it enables organizations to build, test, validate, and

                                                                                                                                               10
