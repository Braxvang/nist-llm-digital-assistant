                                                          SECURE DOMAIN NAME SYSTEM (DNS) DEPLOYMENT GUIDE



who shares the same secret key, uses the key and HMAC function used by the sender to compute the
MAC on the received message. The receiver then compares the computed MAC with the received MAC;
if the two values match, it provides assurance that the message has been received correctly and that the
sender belongs to the community of users sharing the same secret key. Thus, message source
authentication and integrity verification are performed in a single process.

The hash algorithm (which forms the primitive for the hash function) generates a fixed-size MAC or hash
from a message of arbitrary size. The HMAC function for TSIG specified in RFC 2845 [RFC2845] and
extended in RFC 4635 [RFC4635] to support more hash algorithms (SHA-1 and SHA-2 family of
algorithms).

Transaction protection through HMAC using a shared secret is not a scalable solution. This is the reason
the TSIG specification is largely used only for zone transfer and dynamic update transactions. These DNS
transactions are either between servers in the same administrative domain or between servers in domains
with previous established interactions.

The MAC or hash value generated by the sender of the DNS message is placed in a new RR called a
TSIG record that is added to the DNS message. The TSIG record, in addition to the generated hash,
contains the following:

    •   Name of hash algorithm

    •   Key name

    •   Time the hash was generated (timestamp)

    •   “Fudge factor” –time in seconds (usually 5 minutes) to use as delta on either side of the time
        generated for which the TSIG signature should be considered valid; used to account for possible
        clock skew between hosts.
The timestamp field specifies the time at which the MAC was generated. The purpose of this field is to
protect against replay attacks. In a replay attack, the attacker could capture the packet containing the
MAC and send it after a period of time. To ensure that this does not happen, the recipient reads the MAC
generation time and the current clock time and verifies whether the MAC was generated within an
“allowable expiry time,” which is computed using the “Fudge Factor”.

The “Fudge factor” field specifies the duration of time after the MAC generation time, the message can be
considered valid. It is computed by applying a “fudge factor” on the MAC generation time (adding or
subtracting a small number of seconds) to allow for clock skew (mismatch) between the MAC generator
and verifier hosts.

To have a secure transaction based on TSIG, a sender computes the hash of the entire DNS message and
secret key and encodes the result in a TSIG RR at the end of the message. At the recipient end, the TSIG
record is stripped from the DNS message and processed. The process whereby the recipient uses the TSIG
record to verify the integrity of the received DNS message is called verification. The verification process
uses the hash algorithm name to identify the hash function and the key name to identify the key to be used
to validate the TSIG record. The number in the fudge factor is used to add to or subtract from the signing
time to allow for the possible mismatch of clocks of the signer and verifier. Thus, the fudge factor
provides the tolerance limit for the MAC validity period computed, based on time of generation.




                                                   8-11
