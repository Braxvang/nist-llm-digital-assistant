NIST SP 800-218                                                                                                                                                                                                                                                                 SSDF VERSION 1.1


                       Practices                                                  Tasks                                                     Notional Implementation Examples                                                                     References
                                                                                                                     from attempted and actual cyber incidents.
                                                                                                                     Example 8: Configure security controls and other tools involved in separating and
                                                                                                                     protecting the environments to generate artifacts for their activities.
                                                                                                                     Example 9: Continuously monitor all software deployed in each environment for
                                                                                                                     new vulnerabilities, and respond to vulnerabilities appropriately following a risk-
                                                                                                                     based approach.
                                                                                                                     Example 10: Configure and implement measures to secure the environments’
                                                                                                                     hosting infrastructures following a zero trust architecture 7.
                                                        PO.5.2: Secure and harden development endpoints              Example 1: Configure each development endpoint based on approved hardening            BSAFSS: DE.1-1, IA.1, IA.2
                                                        (i.e., endpoints for software designers, developers,         guides, checklists, etc.; for example, enable FIPS-compliant encryption of all        EO14028: 4e(i)(C), 4e(i)(E), 4e(i)(F), 4e(ii), 4e(iii), 4e(v), 4e(vi), 4e(ix)
                                                        testers, builders, etc.) to perform development-related      sensitive data at rest and in transit.                                                IEC62443: SM-7
                                                        tasks using a risk-based approach.                           Example 2: Configure each development endpoint and the development                    NISTCSF: PR.AC-4, PR.AC-7, PR.IP-1, PR.IP-3, PR.IP-12, PR.PT-1, PR.PT-3, DE.CM
                                                                                                                     resources to provide the least functionality needed by users and services and to
                                                                                                                     enforce the principle of least privilege.                                             SCAGILE: Tasks Requiring the Help of Security Experts 11
                                                                                                                     Example 3: Continuously monitor the security posture of all development               SCSIC: Vendor Software Delivery Integrity Controls
                                                                                                                     endpoints, including monitoring and auditing all use of privileged access.            SP80053: SA-15
                                                                                                                     Example 4: Configure security controls and other tools involved in securing and       SP800161: SA-15
                                                                                                                     hardening development endpoints to generate artifacts for their activities.           SP800181: OM-ADM-001, SP-SYS-001; T0484, T0485, T0489, T0553; K0005, K0007,
                                                                                                                     Example 5: Require multi-factor authentication for all access to development          K0077, K0088, K0130, K0167, K0205, K0275; S0076, S0097, S0121, S0158; A0155
                                                                                                                     endpoints and development resources.
                                                                                                                     Example 6: Provide dedicated development endpoints on non-production
                                                                                                                     networks for performing all development-related tasks. Provide separate
                                                                                                                     endpoints on production networks for all other tasks.
                                                                                                                     Example 7: Configure each development endpoint following a zero trust
                                                                                                                     architecture.
    Protect Software (PS)

    Protect All Forms of Code from Unauthorized         PS.1.1: Store all forms of code – including source           Example 1: Store all source code and configuration-as-code in a code repository,      BSAFSS: IA.1, IA.2, SM.4-1, DE.1-2
    Access and Tampering (PS.1): Help prevent           code, executable code, and configuration-as-code –           and restrict access to it based on the nature of the code. For example, open-         BSIMM: SE2.4
    unauthorized changes to code, both inadvertent      based on the principle of least privilege so that only       source code intended for public access may need its integrity and availability        CNCFSSCP: Securing the Source Code—Verification, Automation, Controlled
    and intentional, which could circumvent or          authorized personnel, tools, services, etc. have             protected; other code may also need its confidentiality protected.                    Environments, Secure Authentication; Securing Materials—Automation
    negate the intended security characteristics of     access.                                                      Example 2: Use version control features of the repository to track all changes
    the software. For code that is not intended to be                                                                                                                                                      EO14028: 4e(iii), 4e(iv), 4e(ix)
                                                                                                                     made to the code with accountability to the individual account.
    publicly accessible, this helps prevent theft of                                                                                                                                                       IDASOAR: Fact Sheet 25
                                                                                                                     Example 3: Use commit signing for code repositories.
    the software and may make it more difficult or                                                                                                                                                         IEC62443: SM-6, SM-7, SM-8
    time-consuming for attackers to find                                                                             Example 4: Have the code owner review and approve all changes made to the
                                                                                                                     code by others.                                                                       NISTCSF: PR.AC-4, PR.DS-6, PR.IP-3
    vulnerabilities in the software.                                                                                                                                                                       OWASPASVS: 1.10, 10.3.2
                                                                                                                     Example 5: Use code signing 8 to help protect the integrity of executables.
                                                                                                                     Example 6: Use cryptography (e.g., cryptographic hashes) to help protect file         OWASPMASVS: 7.1
                                                                                                                     integrity.                                                                            OWASPSAMM: OE3-B
                                                                                                                                                                                                           PCISSLC: 5.1, 6.1
                                                                                                                                                                                                           SCSIC: Vendor Software Delivery Integrity Controls, Vendor Software Development Integrity
                                                                                                                                                                                                           Controls
                                                                                                                                                                                                           SP80053: SA-10
                                                                                                                                                                                                           SP800161: SA-8, SA-10




7     See NIST SP 800-207, Zero Trust Architecture, for additional information (https://doi.org/10.6028/NIST.SP.800-207).
8     For more information on code signing, see NIST Cybersecurity White Paper, Security Considerations for Code Signing (https://doi.org/10.6028/NIST.CSWP.01262018).



                                                                                                                                                       9
