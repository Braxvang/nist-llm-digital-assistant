5       Evidence of Timeliness Using Verifier-Supplied Data
Independent of the use of a trusted timestamping service by entity A, entity A can
provide evidence to the verifier (entity B) of the timeliness of its signature by:
    •   Combining fresh data that was supplied by the intended verifier with any other
        data to be included in the message, and
    •   Generating a digital signature on the combination.
In the following schemes, a nonce is used to assist in establishing timeliness. A nonce is a
time-varying value, represented as a byte string that has (at most) a negligible chance of
repeating. For example, a nonce may be composed of one (or more) of the following
components:
    1. A random value that is generated anew for each nonce, using an approved
       random bit generator (RBG). The security strength of the RBG used to obtain
       each random value shall be equal to or greater than the security strength
       associated with the digital signature process. The appropriate security strength
       shall have been determined prior to the generation of this random value. The
       length of the RBG output shall be equal to or greater than the security strength
       associated with the digital signature process (e.g., if the security strength of the
       digital signature process is 112 bits, then the length of the RBG output shall be at
       least 112 bits). A nonce containing a component of this type is called a random
       nonce.
    2. A timestamp of sufficient resolution (detail) so that it is different each time it is
       used.
    3. A monotonically increasing sequence number.
If a combination of a timestamp and a monotonically increasing sequence number is used
without a random nonce, the sequence number shall be reset only when the timestamp
changes. (For example, a timestamp may show the date but not the time of day, so a
sequence number is appended that will not repeat during a particular day.)
When using a nonce, a random nonce should be used.
In the following schemes, let Nonce be the verifier-supplied nonce (i.e., supplied by
entity B). Let D be the data transmitted by entity A to entity B, which includes the
message M and various timestamps and/or digital signatures. Let SIGA( ) be the digital
signature that is computed by entity A using an approved hash function and an
approved digital signature algorithm; SIGA( ) is verified using entity A’s public
signature verification key. The discussions assume that entities A and B successfully
verify all digital signatures.
For each scheme in Section 5, a text description is provided, along with a figure to
illustrate the message flow for the scheme. The number in the figure for each message
indicates the step in the text description that describes that message. Note that the step
numbers for internal operations are not indicated in the figure.

                                             24
