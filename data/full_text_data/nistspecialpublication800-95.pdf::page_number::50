                                                                                          GUIDE TO SECURE WEB SERVICES



3.5.1.2 Attribute-Based Access Control (ABAC)

ABAC provides a mechanism for representing a subject’s (either a user or application) access profile
through a combination of the following attribute types:

 Subject Attributes (S). Associated with a subject that defines the identity and characteristics of that
  subject
 Resource Attributes (R). Associated with a resource, such as a Web service, system function, or
  data
 Environment Attributes (E). Describes the operational, technical, or situational environment or
  context in which the information access occurs.
ABAC policy rules are generated as Boolean functions of S, R, and E attributes and dictate whether a
subject S can access a resource R in a particular environment E - as loosely indicated in Figure 3-5: 38

                                   Rule X : can _ access(s, r, e) ←
                                            f (ATTR(s), ATTR(r), ATTR(e))

                                          Figure 3-5. ABAC Policy Function

ABAC clearly provides an advantage over traditional RBAC when extended into SOA environments,
which can be extremely dynamic in nature. ABAC policy rules can be custom-defined with consideration
for semantic context and are significantly more flexible than RBAC for fine-grained alterations or
adjustments to a subject’s access profile. ABAC also integrates seamlessly with XACML, which relies
on policy-defined attributes to make access control decisions.

One additional benefit to Web service implementations of ABAC lies in the nature of the loose definition
of subjects. Because ABAC provides the flexibility to associate policy rules to any actor, it can be
extended to Web service software agents as well. Figure 3-6 illustrates how an ABAC attribute authority
(AA) can be integrated with a SAML framework. In this diagram, the AA generates attribute assertions,
which contain all the attributes necessary for an access control decision based on an ABAC policy written
in XACML. The PDP uses the attribute assertions, the authentication assertion, and the XACML policy
to generate an authorization decision assertion. XACML is discussed in detail in Section 3.5.4.




38
     This example appears in Eric Yuan, Jin Tong: Attribute Based Access Control: A New Access Control Approach for Service
     Oriented Architectures, available at http://lotos.site.uottawa.ca/ncac05.


                                                           3-15
