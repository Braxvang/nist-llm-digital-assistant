                                                                   GUIDELINES ON SECURING PUBLIC WEB SERVERS



     Assets of the organization

     Configuration of the server or network that could be exploited for subsequent attacks

     Information regarding the users or administrator(s) of the Web server, including their passwords.

 Vulnerabilities within the Web server that might allow, for example, attackers to compromise the
  security of the server and other hosts on the organization’s network by taking actions such as the
  following:

     Defacing the Web site or otherwise affect information integrity

     Executing unauthorized commands or programs on the host operating system, including ones that
        the intruder has installed

     Gaining unauthorized access to resources elsewhere in the organization’s computer network

     Launching attacks on external sites from the Web server, thus concealing the intruders’ identities,
        and perhaps making the organization liable for damages

     Using the server as a distribution point for illegally copied software, attack tools, or pornography,
        perhaps making the organization liable for damages

     Using the server to deliver attacks against vulnerable Web clients to compromise them.

 Inadequate or unavailable defense mechanisms for the Web server to prevent certain classes of
  attacks, such as DoS attacks, which disrupt the availability of the Web server and prevent authorized
  users from accessing the Web site when required.

In recent years, as the security of networks and server installations have improved, poorly written
software applications and scripts that allow attackers to compromise the security of the Web server or
collect data from backend databases have become the targets of attacks. Many dynamic Web applications
do not perform sufficient validation of user input, allowing attackers to submit commands that are run on
the server. Common examples of this form of attack are structured query language (SQL) injection,
where an attacker submits input that will be passed to a database and processed, and cross-site scripting,
where an attacker manipulates the application to store scripting language commands that are activated
when another user accesses the Web page.

A number of steps are required to ensure the security of any public Web server. As a prerequisite for
taking any step, however, it is essential that the organization have a security policy in place. Taking the
following steps within the context of the organization’s security policy should prove effective:

 Step 1: Installing, configuring, and securing the underlying operating system (OS)

 Step 2: Installing, configuring, and securing Web server software

 Step 3: Employing appropriate network protection mechanisms (e.g., firewall, packet filtering router,
  and proxy)

 Step 4: Ensuring that any applications developed specifically for the Web server are coded following
  secure programming practices



                                                     2-2
