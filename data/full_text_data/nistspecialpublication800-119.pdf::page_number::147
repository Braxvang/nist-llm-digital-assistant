                                                         GUIDELINES FOR THE SECURE DEPLOYMENT OF IPV6


 Subsequent traffic has no immediately distinguishing feature. Heuristic checks have been
  devised, but these are not likely to be practical.
 Teredo requires that external UDP ports are open and are not filtered at a NAT device or
  firewall. This could allow port scans to identify openings they would not see otherwise.
  Teredo bubbles increase this exposure.
 Teredo’s IPv6 addresses are more predictable than native IPv6 addresses. Techniques like
  privacy addressing and CGA are not usable with Teredo.
 An attacker could deploy a rogue Teredo server or Teredo relay on the Internet to perform
  man-in-the-middle attacks. Securing these Teredo servers/relays are difficult because they are
  not network elements but servers, and those servers are on the Internet, not owned or operated
  by the organization. The security of those Teredo servers/relays may be in question and cause
  for concern over man-in-the-middle attacks is warranted.
 A third party may impersonate a Teredo server and carry out a DOS attack by sending wrong
  information to the Teredo client. To counter impersonation attacks, use two-way
  authentication between Teredo client and server.
 Teredo relays must protect themselves against being used as anonymous senders in distributed
  DOS attacks.
 The Teredo service must not bypass or disable ingress filtering, whatever firewall service was
  available in the NAT box, or other firewalls, virus checkers, or intrusion detection systems.
  This is a common security concern for all tunneling protocols. Ingress filtering may show up
  particularly with Teredo, because the system was assumed to be behind a NAT. Such security
  checks should also look for unexpected effects due to IPv6 type 0 routing headers.
 Services that listen to the Teredo IPv6 address become potential targets of attacks from the
  entire IPv6 Internet. This vulnerability can be reduced in three ways. First, it is possible to
  restrict some services to accept traffic only from local neighbors (for example, by using link-
  local addresses). Teredo does not support link-local addresses, so link-local services cannot be
  accessed through Teredo and are restricted to whatever other IPv6 connectivity may be
  available, (for example, direct traffic with neighbors on the local link, behind the NAT).
  Second, a local firewall can perform the same kind of filtering otherwise performed in a
  perimeter firewall. Third, use IPsec with Teredo to protect clients from intermediate nodes.
 An attacker may intercept a router solicitation from a Teredo client, respond with a spoofed
  router advertisement, and provide a Teredo client with an incorrect default router address.
  This may simply deny service to the Teredo client, or the attacker may try to insert itself as a
  relay for all client communications, effectively enabling a variety of man-in-the-middle
  attacks.
 A simple nonce-based verification procedure described in RFC 4380 provides a first level of
  protection against attacks in which a third party tries to spoof the Teredo server. In practice,
  the nonce procedure can be defeated only if the attacker observes both the client and server
  communications.
 If client and server share a secret and agree on an authentication algorithm, the Teredo’s
  secure qualification procedure provides further protection. The most likely way to obtain the
  shared secret is to listen to the traffic and run an offline dictionary attack. To protect against
  this attack, the secret shared between client and server should contain sufficient
  unpredictability.


                                            6-25
