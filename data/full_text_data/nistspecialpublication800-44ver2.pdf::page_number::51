                                                                              GUIDELINES ON SECURING PUBLIC WEB SERVERS



Password protection is the only reliable way to exclude noncompliant bots or curious users. See Section
7 for more information on Web-based authentication methods.

Often, spambots ignore robots.txt and search for email addresses on the Web site and/or forms to which
they can submit spam-related content. Spambots that merely scan the Web site typically do not affect its
availability. Nevertheless, it may be beneficial to prevent them from harvesting e-mail addresses by
performing address munging [Unsp06]—displaying e-mail addresses in an alternative human-readable
format, such as listing name@mywww.gov as <name at mywww dot gov>. Unfortunately, these
techniques do not stop all spambots. The best defense against address harvesting is not to display e-mail
addresses.

Spambots searching for Web forms to submit spam-related content are a direct threat to the Web site.
They can affect the organization’s image if visitors view the submitted content as an endorsement. They
may also affect the Web site’s availability by making it difficult for users to find necessary content.
There are several techniques available to reduce the amount of spam submissions, including—

 Blocking form submissions that use spam-related keywords

 Using the rel=“nofollow” keyword in all submitted links, which will cause search engines to omit the
  links in their page-ranking algorithms, directly affecting the goals of a spambot [Google05]

 Requiring submitters to solve a Completely Automated Public Turing Test to Tell Computers and
  Humans Apart (CAPTCHA) prior to being allowed to submit content.

These techniques all have benefits and drawbacks associated with them. For example, some CAPTCHA
techniques, which can be implemented as an obscured word in an image, do not comply with American
Disability Association (ADA) or Section 508 accessibility guidelines. Information about ongoing
research on detecting spambots can be found through the Adversarial Information Retrieval on the Web
(AIRWeb) workshops. 29

5.3     Checklist for Securing the Web Server

           Completed                                                   Action
                           Securely install the Web server

                           Install the Web server software on a dedicated host or a dedicated virtualized guest OS

                           Apply any patches or upgrades to correct for known vulnerabilities
                           Create a dedicated physical disk or logical partition (separate from OS and Web server
                           application) for Web content
                           Remove or disable all services installed by the Web server application but not required
                           (e.g., gopher, FTP, remote administration)
                           Remove or disable all unneeded default login accounts created by the Web server
                           installation
                           Remove all manufacturer documentation from server
                           Remove any example or test files from server, including scripts and executable code
                           Apply appropriate security template or hardening script to the server




29
      The AIRWeb 2006 Web site is available at http://airweb.cse.lehigh.edu/2006.


                                                              5-9
