                  The Technical Specification for the Security Content Automation Protocol (SCAP): SCAP Version 1.2



While the default version14 of OVAL used in SCAP 1.2 SHALL be OVAL version 5.10, SCAP content
SHOULD utilize the earliest SCAP-supported version of OVAL that includes all required tests and is
necessary to properly address the SCAP content’s purpose or use case. This approach, often referred to as
the “least version principle”, allows SCAP content to remain viable over a longer period of time by
enabling the broadest support within products, while reducing the content maintenance burden that would
be required to maintain revisions of content for multiple specification versions. The minimum supported
OVAL version for SCAP 1.2 SHALL be OVAL version 5.3.
Because SCAP 1.2 supports the use of multiple OVAL source data stream components, an SCAP content
creator could choose to divide the OVAL Definitions into multiple components based on the “least
version” of each definition. For example, if some OVAL Definitions only required OVAL 5.3 while
others required OVAL 5.10, then the content creator could create one OVAL source data stream
component for the OVAL 5.3 definitions and another for the OVAL 5.10 definitions. SCAP 1.2 also
supports multiple types of OVAL Definitions within a single OVAL source data stream component; for
example, a benchmark could reference OVAL compliance and vulnerability definitions contained in a
single data stream component.
The version of any particular OVAL document instance SHALL be specified using the
<oval:schema_version> content element of the <oval:generator> element, as in this
example:
     <oval:generator>
       <oval:product_name>The OVAL Repository</oval:product_name>
       <oval:schema_version>5.10</oval:schema_version>
     </oval:generator>

If an <oval-var:oval_variables> element is used to carry variable values between an XCCDF
processor and an OVAL processor, the <oval:schema_version> of the <oval-
var:oval_variables> element SHALL be the same as that of the <oval-
def:oval_definitions> element whose external variables are bound by the <oval-
var:oval_variables> element.
Required values for the @class attribute of an OVAL Definition are as follows:
      1. “compliance” if it represents a check for the system’s configuration complying with policy
         requirements (for example, having the required value for a specific configuration setting).
      2. “vulnerability” if it represents a check for the presence of a particular software flaw vulnerability
         on a system.
      3. “patch” if it represents a check for whether a discrete patch needs to be installed on the system.
      4. “inventory” if it represents a check for the presence of a product of interest on the system.
The following requirements apply to particular classes of OVAL Definitions:
      1. For compliance class definitions:
          a. If an OVAL compliance class definition maps to one or more CCE identifiers, the definition
             SHOULD include <oval-def:reference> elements that reference those identifiers
             using the following format:
               <oval-def:reference source="http://cce.mitre.org"
               ref_id="CCE_identifier"/>



14
      The OVAL Language versioning methodology is available here: http://oval.mitre.org/language/about/versioning.html


                                                             24
