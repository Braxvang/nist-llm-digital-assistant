                                                                                             NIST SP 800-204                                                          SECURITY STRATEGIES FOR
                                                                                                                                                      MICROSERVICES-BASED APPLICATION SYSTEMS

                                                                                             4     Security Strategies for Implementing Core Features and Countering Threats

                                                                                             Security strategies for the design and deployment of microservices-based application systems
                                                                                             will span the following:

                                                                                             Analysis of implementation options for core features: (Some significant core state of practice
                                                                                             features are shown in Appendix B).

                                                                                                    a) Identity and access management,
                                                                                                    b) Service discovery,
                                                                                                    c) Secure communication protocols,
                                                                                                    d) Security monitoring,
This publication is available free of charge from: https://doi.org/10.6028/NIST.SP.800-204




                                                                                                    e) Resiliency or availability improvement techniques, and
                                                                                                    f) Integrity assurance improvement techniques.

                                                                                             Countering microservices-specific threats:

                                                                                                    a) Threats to service discovery mechanism,
                                                                                                    b) Internet-based attacks, and
                                                                                                    c) Cascading failures.

                                                                                             Note that service discovery is a core feature in microservices, and analysis of the implementation
                                                                                             options will also take into consideration threats to service discovery mechanisms. Similarly,
                                                                                             implementation options for resiliency or availability improvement will also address the counter
                                                                                             measures for cascading failures. As such, there will not be separate security strategies for these
                                                                                             items.

                                                                                             4.1   Strategies for Identity and Access Management

                                                                                             Since microservices are packaged as APIs, the initial form of authentication to microservices
                                                                                             involves the use of API keys (cryptographic). Authentication tokens encoded in Security
                                                                                             Assertion Markup Language (SAML) or through OpenID connect under the OAuth 2.0
                                                                                             framework provide an option for enhancing security [14]. For authorization, a centralized
                                                                                             architecture for provisioning and enforcement of access policies governing access to all
                                                                                             microservices is required due to the sheer number of services, the implementation of services
                                                                                             using APIs, and the need for service composition to support real-world business transactions
                                                                                             (e.g., customer order processing and shipping). A standardized, platform-neutral method for
                                                                                             conveying authorization decisions through a standardized token (e.g., JSON web tokens (JWT),
                                                                                             some of which can be OAuth 2.0 access tokens encoded in JSON format [15]) is also required
                                                                                             since each of the microservices may be implemented in a different language or platform
                                                                                             framework. Policy provisioning and computation of access decisions require the use of an
                                                                                             authorization server.

                                                                                             The disadvantage to implementing access control policies at the access point of each
                                                                                             microservice is that additional effort is required to ensure that cross-cutting (common) policies
                                                                                             applicable to all microservice APIs are implemented uniformly. Any discrepancy in security

                                                                                                                                             17
