                                                                                             NIST SP 800-185                                              SHA-3 DERIVED FUNCTIONS: CSHAKE,
                                                                                                                                                         KMAC, TUPLEHASH, AND PARALLELHASH


                                                                                             Except when used in XOF mode, KMAC, TupleHash, and ParallelHash have the additional
                                                                                             property that, even with the same customization string, blocksize, key, etc., instances of the
                                                                                             functions with different output lengths can be treated as unrelated functions of their remaining
                                                                                             inputs. Thus, for example, ParallelHash(X, B, q1, S) and ParallelHash(X, B, q2, S) can be treated
                                                                                             as independent hash functions with input X and output lengths q1 and q2, respectively.

                                                                                             Note that cSHAKE does not share this property. For q1< q2, cSHAKE(X, q1, N, S) is a prefix of
                                                                                             cSHAKE(X, q2, N, S). This is a property that cSHAKE shares with SHAKE and other XOFs.
                                                                                             This property is discussed in more detail in Appendix A.2 of FIPS 202.

                                                                                             8.3     Collisions and Preimages
This publication is available free of charge from: https://doi.org/10.6028/NIST.SP.800-185




                                                                                             All these functions support variable output lengths. The difficulty of an attacker finding a
                                                                                             collision or preimage for any of these functions depends on both the claimed security strength
                                                                                             and the output length.

                                                                                             A function like cSHAKE128, with a claimed security strength of 128 bits, may be vulnerable to a
                                                                                             collision or preimage attack with 2128 work regardless of its output length—a longer output does
                                                                                             not, in general, improve its security against these attacks. However, a shorter output can make
                                                                                             the function more vulnerable to these attacks. With an output of L bits, a collision attack will
                                                                                             require min(2L/2, 2128) work, and a preimage attack will require at least min(2L, 2128) work.

                                                                                             8.4     Guidance for Using KMAC Securely

                                                                                             For maximum flexibility and usefulness, the KMAC functions are defined for arbitrary-sized
                                                                                             output lengths and key lengths (up to 22040−1 bits). However, not all such output and key lengths
                                                                                             are secure.

                                                                                             8.4.1    KMAC Key Length

                                                                                             The input key length is the parameter that is most straightforwardly translated into a security
                                                                                             strength. Given a small number of known (MAC, plaintext) pairs, an attacker requires at most
                                                                                             2len(K) operations to find the key K.

                                                                                             Applications of this Recommendation shall not select an input key, K, whose length is less than
                                                                                             their required security strength. Guidance for cryptographic algorithm and key-size selection is
                                                                                             available in [4].

                                                                                             8.4.2    KMAC Output Length

                                                                                             The output length is another important security parameter for KMAC—it determines the
                                                                                             probability that an online guessing attack will succeed in forging a MAC tag. In particular, an
                                                                                             attacker will need to submit, on average, 2L invalid (message, MAC) pairs for each successful
                                                                                             forgery. Since L only affects online attacks, a system that uses KMAC for message
                                                                                             authentication can mitigate attacks that exploit a short L by limiting the total number of
                                                                                             verification failures allowed under a given key.


                                                                                                                                            20
