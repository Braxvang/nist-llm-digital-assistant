                                                                  GUIDELINES ON SECURING PUBLIC WEB SERVERS



Although information on public Web sites is content that is intended to be public, assuming a credible
review process and policy is in place, it is still important to ensure that information cannot be modified
without authorization. Users of this information rely upon the integrity of such information even if the
information is not confidential. Because of the public accessibility, content on publicly accessible Web
servers is inherently more vulnerable than information that is inaccessible from the Internet. This
vulnerability means that organizations need to protect public Web content through the appropriate
configuration of Web server resource controls. Examples of resource control practices includeâ€”

 Install or enable only necessary services.

 Install Web content on a dedicated hard drive or logical partition.

 Limit uploads to directories that are not readable by the Web server.

 Define a single directory for all external scripts or programs executed as part of Web content.

 Disable the use of hard or symbolic links.

 Define a complete Web content access matrix that identifies which folders and files within the Web
  server document directory are restricted and which are accessible (and by whom).

 Disable directory listings.

 Use user authentication, digital signatures, and other cryptographic mechanisms as appropriate.

 Use host-based intrusion detection systems (IDS), intrusion prevention systems (IPS), and/or file
  integrity checkers to detect intrusions and verify Web content.

 Protect each backend server (e.g., database server, directory server) from command injection attacks
  at both the Web server and the backend server.

Organizations should use active content judiciously after balancing the benefits gained against the
associated risks.

Most early Web sites presented static information residing on the server, typically in the form of text-
based documents. Soon thereafter, interactive elements were introduced to offer users new ways to
interact with a Web site. Unfortunately, these same interactive elements introduced new Web-related
vulnerabilities because they involve dynamically executing code on either the Web server or client using
a large number of inputs, from Universal Resource Locator (URL) parameters to Hypertext Transfer
Protocol (HTTP) POST content and, more recently, Extensible Markup Language (XML) content in the
form of Web service messages. Different active content technologies have different associated
vulnerabilities, and their risks should be weighed against their benefits. Although most Web sites use
some form of active content generators, many also deliver some or all of their content in a non-active
form.

Organizations must use authentication and cryptographic technologies as appropriate to protect
certain types of sensitive data.

Public Web servers often support a range of technologies for identifying and authenticating users with
differing privileges for accessing information. Some of these technologies are based on cryptographic
functions that can provide an encrypted channel between a Web browser client and a Web server that



                                                   ES-5
