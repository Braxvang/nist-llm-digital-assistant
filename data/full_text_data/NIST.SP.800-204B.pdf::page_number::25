                                                                                              NIST SP 800-204B                                                   ABAC FOR MICROSERVICES-BASED
                                                                                                                                                               APPLICATIONS USING A SERVICE MESH

                                                                                              identity is found in the SPIFFE certificate is the one that is authorized to run the target service,
                                                                                              the following requirements (also specified in SP 800-204A) are needed.

                                                                                              SAUN-SR-2: If the certificate used for mTLS carries server identity, then the service mesh
                                                                                              should provide a secure naming service that maps the server identity to the microservice name
                                                                                              that is provided by the secure discovery service or DNS. This requirement is needed to ensure
                                                                                              that the server is the authorized location for the microservices and to protect against network
                                                                                              hijacking.

                                                                                              The information for mapping the server identity to a service is obtained by the control plane of
                                                                                              the service mesh by accessing the configuration information from the platform that is hosting
This publication is available free of charge from: https://doi.org/10.6028/NIST.SP.800-204B




                                                                                              the microservices-based application. In Kubernetes, the control plane of the service mesh
                                                                                              obtains the mapping information through the API server module of the Kubernetes platform
                                                                                              and populates that information in the secure naming service. Thus, the mutual certificate
                                                                                              validation not only enables validation of the associated service identities of both the client and
                                                                                              target services but also enables creation of a secure mTLS session. In Istio, the policy object for
                                                                                              this type of authentication is called “peer authentication.”

                                                                                              4.4.3   End User Authentication

                                                                                              For the mesh to authenticate end user credentials (EUC), the application must participate in
                                                                                              some way. Client services that make the request should acquire and attach an appropriate
                                                                                              credential to each request (e.g., a JWT) in the request header. End user authentication, or
                                                                                              request authentication, is the process of validating the credentials of the end user making a
                                                                                              request by extracting them from the request’s metadata and authenticating them (locally or
                                                                                              against an external server). For example, a common flow at many organizations is to exchange
                                                                                              an external EUC, like an Oauth bearer token, at ingress for an internal credential that is
                                                                                              encoded within a JWT. The JWT can be created by a custom authentication provider or
                                                                                              standards-based OpenID Connect provider.

                                                                                              The minimal information requirement in an end user authentication policy is designated using
                                                                                              the acronym EAUN-SR-X, where EAUN stands for end user authentication, SR stands for
                                                                                              security recommendation, and X is the sequence number.:

                                                                                               EAUN-SR-1: A request authentication policy must, at the minimum, provide the following
                                                                                              information and must be enforced by the sidecar proxy:

                                                                                              ● Instructions for extracting the credential from the request
                                                                                              ● Instructions for validating the credential

                                                                                              For a JWT, this might include:

                                                                                              ● Location (header name) of the JWT token that contains the user’s claims
                                                                                              ● How to extract the subject, claims, and issuers from the JWT
                                                                                              ● Public keys or the location for the key used for validating the JWT




                                                                                                                                                 17
