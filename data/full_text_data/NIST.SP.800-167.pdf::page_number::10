NIST SP 800-167                                                                                GUIDE TO APPLICATION W HITELISTING


The other major category of threats that application whitelisting technology can mitigate is other
unauthorized software (unauthorized software besides malware). This software can pose multiple
problems. For example, it can introduce unmanaged vulnerable software into the environment, which can
then be used by attackers to exploit hosts and further compromise them. There can also be legal issues
with the installation of unauthorized software, such as violations of licensing agreements.

Application whitelisting is most readily used to stop threats on managed hosts where users are not able to
install or run applications without authorization. An example is a kiosk workstation where users are
limited to running a web browser; installation and execution of all applications other than the selected
web browser and authorized application-based security controls (such as antivirus software) would be
prohibited. Another example is a laptop that has all authorized applications preinstalled for the user, and
the user does not have the administrative privileges necessary to install additional applications or disable
the application whitelisting software. Application whitelisting may also be beneficial on servers,
particularly if there is concern about malware spreading to these servers from other hosts (e.g.,
administrator laptops).

2.2      Types of Application Whitelisting

This section discusses the types of application whitelisting. This includes the application file and folder
attributes that can be analyzed; the types of application resources handled, such as executables, libraries,
and scripts; and techniques for whitelist generation.

2.2.1      File and Folder Attributes

Application whitelisting can be based on a variety of application file and folder attributes, including the
following:2

     File path. This is the most general attribute: to permit all applications contained within a particular
      path (directory/folder). Used by itself, this is a very weak attribute, because it allows any malicious
      files placed within the directory to be executed. However, if the path is protected by strict access
      controls that only allow authorized administrators to add or modify files, this becomes a stronger
      attribute. Paths can be beneficial by not requiring each file within the path to be listed separately,
      which reduces the need to update the whitelist for every new application and patch.
     Filename. This attribute, for the name of an application file, is too general to be used on its own. If a
      file were to become infected or be replaced, its name would be unchanged so the file would still be
      executed under the whitelist. Also, an attacker could simply place a malicious file onto a host and use
      the same name as a common benign file. Because of these weaknesses, this attribute should not be
      used on its own; rather, it should be paired with other attributes. For example, it would be stronger to
      combine path and filename attributes with strict access controls or to combine a filename attribute
      with a digital signature attribute (described below).
     File size. This attribute is typically used only in combination with other attributes, such as filename.
      Monitoring the file size assumes that a malicious version of an application would have a different file
      size than the original; however, attackers can craft malicious files to have the same length as their
      benign counterparts. Other attributes, such as digital signature and cryptographic hash, provide


2     This list of attributes is not intended to be all-inclusive. Also, it is expected that new forms of attributes may arise as
      technologies advance. Another set of attributes is the software identification tags (SWID tags) which define unique
      information about an installed software application, including its name, edition, version, whether it’s part of a bundle and
      more (http://tagvault.org/swid-tags/).



                                                                   3
