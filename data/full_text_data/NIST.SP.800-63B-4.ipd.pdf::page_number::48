       NIST SP 800-63B-4 ipd                                               Digital Identity Guidelines
       December 2022                                        Authentication and Lifecycle Management


1387   authenticator output that is cryptographically bound to a verifier identifier that is
1388   authenticated as part of the protocol. In the case of domain name system (DNS)
1389   identifiers, the verifier identifier SHALL be either the authenticated hostname of the
1390   verifier or a parent domain that is at least one level below the public suffix [PSL]
1391   associated with that hostname. The binding MAY be established by choosing an
1392   associated authenticator secret, by deriving an authenticator secret using the verifier
1393   identifier, by cryptographically signing the authenticator output with the verifier identifier,
1394   or similar cryptographically secure means.

1395   5.2.6. Veriﬁer-CSP Communications
1396   In situations where the verifier and CSP are separate entities (as shown by the dotted line
1397   in [SP800-63] Figure 1), communications between the verifier and CSP SHALL occur
1398   through a mutually authenticated secure channel (such as a client-authenticated TLS
1399   connection) using approved cryptography.

1400   5.2.7. Veriﬁer Compromise Resistance
1401   Use of some types of authenticators requires that the verifier store a copy of the
1402   authenticator secret. For example, an OTP authenticator (described in Sec. 5.1.4) requires
1403   that the verifier independently generate the authenticator output for comparison against
1404   the value sent by the claimant. Because of the potential for the verifier to be compromised
1405   and stored secrets stolen, authentication protocols that do not require the verifier to
1406   persistently store secrets that could be used for authentication are considered stronger,
1407   and are described herein as being verifier compromise resistant. Note that such verifiers
1408   are not resistant to all attacks. A verifier could be compromised in a different way, such as
1409   being manipulated into always accepting a particular authenticator output.
1410   Verifier compromise resistance can be achieved in different ways, for example:
1411       • Use a cryptographic authenticator that requires the verifier store a public key
1412         corresponding to a private key held by the authenticator.
1413       • Store the expected authenticator output in hashed form. This method can be used
1414         with some look-up secret authenticators (described in Sec. 5.1.2), for example.
1415   To be considered verifier compromise resistant, public keys stored by the verifier SHALL
1416   be associated with the use of approved cryptographic algorithms and SHALL provide at
1417   least the minimum security strength specified in the latest revision of [SP800-131A] (112
1418   bits as of the date of this publication).
1419   Other verifier compromise resistant secrets SHALL use approved hash algorithms and
1420   the underlying secrets SHALL have at least the minimum security strength specified in
1421   the latest revision of [SP800-131A] (112 bits as of the date of this publication). Secrets
1422   (e.g., memorized secrets) having lower complexity SHALL NOT be considered verifier
1423   compromise resistant when hashed because of the potential to defeat the hashing process
1424   through dictionary lookup or exhaustive search.

                                                     36
