                                                                                             NIST SP 800-190                                                APPLICATION CONTAINER SECURITY GUIDE


                                                                                             3.4.3    Insecure container runtime configurations

                                                                                             Container runtimes typically expose many configurable options to administrators. Setting them
                                                                                             improperly can lower the relative security of the system. For example, on Linux container hosts,
                                                                                             the set of allowed system calls is often limited by default to only those required for safe
                                                                                             operation of containers. If this list is widened, it may expose containers and the host OS to
                                                                                             increased risk from a compromised container. Similarly, if a container is run in privileged mode,
                                                                                             it has access to all the devices on the host, thus allowing it to essentially act as part of the host
                                                                                             OS and impact all other containers running on it.

                                                                                             Another example of an insecure runtime configuration is allowing containers to mount sensitive
                                                                                             directories on the host. Containers should rarely make changes to the host OS file system and
This publication is available free of charge from: https://doi.org/10.6028/NIST.SP.800-190




                                                                                             should almost never make changes to locations that control the basic functionality of the host OS
                                                                                             (e.g., /boot or /etc for Linux containers, C:\Windows for Windows containers). If a compromised
                                                                                             container is allowed to make changes to these paths, it could be used to elevate privileges and
                                                                                             attack the host itself as well as other containers running on the host.

                                                                                             3.4.4    App vulnerabilities

                                                                                             Even when organizations are taking the precautions recommended in this guide, containers may
                                                                                             still be compromised due to flaws in the apps they run. This is not a problem with containers
                                                                                             themselves, but instead is just the manifestation of typical software flaws within a container
                                                                                             environment. For example, a containerized web app may be vulnerable to cross-site scripting
                                                                                             vulnerabilities, and a database front end container may be subject to Structured Query Language
                                                                                             (SQL) injection. When a container is compromised, it can be misused in many ways, such as
                                                                                             granting unauthorized access to sensitive information or enabling attacks against other containers
                                                                                             or the host OS.

                                                                                             3.4.5    Rogue containers

                                                                                             Rogue containers are unplanned or unsanctioned containers in an environment. This can be a
                                                                                             common occurrence, especially in development environments, where app developers may launch
                                                                                             containers as a means of testing their code. If these containers are not put through the rigors of
                                                                                             vulnerability scanning and proper configuration, they may be more susceptible to exploits.
                                                                                             Rogue containers therefore pose additional risk to the organization, especially when they persist
                                                                                             in the environment without the awareness of development teams and security administrators.

                                                                                             3.5     Host OS Risks

                                                                                             3.5.1    Large attack surface

                                                                                             Every host OS has an attack surface, which is the collection of all ways attackers can attempt to
                                                                                             access and exploit the host OSâ€™s vulnerabilities. For example, any network-accessible service
                                                                                             provides a potential entry point for attackers, adding to the attack surface. The larger the attack
                                                                                             surface is, the better the odds are that an attacker can find and access a vulnerability, leading to a
                                                                                             compromise of the host OS and the containers running on top of it.



                                                                                                                                               17
