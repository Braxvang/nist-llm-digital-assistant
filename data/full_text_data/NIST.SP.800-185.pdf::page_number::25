                                                                                             NIST SP 800-185                                                  SHA-3 DERIVED FUNCTIONS: CSHAKE,
                                                                                                                                                             KMAC, TUPLEHASH, AND PARALLELHASH

                                                                                             8       Security Considerations

                                                                                             8.1     Claimed Security Strength

                                                                                             cSHAKE, KMAC, TupleHash, and ParallelHash are all defined for two claimed security
                                                                                             strengths: 128 bits and 256 bits.

                                                                                             cSHAKE128, KMAC128, TupleHash128, and ParallelHash128 each provide a security strength
                                                                                             of 128 bits. This means that, for a given output length L, there is no generic attack on one of
                                                                                             these functions requiring less than 2128 work that does not also exist for any hash function with
                                                                                             the same output length. Similarly, cSHAKE256, KMAC256, TupleHash256, and
                                                                                             ParallelHash256 each provides a security strength of 256 bits against generic attacks.
This publication is available free of charge from: https://doi.org/10.6028/NIST.SP.800-185




                                                                                             8.2     Security Properties for the Function-Name and Customization Strings

                                                                                             8.2.1    Equivalent Security to SHAKE for Any Legal N and S

                                                                                             For a given choice of the function name N and the customization string S, cSHAKE128(X, L, N,
                                                                                             S) has exactly the same security properties as SHAKE128(X, L); cSHAKE256(X, L, N, S) has
                                                                                             exactly the same security properties as SHAKE256(X, L). There are no "weak" values for N or S.

                                                                                             8.2.2    Different N and S Give Unrelated Outputs

                                                                                             Suppose that (n1, s1) and (n2, s2) are two name and customization string pairs, and either n1 ≠
                                                                                             n2, or s1 ≠ s2. Furthermore, suppose that q1 and q2 are the lengths of the requested output. Then,
                                                                                             cSHAKE(X, q1, n1, s1) and cSHAKE(X, q2, n2, s2) can be treated as unrelated functions of X.
                                                                                             That is, they can be treated as if they were two completely different functions, with output
                                                                                             lengths q1 and q2, respectively. This means, for example, that:

                                                                                             •     Keys k1 and k2, where k1 = cSHAKE(x1, q1, n1, s1), and k2 = cSHAKE(x2, q2, n2, s2), and
                                                                                                   both keys are derived from secret, but related, quantities x1 and x2, will not be susceptible to
                                                                                                   related key attacks (with complexity less than the claimed security strength of the cSHAKE
                                                                                                   function.)
                                                                                             •     Finding a collision such that cSHAKE128(x1, L, n1, s1) = cSHAKE128(x2, L, n2, s2) will
                                                                                                   require a computational complexity on the order of min(2L/2, 2128). Similarly, finding a
                                                                                                   collision such that cSHAKE256(x1, L, n1, s1) = cSHAKE256(x2, L, n2, s2), will require a
                                                                                                   computational complexity on the order of min(2L/2, 2256).

                                                                                             Because KMAC, TupleHash, and ParallelHash are derived from cSHAKE, they inherit these
                                                                                             properties. Specifically:

                                                                                             •     Each of these functions gives outputs unrelated to the outputs of any of the other functions.
                                                                                                   There is, for example, no relationship between the outputs of KMAC (for any set of inputs)
                                                                                                   and TupleHash (for any set of inputs).
                                                                                             •     For any of these functions, using a different customization string gives an unrelated output.
                                                                                                   Thus, if s1 ≠ s2, ParallelHash(X, B, L, s1) and ParallelHash(X, B, L, s2) are expected to have
                                                                                                   no particular relationship.

                                                                                                                                               19
