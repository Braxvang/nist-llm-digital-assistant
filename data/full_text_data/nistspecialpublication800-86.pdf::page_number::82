GUIDE TO INTEGRATING FORENSIC TECHNIQUES INTO INCIDENT RESPONSE



7.1.2   Authentication

Some applications verify the identity of each user attempting to run the application. Although this is
usually done to prevent unauthorized access to the application, it may also be done when access is not a
concern so that the application can be customized based on the user’s identity. Common authentication
methods include the following:

    ! External Authentication. The application may use an external authentication service, such as a
      directory server. Although the application may contain some records related to authentication,
      the external authentication service is likely to contain more detailed authentication information.
    ! Proprietary Authentication. The application may have its own authentication mechanism, such
      as user accounts and passwords that are part of the application, not the OS.
    ! Pass-Through Authentication. Pass-through authentication refers to passing OS credentials
      (typically, username and password) unencrypted from the OS to the application.
    ! Host/User Environment. Within a controlled environment (e.g., managed workstations and
      servers within an organization), some applications may be able to rely on previous authentication
      performed by the OS. For example, if all hosts using an application are part of the same
      Windows domain and each user has already been authenticated by the domain, then the
      application can extract the OS-authenticated identity from each workstation’s environment. The
      application can then restrict access to the application by tracking which users are permitted to
      have access and comparing the OS-authenticated identity to the authorized user list. This
      technique is effective only if users cannot alter the user identity in the workstation environment.
Authentication implementations vary widely among environments and applications. The details of such
implementations are beyond the scope of this document. However, analysts should be aware that there
are many ways in which users can be authenticated and that, accordingly, the sources of user
authentication records might vary greatly among applications and application implementations. Analysts
should also know that some applications use access control (typically enforced by the OS) to restrict
access to certain types of information or application functions. This knowledge can be helpful in
determining what a particular application user could have done. In addition, some applications record
information related to access control, such as failed attempts to perform sensitive actions or access
restricted data.

7.1.3   Logs

Although some applications (primarily very simple ones) do not record any information to logs, most
applications perform some type of logging. An application may record log entries to an OS-specific log
(e.g., syslog on UNIX systems, event logs on Windows systems), a text file, a database, or a proprietary
file format. Some applications record different types of events to different logs. Common types of log
entries are as follows:

    ! Event. Event log entries typically list actions that were performed, the date and time each action
      occurred, and the result of each action. Examples of actions that might be recorded are
      establishing a connection to another system and issuing administrator-level commands. Event log
      entries might also include supporting information, such as what username was used to perform
      each action and what status code was returned (which provides more information about the result
      than a simple successful/failed status).




                                                    7-2
