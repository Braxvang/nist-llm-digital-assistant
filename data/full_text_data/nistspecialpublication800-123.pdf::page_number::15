                                                                                      GUIDE TO GENERAL SERVER SECURITY



5. Employ appropriate network protection mechanisms (e.g., firewall, packet filtering router, and
   proxy). Choosing the mechanisms for a particular situation depends on several factors, including the
   location of the server’s clients (e.g., Internet, internal, internal and remote access), the location of the
   server on the network, the types of services offered by the server, and the types of threats against the
   server. Accordingly, this publication does not present recommendations for selecting network
   protection mechanisms. NIST SP 800-41, Guidelines on Firewalls and Firewall Policy and NIST SP
   800-94, Guide to Intrusion Detection and Prevention Systems (IDPS), contain additional information
   on network protection mechanisms.

6. Employ secure administration and maintenance processes, including application of patches and
   upgrades, monitoring of logs, backups of data and OS, and periodic security testing. This step is
   described in Section 6.

The practices recommended in this document are designed to help mitigate the risks associated with
servers. They build on and assume the implementation of practices described in the NIST publications on
system and network security listed in Appendix C.

2.4     Server Security Principles

When addressing server security issues, it is an excellent idea to keep in mind the following general
information security principles: 5

 Simplicity—Security mechanisms (and information systems in general) should be as simple as
  possible. Complexity is at the root of many security issues.

 Fail-Safe—If a failure occurs, the system should fail in a secure manner, i.e., security controls and
  settings remain in effect and are enforced. It is usually better to lose functionality rather than
  security.

 Complete Mediation—Rather than providing direct access to information, mediators that enforce
  access policy should be employed. Common examples of mediators include file system permissions,
  proxies, firewalls, and mail gateways.

 Open Design—System security should not depend on the secrecy of the implementation or its
  components.

 Separation of Privilege—Functions, to the degree possible, should be separate and provide as much
  granularity as possible. The concept can apply to both systems and operators and users. In the case
  of systems, functions such as read, edit, write, and execute should be separate. In the case of system
  operators and users, roles should be as separate as possible. For example, if resources allow, the role
  of system administrator should be separate from that of the database administrator.

 Least Privilege—This principle dictates that each task, process, or user is granted the minimum
  rights required to perform its job. By applying this principle consistently, if a task, process, or user is
  compromised, the scope of damage is constrained to the limited resources available to the
  compromised entity.



5
      Derived from Matt Curtin, Developing Trust: Online Privacy and Security, November 2001 and from Jerome H. Saltzer and
      Michael Schroeder, “The Protection of Information in Computer Systems,” Proceedings of the IEEE, Vol. 63, pages 1278–
      1308


                                                            2-4
