NIST SP 800-124r2                                                  Guidelines for Managing the Security
May 2023                                                            of Mobile Devices in the Enterprise

is no network connectivity. Depending on how the VMI system is structured, VMI may or may
not be deployed onto a device already provisioned into an EMM. VMI typically does not allow
for device-wide controls and configurations. The deployment and use of this technology is not
within the scope of this document.

4.2.6. Application Wrapping
App wrapping is a security mechanism that modifies a ready-to-run mobile executable to prevent
functionality defined by a mobile administrator. This approach is often seen as an alternative to
the usage of a secure container. Wrapping allows for policies to be enforced on third-party
applications that the enterprise does not own. App wrapping typically requires administrative
access to the mobile device, and wrapped apps are installed onto the device without being
uploaded to – or vetted by – a platform’s native app store. This process of non-standard
installation is also known as sideloading and could make a mobile device extremely vulnerable
to attack if done incorrectly. To mitigate these potential attacks, the sideloading functionality
should be disabled when not used for installing the wrapped apps. The use of app wrapping can
be seen as beneficial from a usability standpoint, as users simply use apps as they normally would.
From an IT administrator standpoint, deploying updates can be problematic and prone to error.

4.2.7. Secure Containers
Secure containers provide software-based data isolation designed to segment enterprise
applications and information from personal apps and data. Containers may present multiple user
interfaces, one of the most common being a mobile application that acts as a portal to a suite of
business productivity apps, such as email, contacts, and calendar. IT administrators can manage
policy sets on containers, but this process may require a software development kit (SDK) to be
integrated into an app. There are multiple secure container architectures, with the two major ones
colloquially referred to as app-based and OS-based.
App-based containers may not be wholly dissimilar from any other apps on a mobile device, with
the exception of leveraging the management APIs provided by the OS developer. For instance,
on most modern mobile platforms, any information stored within an app’s directory on a device
will be encrypted by default. A more extensible implementation of an app-level container allows
an enterprise to manage the cryptographic key that protects the container.
OS-based containers provide additional segmentation and data isolation when compared to app-
based containers. There is often an isolated area on the platform where apps can be installed.
They may also provide a FIPS 140-validated environment independent of the local cryptographic
functions.

       Recommended Mitigations and Countermeasures
This section identifies mitigations to the threats identified in Section 3. Table 1 depicts the
threats and associates them with potential mitigations and countermeasures. Not all threats have
a corresponding mitigation listed. Unaddressed threats indicate open research areas and
opportunities for new technologies and products. Each listed mitigation addresses at least one
threat listed in Section 3. Applying the following mitigations to the personal device of an


                                                23
