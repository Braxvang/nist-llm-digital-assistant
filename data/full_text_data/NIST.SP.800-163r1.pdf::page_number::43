                                                                                               NIST SP 800-163 REV. 1                                                  VETTING THE SECURITY OF MOBILE APPS




                                                                                                Appendix C—iOS App Vulnerability Types

                                                                                               This appendix identifies and defines the various types of vulnerabilities that are specific to apps
                                                                                               running on mobile devices utilizing the Apple iOS operating system. The scope does not include
                                                                                               vulnerabilities in the mobile platform hardware and communications networks. Although some
                                                                                               of the vulnerabilities described below are common across mobile device environments, this
                                                                                               appendix focuses on iOS-specific vulnerabilities.

                                                                                               The vulnerabilities in this appendix are broken into three hierarchical levels, A, B, and C. The A
                                                                                               level is referred to as the vulnerability class and is the broadest description for the vulnerabilities
                                                                                               specified under that level. The B level is referred to as the sub-class and attempts to narrow down
                                                                                               the scope of the vulnerability class into a smaller, common group of vulnerabilities. The C level
This publication is available free of charge from: https://doi.org/10.6028/NIST.SP.800-163r1




                                                                                               specifies the individual vulnerabilities that have been identified. The purpose of this hierarchy is
                                                                                               to guide the reader to finding the type of vulnerability they are looking for as quickly as possible.

                                                                                               Table 5 shows the A level general categories of iOS app vulnerabilities.
                                                                                                                            Table 5 - iOS Vulnerability Descriptions, A Level.

                                                                                                       Type                       Description                                Negative Consequence
                                                                                                Incorrect          Permissions allow accessing controlled         An app with too many permissions may
                                                                                                Permissions        functionality such as the camera or GPS        perform unintended functions outside the
                                                                                                                   and are requested in the program.              scope of the app’s intended functionality.
                                                                                                                   Permissions can be implicitly granted to       Additionally, the permissions are vulnerable to
                                                                                                                   an app without the user’s consent.             hijacking by another app. If too few
                                                                                                                                                                  permissions are granted, the app will not be
                                                                                                                                                                  able to perform the functions required.
                                                                                                Exposed            Internal communications protocols allow        Exposed internal communications allow apps
                                                                                                Communication-     apps to process information and                to gather unintended information and inject
                                                                                                Internal and       communicate with other apps. External          new information. Exposed external
                                                                                                External           communications allow information to leave      communication (data network, Wi-Fi,
                                                                                                                   the device.                                    Bluetooth, etc.) leave information open to
                                                                                                                                                                  disclosure or man-in-the-middle attacks.
                                                                                                Potentially        Controlled functionality that accesses         Unintended functions could be performed
                                                                                                Dangerous          system-critical resources or the user’s        outside the scope of the app’s functionality.
                                                                                                Functionality      personal information. This functionality
                                                                                                                   can be invoked through API calls or hard
                                                                                                                   coded into an app.
                                                                                                App Collusion      Two or more apps passing information to        Collusion can allow apps to obtain data that
                                                                                                                   each other in order to increase the            was unintended such as a gaming app
                                                                                                                   capabilities of one or both apps beyond        obtaining access to the user’s contact list.
                                                                                                                   their declared scope.
                                                                                                Obfuscation        Functionality or control flow that is hidden   1. External libraries can contain unexpected
                                                                                                                   or obscured from the user. For the             and/or malicious functionality.
                                                                                                                   purposes of this appendix, obfuscation         2. Reflective calls can obscure the control flow
                                                                                                                   was defined as three criteria: external        of an app and/or subvert permissions within an
                                                                                                                   library calls, reflection, and packed code.    app.
                                                                                                                                                                  3. Packed code prevents code reverse
                                                                                                                                                                  engineering and can be used to hide malware.




                                                                                                                                                      36
