                                                                               GUIDE TO SECURE WEB SERVICES



assertions and entities that will receive them follow appropriate organizational policies. Because of this,
it is possible that a malicious entity may attempt to use SAML assertions in replay attacks (in particular,
authentication assertions and authorization decision assertions are likely to be replayed). There are a
number of techniques that can mitigate this threat, including:

 Encrypting the assertion will prevent a third party from viewing it, although a malicious entity may
  attempt to resend the encrypted assertion.
 Signing the entire message rather than the assertion itself, using WS-Security in a SOAP response or
  SSL/TLS in a HTTP response. This way, an attacker must resend the whole message to be
  successful.
 Enforcing validity periods and ensuring that the IssueInstant of the assertion is reasonable. This will
  minimize the amount of time during which an attacker may successfully execute a replay attack.
If a SAML authority is publicly accessible, an attacker may send SAML queries to gain information about
the subjects within the system. Similarly, an attacker may construct a malicious SAML authority. In
each case, it is especially important that entities using SAML authenticate one another before requesting
or providing information about subjects within the SOA.

3.5.4   XACML

Within Web services extensions, a vocabulary is required for expressing the rules needed to make
authorization decisions. One such vocabulary is XACML. XACML is a language- and platform-neutral
method for representing and enforcing security policies. Using XML as a basis for a security policy
language is the natural choice because its syntax can easily be extended to conform to the requirements of
individual applications. XACML defines both a policy language and a request/response language for
access control decisions. The policy language is used to define the access control requirements of a
particular system or organization. The request/response language provides a mechanism for asking
whether or not a particular action is allowed. XACML also defines a method for mapping the request to
the policy and determining whether or not the policy allows the requested action.

XACML is used in conjunction with SAML to provide a means for standardizing access control decisions
for resources over a network. XACML uses a context that can easily be mapped on SAML requests to
determine if access should be granted to a resource based on XACML policies. Once the policy is
evaluated and returns a true or false value to indicate whether or not access is granted, a SAML
authorization decision assertion is returned, which is then processed accordingly.

The following subsections describe additional details on the XACML specification, including major
inherent features and a discussion of how the transparent components of XACML operate in the
background. Also provided are summaries on how XACML is implemented in a SOA and examples of
practical extensions/implementations of XACML within the community.

3.5.4.1 How XACML Works

XACML defines a language for creating policies. The basic elements for policies are Policy and
PolicySet. A PolicySet can contain Policies and references to external policies. A Policy defines a single
access control policy that is expressed through one or more Rules. XACML defines several combining
algorithms for determining a single decision from the results of multiple rules. Figure 3-11 shows an
XACML policy that uses the permit-overrides combining policy in which any result of “permit” will
grant access. This policy shows that members with a group attribute of “developers” can perform the read
action on http://server.example.com/code/docs/guide.html.


                                                    3-25
