                                                                        GUIDELINES ON ACTIVE CONTENT AND MOBILE CODE



handling paper documents and can quickly adapt to using electronic facsimiles appearing within Web
pages, since they understand the basic operations. One drawback is that the document metaphor is
generally considered non-threatening and can lull the user into a false sense of security. Moreover,
strictly observing the document metaphor somewhat limits the way in which Web-based applications
function. In particular, non-textual content does not lend itself to paper document style handling. For
example, streaming or continuous delivery media, such as a live radio transmission or voice
communication, can transpire only as it occurs in real time.

Increasingly, Web sites are offering interfaces that move beyond the document metaphor towards general-
purpose vehicles to provision electronic services. In particular, many Web sites are relying on user-
generated content, including social networking, photo and video sharing, bookmarking, and knowledge-
sharing. These sites are becoming increasingly popular, with many organizations deploying one or more
knowledge-sharing Web site sites for internal or external users. In August 2007, a video sharing site was
the fourth most visited page on the Web, while social networking sites were the sixth, seventh, eighth, and
ninth most visited. 3 These Web sites are more interactive than previous Web pages, allowing users—both
legitimate and malicious—to modify or add to existing content. This situation imparts more challenges to
organizations that must secure their computer systems against potential threats associated with user-
generated content (see Section 3 for more information about threats). Where historically the flow of
information on the Web was from Web sites to the user, the advent of user-generated content allows
information to flow freely in both directions—making it more difficult for organizations to control what
information leaves or enters networked systems.

A wide variety of active content implementations are available for Web sites to deploy, including PDF,
JavaScript, Java, ActiveX, and other technologies which are discussed in Section 4. Each active content
implementation may require a different interpreter on a user’s computer (i.e., installed as a browser
component), further complicating the security configuration for organizations. Because each interpreter
may be supplied by a different manufacturer, users have the responsibility to track the installed browser
components and update them whenever a vulnerability is discovered. The lack of a centralized
configuration management system may lead to vulnerable unpatched systems. Similarly, new versions of
active content implementations may alter how the interpreter presents active content. It is not uncommon
for patches to active content components to be incompatible with the active content generated by an
organization’s Web sites, requiring organizations to choose from one of two potentially costly
alternatives: continue using incompatible and possibly vulnerable browser components, or update the
Web site.

While active content introduces a number of security risks into organizations’ computer systems, it is
often impractical for security policies to prohibit the use of active content. Many commercial off-the-
shelf (COTS) Web applications rely on active content—and many legitimate external Web sites, from
news aggregators to online banking and research databases, also use it. As such, many organizations
choose to examine and mitigate the risks associated with active content rather than simply disallowing
active content.




3
    The Top Sites in English from Alexa is available at http://www.alexa.com/site/ds/top_sites?ts_mode=lang&lang=en.


                                                           2-2
