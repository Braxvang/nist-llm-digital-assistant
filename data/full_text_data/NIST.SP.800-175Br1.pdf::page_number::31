                                                                                                NIST SP 800-175B REV. 1                                GUIDELINE FOR USING CRYPTO STANDARDS IN THE
                                                                                                                                                                    FED. GOV'T.: CRYPTO MECHANISMS

                                                                                                encrypt data (i.e., apply protection) is also used to decrypt the encrypted data (i.e., remove
                                                                                                the protection). In the case of encryption, the original data is called the plaintext, while the
                                                                                                encrypted form of the data is called the ciphertext. The key must be kept secret if the data
                                                                                                is to remain protected.
                                                                                                Several classes of symmetric-key algorithms have been approved: those based on block
                                                                                                cipher algorithms (e.g., AES) and those based on the use of hash functions (e.g., a keyed-
                                                                                                hash message authentication code based on SHA-1).
                                                                                                Symmetric-key algorithms are used for
                                                                                                     •   Encryption to provide data confidentiality (see Section 4.1),
This publication is available free of charge from: https://doi.org/10.6028/NIST.SP.800-175Br1




                                                                                                     •   Authentication to provide assurance of data integrity and the source of the data
                                                                                                         (see Section 4.2),
                                                                                                     •   Key derivation (see Section 5.3.2),
                                                                                                     •   Key wrapping (see Section 5.3.5), and
                                                                                                     •   Random bit generation (see Section 4.4).
                                                                                                When using a symmetric-key algorithm, a unique key needs to be generated for each
                                                                                                cryptographic relationship 43 and for each purpose (e.g., encryption, data integrity
                                                                                                authentication, and key wrapping). Technically, the same key can be used for multiple
                                                                                                purposes when the same algorithm is used, but this is usually ill-advised, as the use of the
                                                                                                same key for two different cryptographic processes (e.g., HMAC and key derivation using
                                                                                                the same hash function) may weaken the security provided by one or both of the processes.
                                                                                                However, exceptions to this rule have been approved (see Section 4.3).
                                                                                                As an example of the number of keys required for the use of symmetric-key algorithms,
                                                                                                suppose that there are four entities (A, B, C, and D) that need to communicate using
                                                                                                encryption, with each pair of entities using a different encryption key. There are six
                                                                                                possible pair-wise relationships (A-B, A-C, A-D, B-C, B-D, and C-D), so at least six keys
                                                                                                are required. 44 If, instead, there are 1,000 entities that wish to communicate with each
                                                                                                other, there are 499,500 possible pair-wise relationships, and at least one unique key would
                                                                                                be required for each relationship. If more than one algorithm, key length, or purpose is to
                                                                                                be supported (e.g., both encryption and key wrapping), then additional keys will be needed.
                                                                                                Each entity must keep all its symmetric keys secret and protect their integrity. The need for
                                                                                                a large number of keying relationships is a significant problem; methods for mitigating this
                                                                                                problem are discussed in Section 5.
                                                                                                Several symmetric-key algorithms have been approved by NIST for the protection of
                                                                                                sensitive data. However, some of these algorithms are no longer approved for applying
                                                                                                cryptographic protection (e.g., encryption) but may continue to be used for processing
                                                                                                already-protected information (e.g., decryption), provided that the risk of doing so is

                                                                                                43
                                                                                                   A cryptographic relationship exists when two or more parties can communicate using the same key and
                                                                                                   algorithm. A relationship may be one-to-one or one-to-many (e.g., broadcast).
                                                                                                44
                                                                                                   Although only six cryptographic relationships are used in the example, different keys may be required by
                                                                                                   some protocols for each communication direction (i.e., a different key may be required for communications
                                                                                                   sent from A to B than is used for communications sent from B to A).


                                                                                                                                                    23
