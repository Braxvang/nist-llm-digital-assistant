                                                                                             NIST SP 800-192                                                       VERIFICATION & TEST METHODS FOR
                                                                                                                                                                   ACCESS CONTROL POLICIES/MODELS

                                                                                             atomic propositional logic formulas, plus temporal connectives. The propositional logic formulas
                                                                                             are expressions about the state of the system. The temporal connectives are expressions about paths
                                                                                             into the future that the state of the system can follow [NuSMV]. And the model checker constructs
                                                                                             and prints a counterexample, i.e. a trace of the FSM that falsifies the property.

                                                                                             CTL is a branching-time logic that takes into account the non-deterministic, branching evolution
                                                                                             of a FSM. More precisely, the evolution of a FSM such that from a given state the evolution of
                                                                                             FSM can be described as an infinite tree, where the nodes are the states and the branching
                                                                                             represents the non-determinism transitions of the states. The paths in the tree from one state to the
                                                                                             others are the possible evolutions of the FSM from that state. In CTL, one can express properties
                                                                                             that should hold for all the paths that start in a state, as well as for properties that should hold just
                                                                                             for some of the paths.
This publication is available free of charge from: https://doi.org/10.6028/NIST.SP.800-192




                                                                                             LTL shares a significant intersection that includes most of the common properties used in CTL; it
                                                                                             characterizes each linear path induced by the FSM (linear-time approach). The main difference
                                                                                             between LTL and CTL formulas is the absence of existential and universal operators, thus LTL
                                                                                             temporal operators do not have path quantifiers. In fact, LTL formulas are evaluated on linear
                                                                                             paths, and a formula is considered true in a given state if it is true for all the paths starting in that
                                                                                             state, which reflect the linear-time paradigm. LTL properties can also include past temporal
                                                                                             operators.

                                                                                             CTL and LTL operators can be nested in an arbitrary way and can be combined using logic
                                                                                             operators. Typical examples of CTL formulas are AG !p (“condition p is absent in all the
                                                                                             evolutions”), AGEF p (“it is always possible to reach a state where p holds”), and AG (p → AF q)
                                                                                             (“each occurrence of condition p is followed by an occurrence of condition q”). And typical
                                                                                             example of LTL is G p, stating that condition p holds in all future time instants, and F p, stating
                                                                                             that condition p holds in one of the future time instants.

                                                                                             A model checker can also find a counterexample of increasing length, and immediately stops when
                                                                                             it succeeds, declaring that the formula is false. The maximum number of iterations can be assigned
                                                                                             such that if the maximum number of iterations is reached and no counterexample is found, then
                                                                                             the checking is terminated without conclusion that the formula is true, except that any
                                                                                             counterexample should be longer than the maximum length.

                                                                                             In general, Bounded Model Checking (BMC) can find two kinds of counterexamples, depending
                                                                                             on the property being analyzed. For safety requirements with the bounded number of transitions,
                                                                                             a counterexample is a finite sequence of transitions through different states. For liveness
                                                                                             properties, counterexamples are infinite but periodic sequences, and can be represented in a
                                                                                             bounded setting as a finite prefix followed by a loop, i.e. a finite sequence of states ending with a
                                                                                             loop back to some previous state. So, a counterexample demonstrates the falsity that a safety
                                                                                             requirement cannot be a finite sequence of transitions.




                                                                                                                                                24
