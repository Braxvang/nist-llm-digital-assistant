                                                                                             NIST SP 800-185                                               SHA-3 DERIVED FUNCTIONS: CSHAKE,
                                                                                                                                                          KMAC, TUPLEHASH, AND PARALLELHASH

                                                                                             2. z = left_encode(B).
                                                                                             3. for i = 0 to n−1:
                                                                                                    z = z || cSHAKE128(substring(X, i*B*8, (i+1)*B*8), 256, "", "").
                                                                                             4. z = z || right_encode(n) || right_encode(L).
                                                                                             5. newX = z.
                                                                                             6. return cSHAKE128(newX, L, “ParallelHash”, S).

                                                                                             ParallelHash256(X, B, L, S):
                                                                                             Validity Conditions: 0 < B < 22040 and ⌈ len(X)/B ⌉ < 22040 and
                                                                                                                  0 ≤ L < 22040 and len(S) < 22040

                                                                                             1. n = ⌈ (len(X)/8) / B ⌉.
This publication is available free of charge from: https://doi.org/10.6028/NIST.SP.800-185




                                                                                             2. z = left_encode(B).
                                                                                             3. for i = 0 to n−1:
                                                                                                    z = z || cSHAKE256(substring(X, i*B*8, (i+1)*B*8), 512, "", "").
                                                                                             4. z = z || right_encode(n) || right_encode(L).
                                                                                             5. newX = z.
                                                                                             6. return cSHAKE256(newX, L, “ParallelHash”, S).

                                                                                             6.3.1   ParallelHash with Arbitrary-Length Output

                                                                                             Some applications of ParallelHash may not know the number of output bits they will need until
                                                                                             after the outputs begin to be produced. For these applications, ParallelHash can also be used as a
                                                                                             XOF (i.e., the output can be extended to any desired length), which mimics the behavior of
                                                                                             cSHAKE.

                                                                                             When used as a XOF, ParallelHash is computed by setting the encoded output length to 0, as
                                                                                             shown in right_encode(0) in Step 1 of the ParallelHashXOF128(X, B, L, S) and
                                                                                             ParallelHashXOF256(X, B, L, S) pseudocodes below. Conceptually, ParallelHash in XOF mode
                                                                                             produces an infinite-length output string, and the caller simply uses as many bits of the output
                                                                                             string as are needed. Truncated outputs of ParallelHash in XOF mode can be computed by the
                                                                                             function ParallelHashXOF128(X, B, L, S) or ParallelHashXOF256(X, B, L, S) given by the
                                                                                             following pseudocode:

                                                                                             ParallelHashXOF128(X, B, L, S):
                                                                                             Validity Conditions: 0 < B < 22040 and ⌈ len(X)/B ⌉ < 22040 and
                                                                                                                  0 ≤ L and len(S) < 22040

                                                                                             1. n = ⌈ (len(X)/8) / B ⌉.
                                                                                             2. z = left_encode(B).
                                                                                             3. for i = 0 to n−1:
                                                                                                    z = z || cSHAKE128(substring(X, i*B*8, (i+1)*B*8), 256, "", "").
                                                                                             4. z = z || right_encode(n) || right_encode(0).
                                                                                             5. newX = z.
                                                                                             6. return cSHAKE128(newX, L, “ParallelHash”, S).

                                                                                             ParallelHashXOF256(X, B, L, S):

                                                                                                                                            15
