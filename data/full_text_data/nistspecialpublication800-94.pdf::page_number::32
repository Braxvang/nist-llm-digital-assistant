GUIDE TO INTRUSION DETECTION AND PREVENTION SYSTEMS (IDPS)



      organization’s IDPS configuration or problems could inadvertently reveal sensitive information about
      the organization’s security infrastructure, systems, and networks.
3.4     Summary

The typical components in an IDPS solution are sensors or agents, management servers, database servers,
and consoles. Sensors and agents monitor and analyze activity; sensors are used to monitor networks and
agents to monitor hosts. Management servers receive information from sensors or agents and manage
them. Database servers are repositories for event information recorded by the sensors or agents and
management servers. Consoles are programs that provide interfaces for IDPS users and administrators.
These components can be connected to each other through an organization’s standard networks or through
a separate network strictly designed for security software management known as a management network.
A management network helps to protect the IDPS from attack and to ensure it has adequate bandwidth
under adverse conditions. A virtual management network can be created using a virtual local area
network (VLAN); this provides protection for IDPS communications, but not as much protection as a
management network would provide.

Most IDPSs can provide a wide variety of security capabilities. Some products offer information
gathering capabilities, such as collecting information on hosts or networks from observed activity. IDPSs
also typically perform extensive logging of data related to detected events. This data can be used to
confirm the validity of alerts, investigate incidents, and correlate events between the IDPS and other
logging sources. Generally, logs should be stored both locally and centrally to support the integrity and
availability of the data.

IDPSs typically offer extensive, broad detection capabilities. The types of events detected and the typical
accuracy of detection vary greatly depending on the type of IDPS technology. Most IDPSs require at
least some tuning and customization to improve their detection accuracy, usability, and effectiveness.
Typically, the more powerful a product’s tuning and customization capabilities are, the more its detection
accuracy can be improved from the default configuration. Examples of these capabilities are thresholds,
blacklists and whitelists, alert settings, and code editing. Organizations should carefully consider the
tuning and customization capabilities of IDPSs when evaluating products. Administrators should review
tuning and customizations periodically to ensure that they are still accurate. Administrators should also
ensure that any products collecting baselines for anomaly-based detection have those baselines rebuilt
periodically as needed to support accurate detection.

Most IDPSs offer multiple prevention capabilities; the specific capabilities vary by IDPS technology type.
IDPSs usually allow administrators to specify the prevention capability configuration for each type of
alert. This includes enabling or disabling prevention, as well as specifying which type of prevention
capability should be used.

Once an IDPS product has been selected, the administrators need to design an architecture, perform IDPS
component testing, and deploy and secure the IDPS components. There are many architectural
considerations, including component placement, solution reliability, interoperability with other systems,
management network architecture, and necessary changes to other security controls. Before performing a
production implementation, organizations should consider implementing the components in a test
environment first to reduce the likelihood of implementation problems disrupting production. When the
components are being deployed to production networks, organizations should initially activate only a few
IDPS sensors or agents. Because a new deployment is likely to generate a large number of false positives
until fully tuned and customized, activating many sensors or agents at once might overwhelm the
management servers and consoles, making it difficult for administrators to perform tuning and
customization.



                                                   3-10
