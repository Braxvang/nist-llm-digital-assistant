                                                                                  GUIDE TO SECURE WEB SERVICES



A.1.5     Registry Disclosure Attacks

Attackers can use misconfigured registries (LDAP, X.500, etc.) to obtain information about the Web
service being attacked. In particular, these registries can contain authentication information that an
attacker may be able to use. Attackers can also use UDDI and ebXML registries to obtain information
about the Web service being attacked. Important points of information disclosure are the WSDL
descriptions in the UDDI or ebXML registry, and the registry’s audit logs. Further, these registries can be
compromised or corrupted, which may allow an attacker to gain information about the Web service’s host
or even gain access to that host.

A.2 Privilege Escalation Attacks

The objective of privilege escalation attempts is to enable the attacker to change the privilege level of a
process, thereby taking control of that now-compromised process to bypass security controls that would
otherwise limit the attacker’s access to the Web service’s functionality, data, resources, and environment.
Web services are often configured to run with specific group or user permissions unrelated to those of the
end user (human or requester service) responsible for causing the service’s execution (e.g., “anonymous”
or “nobody” permissions). Such Web services, if they also suffer from buffer overflows or race
conditions, can be used to increase the permissions grabbed by the attacker, or to escalate the attacker’s
ability to cause damage to the Web service, its data, resources, or environment.

Attackers can perform privilege escalation by taking advantage of defects in the implementation, design,
or configuration of Web services. Any standard developed to prevent privilege escalation attempts would
remain susceptible to implementation, design, or configuration defects.

A.2.1     Dictionary Attack

Many systems have weak password protection and Web service interfaces are no different. Unlike Web
portals, XML Web service interfaces are heterogeneous in nature with each system having its own
authentication system and methods for deterring undesired behavior. Dictionary attacks are common
where an attacker may either manually or programmatically attempt common passwords to gain entry into
a system or multiple systems. Administrators should ensure that passwords are difficult to guess and are
changed often. Unlike standard user credentials, application credentials are determined by the
administrator. Password strengthening rules that are desirable for users should also apply to
administrators of Web service interfaces.

A.2.2     Format String Attacks

Format string vulnerabilities are caused by programmer errors. For example, a C programmer may mean
to type:

    printf(buf, “%s”, str);

but instead types:

    printf(buf, str);

When the C code is compiled, it executes exactly as the programmer expected. Because the programmer
left out the format string (“%s”), printf will interpret the string str to be the format string. This defect can
be exploited by the attacker to compromise the program.




                                                      A-2
