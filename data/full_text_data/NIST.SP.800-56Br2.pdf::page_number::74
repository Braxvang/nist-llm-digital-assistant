                                                                                               NIST SP 800-56B REV. 2                             RECOMMENDATION FOR PAIR-WISE KEY ESTABLISHMENT
                                                                                                                                                       USING INTEGER FACTORIZATION CRYPTOGRAPHY


                                                                                               7.2.1.2 RSASVE Generate Operation (RSASVE.GENERATE)
                                                                                               RSASVE.GENERATE generates a secret value and corresponding ciphertext using an RSA public
                                                                                               key.
                                                                                               Function call: RSASVE.GENERATE((n, e))
                                                                                               Input:
                                                                                                        (n, e): an RSA public key.
                                                                                               Assumptions: The RSA public key is valid.
                                                                                               Process:
This publication is available free of charge from: https://doi.org/10.6028/NIST.SP.800-56Br2




                                                                                                   1. Compute the value of nLen = len(n)/8 , the byte length of the modulus n.
                                                                                                   2. Generation:
                                                                                                           a. Using the RBG (see Section 5.3), generate Z, a byte string of nLen bytes.
                                                                                                           b. Convert Z to an integer z (See Appendix B.2):
                                                                                                                                        z = BS2I(Z, nLen).
                                                                                                           c. If z does not satisfy 1 < z < (n – 1), then go to step 2a.
                                                                                                   3. RSA encryption:
                                                                                                           a. Apply the RSAEP encryption primitive (see Section 7.1.1) to the integer z using the
                                                                                                              public key (n, e) to produce an integer ciphertext c:
                                                                                                                                       c = RSAEP((n, e), z).


                                                                                                           b. Convert the ciphertext c to a ciphertext byte string C of nLen bytes (see Appendix
                                                                                                              B.1):
                                                                                                                                        C = I2BS(c, nLen).
                                                                                                   4. Output the string Z as the secret value, and the ciphertext C.
                                                                                               Output:
                                                                                                  Z: the secret value to be shared (a byte string of nLen bytes), and C: the ciphertext (a byte string
                                                                                                     of nLen bytes).
                                                                                               A routine that implements this operation shall destroy any locally stored portions of Z and z, as
                                                                                               well as any other potentially sensitive locally stored values used or produced during the execution
                                                                                               of the routine. The destruction of these values shall occur prior to or during any exit from the
                                                                                               routine (whether exiting early because of an error or exiting normally with the output of Z and C).
                                                                                               Note that the requirement for destruction includes any locally stored portions of the secret value Z
                                                                                               included in the output.




                                                                                                                                                 64
