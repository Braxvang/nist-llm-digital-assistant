                                                          Practical Combinatorial Testing
 _______________________________________________________
7.2   Comparing Random and Combinatorial Coverage

The comparisons between random and combinatorial testing suggest a number of
conclusions:

•       For binary variables (v=2), random tests compare reasonably well with covering
arrays (96% to 99% coverage) for all three values (2, 3, and 4) of t for 15 or more
variables. Thus random testing for a SUT with all or mostly binary variables may compare
favorably with combinatorial testing.

•      Combination coverage provided by random generation of the equivalent number of
pairwise tests at (t = 2) decreases as the number of values per variable increases, and the
coverage provided by pairwise testing is significantly less than 100%. The effectiveness of
random testing relative to pairwise testing should be expected to decline as the average
number of values per variable increases.

•       For 4-way interactions, coverage provided by random test generation increases
with the number of variables. Combinatorial testing for a module with approximately 10
variables should be significantly more effective than random testing, while the difference
between the two test methods should be less for modules with 20 or more variables.

•       For 100% combination coverage, the efficiency advantage of combinatorial testing
varies directly with the number of values per variable and inversely with the interaction
strength t. Figure 25 illustrates how these factors (interaction strength t and values per
variable v) combine: the ratio of random/combinatorial coverage is highest for 10 variables
with t = 2, but declines for other pairings of t and v. To obtain 100% combination
coverage, random testing is significantly less efficient than combinatorial testing, requiring
2 to nearly 5 times as many tests as a covering array generated by ACTS. Thus if 100%
combination coverage is desired, combinatorial testing should be significantly less
expensive than random test generation.

    An important practical consideration in comparing combinatorial with random testing is
the efficiency of the covering array generator. Algorithms have a very wide range in the
size of covering arrays they produce. It is not uncommon for the better algorithms to
produce arrays that are 50% smaller than other algorithms. We have found in comparisons
with other tools that there is no uniformly “best” algorithm. Other algorithms may produce
smaller or larger combinatorial test suites, so the comparable random test suite will vary in
the number of combinations covered. Thus random testing may fare better in comparison
with combinatorial tests produced by one of the less efficient algorithms.


   However there is a less obvious but important tradeoff regarding covering array size. An
algorithm that produces a very compact array, i.e., with few tests, for t-way combinations
may include fewer (t+1)-way combinations because there are fewer tests. Table 13 and
Table 14 illustrate this phenomenon for an example. Table 9 shows the percentage of t+1
up to t+3 combination coverage provided by the ACTS tests and in Table 10 the equivalent


                                                                                                 37
