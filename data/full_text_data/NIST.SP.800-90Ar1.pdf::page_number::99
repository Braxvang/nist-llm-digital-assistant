NIST SP 800-90A Rev. 1                                            Recommendation for Random Number
                                                                   Generation Using Deterministic RBGs


reduction proof from the hash function’s collision resistance properties to the security of the
DRBG; the security of HMAC_DRBG ultimately relies on the pseudorandomness properties of
the underlying hash function. Note that the pseudorandomness of HMAC is a widely used
assumption in designs, and the HMAC_DRBG requires far less demanding properties of the
underlying hash function than Hash_DRBG.
Constraints on Outputs. As shown in Table 2 of Section 10.1, for each hash function, up to 248
generate requests may be made, each of up to 219 bits.
Resources. HMAC_DRBG requires access to a dedicated HMAC implementation for optimal
performance. However, a general-purpose hash function implementation can always be used to
implement HMAC. Any implementation requires the storage space required for the internal state
(see Section 10.1.2.1).
Algorithm Choices. The choice of hash functions that may be used by HMAC_DRBG is
discussed in Section 10.1.

C.3 CTR_DRBG

CTR_DRBG is based on using an approved block cipher algorithm in counter mode (see [SP
800-38A]). At the present time, only three-key TDEA and AES are approved for use by the
Federal government for use in this DRBG mechanism. Pseudorandom outputs are generated by
encrypting successive values of a counter; after a generate request, a new key and new starting
counter value are generated.
Performance. For large generate requests, CTR_DRBG produces outputs at the same speed as
the underlying block cipher algorithm encrypts data. Furthermore, CTR_DRBG is
parallelizable. At the end of each generate request, work equivalent to two, three or four
encryptions is performed, depending on the choice of underlying block cipher algorithm, to
generate new keys and counters for the next generate request.
Security. The security of CTR_DRBG is directly based on the security of the underlying block
cipher algorithm, in the sense that, as long as some limits on the total number of outputs are
observed, any attack on CTR_DRBG represents an attack on the underlying block cipher
algorithm.
Constraints on Outputs. As shown in Table 3 of Section 10.2.1, for each of the three AES key
sizes, up to 248 generate requests may be made, each of up to 219 bits, with a negligible chance of
any weakness that does not represent a weakness in AES. However, the smaller block size of
TDEA imposes more constraints: each generate request is limited to 213 bits, and at most, 232
such requests may be made.
The output constraints are necessary to avoid a distinguishing attack on the CTR_DRBG,
described in [Campagna], in which the fact that a single generate call can never produce a
duplicate block from the block cipher is used to build a distinguisher for the DRBG's
outputs. These output constraints apply to the use of CTR_DRBG for any single purpose,
regardless of how many times the DRBG is reseeded. However, the distinguishing attack is
theoretical − it poses no practical threat to any real-world application of the DRBG.




                                                90
