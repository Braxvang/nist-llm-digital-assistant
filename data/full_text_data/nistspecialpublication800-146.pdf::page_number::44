                                                             CLOUD COMPUTING SYNOPSIS AND RECOMMENDATIONS



has a current inventory of three applications deployed ("apps"). The cloud provider also maintains a set
of development tools ("dev tools" in the figure), and a set of execution environments ("exri" in the figure).
As with the case of a SaaS provider as previously described in Section 5, an execution environment might
be a physical computer, a virtual machine (discussed in Section 7), a running server program that can
service client requests, the ability to start a virtual machine, or even the ability to rent computing cycles
and storage from another organization. Figure 13.A also depicts two active applications, B→exr1 and
C→exr2 indicating that applications B and C are using separate execution resources (just as they would
in a SaaS environment).




                         Figure 13: PaaS Consumer/Provider Interaction Dynamics

In Figure 13.B, a new developer client accesses the development tools of the provider. The development
tools may include programming languages, compilers, interfaces, testing tools, and mechanisms to deploy
an application once it's finished.

Figure 13.C illustrates the developer's use of tools. The developer may download tools and use them
locally in the developer's infrastructure, or the developer may merely access tools in the provider's
infrastructure. In either case, the output of the developer's actions is a new application, D, as shown in the
figure, that is deployed into the provider's infrastructure.

In Figure 13.D, an administrator is shown configuring the new application that has been made available,
and a new client, C2, is shown using the new application.

Figure 13 provides a simplified view of how a PaaS cloud operates, however it illustrates key aspects of
PaaS clouds: PaaS clouds are platforms for which software may be developed, onto which software may
be deployed, and on which software may operate for its entire life cycle. There are many variations on
this basic scenario. For instance, a developer may modify an existing application instead of creating a



                                                     6-2
