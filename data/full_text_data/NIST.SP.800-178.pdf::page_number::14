                                                                                               NIST SP 800-178                                                     COMPARISON OF ABAC STANDARDS FOR
                                                                                                                                                                     DATA SERVICES: XACML AND NGAC


                                                                                               2     Background

                                                                                               Controlling and managing access to sensitive data has been an ongoing challenge for decades.
                                                                                               Attribute-based access control (ABAC) represents the latest milestone in the evolution of logical
                                                                                               access control methods. It provides an attribute-based approach to accommodate a wide breadth
                                                                                               of access control policies and simplify access control management.

                                                                                               Most other access control approaches are based on the identity of a user requesting performance
                                                                                               of an operation on a resource (e.g., read a file), with the capability enabled directly based on the
This publication is available free of charge from: http://dx.doi.org/10.6028/NIST.SP.800-178




                                                                                               user’s identity, or indirectly through predefined attribute types such as roles or groups assigned
                                                                                               to the user. Practitioners have noted that these forms of access control are often cumbersome to
                                                                                               set up and manage, given their need to associate capabilities directly to users or their attributes,
                                                                                               and the difficulty of doing so. Furthermore, the identity, group, and role qualifiers of a requesting
                                                                                               user are often insufficient for expressing real-world access control policies. An alternative is to
                                                                                               express policies in terms of attributes and to grant or deny user requests based on arbitrary
                                                                                               attributes of users and resources, and optionally environmental attributes. This approach to
                                                                                               access control is commonly referred to as attribute-based access control (ABAC) and is an
                                                                                               inherent feature of both XACML and NGAC.

                                                                                               The access control logic of an ABAC engine that computes decisions based on assigned
                                                                                               attributes of a requesting user, resource, and environment, and policies expressed in terms of
                                                                                               those attributes is depicted in Figure 1.




                                                                                                                                     Figure 1: ABAC Overview


                                                                                               There are two techniques for specifying ABAC policies [6]. The most common approach is to
                                                                                               define authorization policies by using logical formulas involving predicates expressed using
                                                                                               logical operations (e.g., AND, OR, ≥, ≠) on attribute values. For example, can_access (u, a, o) →

                                                                                                                                                2
