NIST SP 800-90A Rev. 1                                            Recommendation for Random Number
                                                                   Generation Using Deterministic RBGs


   b. The future internal state values themselves (Statex+1 and forward) cannot be predicted
      (with better than a 50-50 chance), given knowledge of Statex.
Prediction resistance is provided relative to time T if there is assurance that an adversary with
knowledge of the state of the RBG at some time(s) prior to T (but incapable of performing work
that matches the claimed security strength of the RBG) would be unable to distinguish between
observations of ideal random bitstrings and (previously unseen) bitstrings output by the RBG at
or subsequent to time T. In particular, an RBG whose design allows the adversary to step forward
from the initially compromised RBG state(s) to obtain knowledge of subsequent RBG states and
the corresponding outputs (including the RBG state and output at time T) would not provide
prediction resistance relative to time T.
Prediction resistance can be provided only by ensuring that a DRBG is effectively reseeded with
fresh entropy between producing output for consecutive DRBG requests. That is, an amount of
entropy that is sufficient to support the security strength of the DRBG being reseeded (i.e., an
amount that is at least equal to the security strength) must be provided to the DRBG in a way that
ensures that knowledge of the current DRBG internal state does not allow an adversary any
useful knowledge about future DRBG internal states or outputs. Prediction resistance can be
provided when the randomness source is or has direct or indirect access to an entropy source or
an NRBG (see Section 8.6.5).
For example, suppose that an adversary knows internal Statex-2 (see Figure 7). If the adversary
also knows the DRBG mechanism used, he then has enough information to compute Statex-1 and
Statex. If prediction is then requested for the next bits that are to be output from the DRBG, new
entropy bits will be inserted into the DRBG instantiation before Statex+1 is produced that will
create a separation between Statex and Statex+1, i.e., the adversary will not be able to compute
Statex+1, simply by knowing Statex; the work required will be greatly increased by the entropy
inserted during the prediction request.
The introduction of fresh entropy via reseeding will also make the DRBG less susceptible to
cryptanalytic attack. Whenever an entropy source is available, it is strongly recommended
that DRBGs be requested to provide prediction resistance as often as is practical.




                                                24
