GUIDE TO INTRUSION DETECTION AND PREVENTION SYSTEMS (IDPS)



9.4.1.4 Security

When evaluating IDPS products, organizations should consider the security requirements for the IDPS
solution itself. Evaluators should review the security controls listed in NIST SP 800-53, Recommended
Security Controls for Federal Information Systems and consider which controls should be included in the
IDPS security criteria. Examples of security considerations include the following:

 How stored data (including logs) and communications among all the IDPS components are protected,
  such as using alternate data channels or FIPS-approved encryption and digital signature algorithms to
  support data confidentiality and integrity when needed
 The authentication, access control, and auditing features performed for IDPS usage and
  administration
 The IDPSâ€™s resistance to attacks against it, such as blinding and DoS attacks.
9.4.2   Operation and Maintenance

This criterion focuses on requirements for the user and administrator interfaces for ongoing management
of the IDPS. This includes the ease of performing daily monitoring, analysis, and reporting activities;
managing and maintaining the IDPS; and applying updates. Possible specific criteria for each of these
areas is provided below. In addition, evaluators should consult with vendors, analysts, and/or trusted
peers to determine the level of technical and security expertise needed to use and maintain each product.
Evaluators should ask vendors what their assumptions are regarding the users and administrators of their
products.

9.4.2.1 Daily Use

Organizations should consider how the IDPS solution needs to be used on a daily basis for monitoring
security events, performing analysis of events of interest, and generating reports. Because these three
activities are often intertwined, it is often easiest to assess them together. Daily use considerations for
IDPSs should include the following:

 How it displays events and alerts to users, what features it provides to ease analysis (e.g., drill-down
  capability, links to supporting information, correlation of events from multiple sensors or agents,
  color-coding alerts to indicate their severity/priority), and how users can customize the views and
  filters to alter the display of events and alerts
 How it displays its status information to users and administrators (e.g., how a sensor failure is
  communicated)
 How it notifies users and administrators of both serious security events and IDPS failures and other
  operational problems
 How much supporting information it records for events (e.g., is enough information recorded to allow
  analysts to determine what happened?)
 How many interfaces/programs are needed for the daily use functions (e.g., can a single GUI provide
  all the functions that the IDPS users need?)
 How many concurrent interfaces are supported




                                                     9-10
