                                                                GUIDELINES ON ACTIVE CONTENT AND MOBILE CODE



The line between Web applications and locally installed applications has blurred over time to the point
where a number of Web application providers offer Web versions of common desktop productivity tools,
including word processors, spreadsheets, and calendars. In fact, a number of organizations are adopting
these Web-based applications in place of standalone applications [Bee07]. As such, these Web
applications may need to support the ability to store and process mobile code associated with office
documents (or any user-generated files), opening up Web applications to many of the risks discussed
earlier in this section.

4.2.1   Server Side Includes

Server Side Includes (SSI) is a limited server-side scripting language supported by most Web servers.
SSI provides a set of dynamic features, such as including the current time or the last modification date of
the HTML file, as an alternative to using a CGI program to perform the function. When the browser
requests a document with a special file type, such as .shtml, it triggers the server to treat the document as
a template, reading and parsing the entire document before sending the results back to the client (Web
browser). SSI commands are embedded within HTML comments (e.g., <!--#include file="standard.html"
-->). As the server reads the template file, it searches for HTML comments containing embedded SSI
commands. When it finds one, the server replaces that part of the original HTML text with the output of
the command. For example, the SSI command given above (i.e., #include file) replaces the entire SSI
comment with the contents of another HTML file. This allows the display of an organization logo or
other static information prepared in another file to occur in a uniform way across all organization Web
pages. A subset of the directives available allows the server to execute arbitrary system commands and
CGI scripts, which may produce unwanted results. SSI is susceptible to command injection attacks,
which involve an attacker providing malicious code that is processed and executed by the Web server.
This allows the attacker to run arbitrary system commands using the privileges of the Web server.

4.2.2   Java Enterprise Edition (EE)

Java Enterprise Edition (EE) is based on Java technology and provides a comprehensive means to develop
applications on the server based largely on modular components. A type of server-side applet called a
servlet is used to provide dynamic content. The Web server first determines whether the browser’s
request requires a static HTML page or dynamically generated information from a servlet or a Java Server
Page (JSP). If a servlet is required, the Web server locates or instantiates a servlet object corresponding
to the request, then invokes it to obtain the needed results. If a JSP is required, Java EE compiles the JSP
into a servlet, then instantiates and invokes the servlet to obtain a response. If a static HTML page is
requested, the HTML content is returned as with a traditional Web server.

The Java EE server typically populates itself with the servlet objects that remain inactive until invoked.
This results in little or no startup overhead when processing servlet objects. Java EE can also run
separately from a standalone Web server, allowing one host to handle the brunt of HTTP traffic while
another handles the servlets. By relying on Java portability and observing a common API, servlet objects
can run in nearly any server environment. Servlets allow developers to take advantage of an object-
oriented environment on the Web server, which is flexible and extendible. Moreover, untrusted servlet
objects can be executed in a secure area via the Java security manager, with the dynamically generated
information being passed from the secure area into the remaining server environment.

4.2.3   ASP.NET

Microsoft’s Active Server Pages (ASP).NET is a server-side scripting technology from Microsoft that can
be used to create dynamic and interactive Web applications. An ASP page is essentially a template that
contains server-side scripts which are executed when a browser requests a .asp resource from the Web


                                                    4-9
