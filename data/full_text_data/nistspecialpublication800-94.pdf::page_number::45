                                                 GUIDE TO INTRUSION DETECTION AND PREVENTION SYSTEMS (IDPS)



Even worse, sensors have to monitor activity for many different combinations of servers and clients. For
example, an organization could use 10 different types and versions of Web servers, which users could
access with 50 different types and versions of Web browsers. Each combination of browser and server
could have unique communication characteristics (e.g., sequence of commands, response codes) that
could impact the accuracy of analysis. Also, different configurations and customizations could be applied
to the browsers and servers. Security controls between the servers and clients that alter network activity,
such as firewalls and proxy servers, could cause additional difficulties for sensors.

Ideally, network-based IDPSs would be able to interpret all network activity just as the endpoints do. For
example, different types of Web servers can interpret the same Web request in different ways. Stateful
protocol analysis techniques often attempt to do this by replicating the processing performed by common
types of clients and servers. This allows the sensors to improve their detection accuracy slightly. Many
attackers employ client and server-specific processing characteristics, such as handling character
encodings, in their attacks as evasion techniques. Organizations should use network-based IDPSs that can
compensate for the use of common evasion techniques.

4.3.3.3 Tuning and Customization

As mentioned in Section 4.3.3.2, network-based IDPSs usually require extensive tuning and
customization to improve their detection accuracy. Examples of tuning and customization capabilities are
thresholds for port scans and application authentication attempts, blacklists and whitelists for host IP
addresses and usernames, and alert settings. Some products also provide code editing features, which is
usually limited to signatures but in some cases may allow access to additional code, such as programs
used to perform stateful protocol analysis.

Some network-based IDPSs can use information regarding the organization’s hosts to improve detection
accuracy. For example, an IDPS might allow administrators to specify the IP addresses used by the
organization’s Web servers, mail servers, and other common types of hosts, and also specify the types of
services provided by each host (e.g., the Web server application type and version run by each Web
server). This allows the IDPS to better prioritize alerts; for example, an alert for an Apache attack
directed at an Apache Web server would have a higher priority than the same attack directed at a different
type of Web server. Some network-based IDPSs can also import the results of vulnerability scans and use
them to determine which attacks would likely be successful if not blocked. This allows the IDPS to make
better decisions on prevention actions and prioritize alerts more accurately.

4.3.3.4 Technology Limitations

Although network-based IDPSs offer extensive detection capabilities, they do have some significant
limitations. Three of the most important are analyzing encrypted network traffic, handling high traffic
loads, and withstanding attacks against the IDPSs themselves. These limitations are discussed below.

Network-based IDPSs cannot detect attacks within encrypted network traffic, including virtual private
network (VPN) connections, HTTP over SSL (HTTPS), and SSH sessions. As previously mentioned,
some network-based IDPSs can do some analysis of the setup of encrypted connections, which can
identify that the client or server software has known vulnerabilities or is misconfigured. To ensure that
sufficient analysis is performed on payloads within encrypted network traffic, organizations should use
IDPSs that can analyze the payloads before they are encrypted or after they are decrypted. Examples
include placing network-based IDPS sensors to monitor unencrypted traffic (e.g., traffic that entered an
organization through a VPN gateway and has since been decrypted) and using host-based IDPS software
to monitor activity within the source or destination host.




                                                   4-11
