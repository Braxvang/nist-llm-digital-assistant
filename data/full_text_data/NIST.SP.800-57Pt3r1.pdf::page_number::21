    Table 2-2: Digital Signature Recommendations for CAs and OCSP Responders
                 Public Key Algorithms                                              Padding
                                                      Hash Algorithms
                     and Key Sizes                                                  Scheme
                                                                                PKCS #1 v1.5,
                 RSA (2048 or 3072 bits)                   SHA-256
                                                                                   PSS
                 ECDSA (Curve P-256)                       SHA-256                    N/A
                 ECDSA (Curve P-384)                       SHA-384                    N/A

User certificates containing RSA or Diffie-Hellman public keys should be signed using
the RSA signature algorithm. User certificates containing elliptic curve public keys
should be signed using ECDSA.

Not all combinations of algorithms and key sizes are appropriate for the protection of
Federal Government information. To enhance interoperability, users should obtain
authentication, signature, and key establishment certificates with complementary
algorithms for all public keys.9 For most users, signature and key establishment keys
should provide the same cryptographic strength. Table 2-3 below shows preferred
combinations for user keys.

While symmetric key cryptography is not strictly required, block ciphers are used in
practically all PKI implementations and PKI-enabled applications. All components using
block ciphers shall support the AES-128 algorithm. To support legacy implementations,
components that process RSA keys should support three-key Triple-DEA [SP 800-67].
Components that support P-384 elliptic curve keys and the SHA-384 algorithm shall
support AES-256.
                       Table 2-3: Recommended Combinations for the
                         Recommended Algorithms and Key Sizes
     Authentication Key Type                Signature Key                Key Establishment Key
          RSA 2048                         RSA 2048                         RSA 2048
          RSA 2048                         RSA 2048                         Diffie-Hellman 2048
          ECDSA P-256                      ECDSA P-256                      ECDH P-256
          ECDSA P-256                      ECDSA P-384                      ECDH P-384
          ECDSA P-384                      ECDSA P-384                      ECDH P-384


9
  In general, protocols and applications are designed to use cryptographic algorithms from one
mathematical family. For example, applications that encounter certificates with ECDSA digital signatures
would expect to use elliptic curve Diffie-Hellman for key establishment services. Users that obtain an
ECDSA certificate (i.e., a certificate containing an ECDSA public key to be used for verifying digital
signatures), and an RSA key establishment certificate (i.e., a certificate containing an RSA public key to be
used for key establishment), for example, may find they cannot use the keys together in a single
application. Other combinations of certificates are commonly used (see Table 2-3). It is advisable that
users obtain authentication, signature, and key establishment certificates that are complementary to ensure
that the keys can be used together in applications and protocols.

                                                     13
