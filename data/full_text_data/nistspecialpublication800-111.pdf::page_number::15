                                                       GUIDE TO STORAGE ENCRYPTION TECHNOLOGIES FOR END USER DEVICES



3.       Storage Encryption Technologies

There are many technologies available for encrypting data stored on end user devices. This section
describes the most commonly used technologies, discusses the protections provided by each type, and
explains how these technologies are typically managed.

3.1      Common Types of Storage Encryption Technologies

This section provides a high-level overview of the most commonly used options for encrypting stored
information: full disk encryption, volume and virtual disk encryption, and file/folder encryption. 13 It
briefly defines each option and explains at a high level how it works.

3.1.1      Full Disk Encryption

Full disk encryption (FDE), also known as whole disk encryption, is the process of encrypting all the data
on the hard drive used to boot a computer, including the computer’s OS, and permitting access to the data
only after successful authentication to the FDE product. Most FDE products are software-based, so this
section focuses on explaining the capabilities and characteristics of software-based FDE solutions.
Hardware-based solutions are discussed briefly at the end of this section.

FDE software works by redirecting a computer’s master boot record (MBR), which is a reserved sector on
bootable media that determines which software (e.g., OS, utility) will be executed when the computer
boots from the media. Before FDE software is installed onto a computer, the MBR usually points to the
computer’s primary OS. When FDE software is being used, the computer’s MBR is redirected to a
special pre-boot environment (PBE) that controls access to the computer. 14 This redirection is depicted in
Figure 3-1. The PBE prompts the user to authenticate successfully, such as entering a user ID and
password, before decrypting and booting the OS. This is known as pre-boot authentication (PBA). 15
Most FDE products support the use of both network-based authentication (e.g., Active Directory, PKI)
and local authentication sources (e.g., locally stored, locally cached from network source) for PBA.

Once successful PBA occurs, the FDE software decrypts the boot sector for the OS, as depicted by the
second arrow in Figure 3-1, and the boot loader in the boot sector starts to load the OS. As it loads, the
FDE software decrypts the OS files (which are stored in the system volume) as needed, indicated in
Figure 3-1 by the third arrow. Once the OS has finished booting, the user provides OS authentication and
uses the computer normally. When the user needs to open encrypted files, save new files, or perform
other operations involving the hard drive, the FDE software transparently decrypts and encrypts the
necessary sectors 16 of the hard drive as needed. 17 This may marginally increase the time needed to open
or save files, but the delay generally should only be noticeable for particularly large files. On an FDE-
protected computer, users will typically notice a delay of at least a few seconds when booting the

13
      Information stored on end user devices can be encrypted in many ways. For example, an application that accesses sensitive
      information could be responsible for encrypting that information. Applications such as backup programs might also offer
      encryption options. Another method for protecting files is digital rights management (DRM) software.
14
      Some FDE implementations verify the integrity of the boot components, including the MBR, before proceeding. Figure 3-1
      depicts the PBE as being stored in the space between the MBR and the boot sector; although many software-based FDE
      products store the PBE there, this is not required, and some products store the PBE elsewhere.
15
      Most software-based FDE products use PBA. Other products require the user to authenticate after the OS has booted, which
      provides weaker protection than PBA. This publication assumes that FDE implementations are configured to require PBA.
      PBA can be performed with stronger authenticators than user ID and password; see Section 4.2 for additional information.
16
      A sector is the smallest logical component of a hard drive that can be read or written. Many hard drives have 512-byte
      sectors. Even if a single byte of data needs to be accessed, the hard drive will read the entire sector containing that data.
17
      Figure 3-1 does not show data volumes and other volumes that might be on a hard drive; such volumes would also be
      encrypted by an FDE solution.


                                                                3-1
