NIST SP 800-125A REV. 1                                                      SECURITY RECOMMENDATIONS FOR
                                                                         SERVER-BASED HYPERVISOR PLATFORMS

2. APPROACH FOR DEVELOPING SECURITY RECOMMENDATIONS
 2.  APPROACH FOR DEVELOPING SECURITY RECOMMENDATIONS
Developing security recommendations for the deployment and use of a complex software such as the
hypervisor requires knowledge of potential threats that, when exploited, would affect the three basic
security properties of confidentiality, integrity, and availability of hypervisor functions. The approach
adopted for developing security recommendations for deployment of hypervisor in this document is as follows:

•   Ensure the integrity of all components of the hypervisor platform, starting from the host Basic Input Output
    System (BIOS) to all software modules of the hypervisor. This is accomplished through a secure boot process
    outlined as recommendation HY-SR1 in section 3.
•   Identify the threat sources in a typical hypervisor platform. The nature of threats from rogue or
    compromised VMs are briefly discussed (Section 2.1).
•   For each of the five baseline functions HY-BF1 through HY-BF5 (with the exception of HY-BF3, the
    execution of privileged operations by the hypervisor), identify the different tasks under each function, and
    for each of the tasks, identify the potential threats to the secure execution of the task. The counter measures
    that will provide assurance against exploitation of these threats form the basis for security
    recommendations (Section 2.2).

It must be noted that in some cases of large open-source and commercial software environments (e.g., Database
Management System (DBMS) platform), the approach adopted for secure deployment and usage is to
study the reports published in the public vulnerability databases for various product offerings, seek out
available patches through online public forums or the software vendor, and look for recommended secure
configuration settings (also via online public forums or the software vendor websites). We do not adopt this
approach in this document since the intended purpose is not to provide security recommendations for a specific
open source or commercial hypervisor product offering but rather for the entire product class based on its
baseline functions.

2.1 Hypervisor Platform Threat Sources

The hypervisor software is resident on a physical host that is connected to the enterprise network. It has the
capability to be remotely administered. At the same time, it supports multiple virtual hosts (virtual machines
or VMs) that are generally nodes of a software-defined virtual network inside that physical host. In some cases,
they could be nodes of an isolated network or sharing the host network. Based on this scenario, one can identify
three basic sources of threats to a hypervisor platform, each of which is identified by using the symbol HY-TS#:

•   HY-TS1: Threats from and through the ent er pr i se network in which the hypervisor host (virtualized
    host) resides
•   HY-TS2: Threats emanating from rogue or compromised VMs through channels such as shared hypervisor
    memory and virtual network inside the hypervisor host
•   HY-TS3: Threats from web interfaces to VM management daemon and hypervisor management consoles

Threats from sources HY-TS1 and HY-TS3 are common to all server class software and are well known and
addressed in other NIST documents. Threats from source HY-TS2 is unique to the virtualization environment
defined by the hypervisor. We look at the nature of threats from HY-TS2 in the next subsection.

The hypervisor controls VM access to physical hardware resources as well as provides isolation among VMs.
VM access to hardware resources such as CPU and memory are directly controlled by the hypervisor while
access to resources such as network and storage devices are controlled through modules (drivers) that reside
in the kernel module or in a privileged VM (i.e., Management VM). The network isolation among VMs is
provided by assigning a unique Internet Protocol (IP) or Media Access Control (MAC) address to each VM,
defining virtual local area networks (VLANs) or overlay networks, and assigning the appropriate network
                                                        5
