                                                        TECHNICAL GUIDE TO INFORMATION SECURITY TESTING AND ASSESSMENT



Appendix C—Application Security Testing and Examination

Application security testing and examination help an organization determine whether its custom
application software—for example, Web applications—contains vulnerabilities that can be exploited, and
whether the software behaves and interacts securely with its users, other applications (such as databases),
and its execution environment. Application security can be assessed in a number of ways, ranging from
source code review to penetration testing of the implemented application. 43 Many application security
tests subject the application to known attack patterns typical for that application’s type. These patterns
may directly target the application itself, or may attempt to attack indirectly by targeting the execution
environment or security infrastructure. Examples of attack patterns are information leakage (e.g.,
reconnaissance, exposure of sensitive information), authentication exploits, session management exploits,
subversion (e.g., spoofing, impersonation, command injections), and denial of service attacks.

Application security assessment should be integrated into the software development life cycle of the
application to ensure that it is performed throughout the life cycle. For example, code reviews can be
performed as code is being implemented, rather than waiting until the entire application is ready for
testing. Tests should also be performed periodically once an application has gone into production; when
significant patches, updates, or other modifications are made; or when significant changes occur in the
threat environment where the application operates.

Many application security testing and examination techniques are available. They can be divided into
white box techniques, which involve direct analysis of the application’s source code, and black box
techniques, which are performed against the application’s binary executable without source code
knowledge. 44 Most assessments of custom applications are performed with white box techniques, since
source code is usually available—however, these techniques cannot detect security defects in interfaces
between components, nor can they identify security problems caused during compilation, linking, or
installation-time configuration of the application. White box techniques still tend to be more efficient and
cost-effective for finding security defects in custom applications than black box techniques. Black box
techniques should be used primarily to assess the security of individual high-risk compiled components;
interactions between components; and interactions between the entire application or application system
with its users, other systems, and the external environment. Black box techniques should also be used to
determine how effectively an application or application system can handle threats. Many tests use both
white box and black box techniques—this combination is known as gray box testing.

Assessors performing application security assessments should have a certain baseline skill set.
Guidelines for the minimum skill set include knowledge of specific programming languages and
protocols; knowledge of application development and secure coding practices; understanding of the
vulnerabilities introduced by poor coding practices; the ability to use automated software code review and
other application security test tools; and knowledge of common application vulnerabilities.


43
     Some elements of application security testing, such as penetration testing an application, are target vulnerability validation
     techniques, not target identification and analysis techniques. Application security testing is discussed only in this section for
     brevity.
44
     Some applications, such as many web applications, do not have compiled (binary) executables, so black box techniques may
     not be applicable to analyzing their code.




                                                                C-1
