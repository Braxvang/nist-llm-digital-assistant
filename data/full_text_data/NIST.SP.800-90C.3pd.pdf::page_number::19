      NIST SP 800-90C 3pd (Third Public Draft)                        Recommendation for RBG Constructions
      September 2022

492   According to Method 1, only the entropy in pes1, pes2, ..., pesn would be counted toward fulfilling
493   the 128-bit request. Any entropy in npes1, ... npesm is not counted.
494   According to Method 2, all of the entropy in pes1, pes2, ... pesn and in npes1, npes2, ..., npesm is
495   counted. Since the entropy from both non-physical and physical entropy sources is counted in
496   Method 2, the concatenated output string is expected to be shorter compared to that credited using
497   Method 1.
498   When multiple entropy sources are used, there is no requirement on the order in which the entropy
499   sources are accessed or the number of times that each entropy source is accessed to fulfill an
500   entropy request (e.g., if two physical entropy sources are used, it is possible that a request would
501   be fulfilled by only one of the entropy sources because entropy is not available at the time of the
502   request from the other entropy source). However, the Method 1 or Method 2 criteria for counting
503   entropy still applies.
504   This Recommendation assumes that the entropy produced by a validated physical entropy source
505   is generally more reliable than the entropy produced by a validated non-physical entropy source
506   since non-physical entropy sources are typically influenced by human actions or network events,
507   the unpredictability of which is difficult to accurately quantify. Therefore, Method 1 is considered
508   to provide more assurance that the concatenated bitstring actually contains at least the requested
509   amount of entropy (128 bits for the example). Note that RBG2(P) and RBG3 constructions only
510   count the entropy using Method 1 (see Sections 5 and 6).

511           DRBGs
512   Approved DRBG designs are specified in [SP800-90A]. A DRBG includes instantiate, generate,
513   and health-testing functions and may include reseed and uninstantiate functions. The instantiation
514   of a DRBG involves acquiring sufficient randomness to initialize the DRBG to support a targeted
515   security strength and establish the internal state, which includes the secret information for
516   operating the DRBG. The generate function produces output upon request and updates the internal
517   state. Health testing is used to determine that the DRBG continues to operate correctly. Reseeding
518   introduces fresh entropy into the DRBG’s internal state and is used to recover from a potential (or
519   actual) compromise (see Section 2.4.2 for additional discussion). An uninstantiate function is used
520   to terminate a DRBG instantiation and destroy the information in its internal state.

521   2.4.1. DRBG Instantiations
522   A DRBG implementation consists of software code, hardware, or both hardware and software that
523   is used to implement a DRBG design. The same implementation can be used to create multiple
524   “copies” of the same DRBG (e.g., for different purposes) without replicating the software code or
525   hardware. Each “copy” is a separate instantiation of the DRBG with its own internal state that is
526   accessed via a state handle that is unique to that instantiation (see Figure 1). Each instantiation
527   may be considered a different DRBG, even though it uses the same software code or hardware.




                                                       6
