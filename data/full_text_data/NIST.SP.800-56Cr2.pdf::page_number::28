                                                                                               NIST SP 800-56C REV. 2                                RECOMMENDATION FOR KEY DERIVATION METHODS
                                                                                                                                                                  IN KEY ESTABLISHMENT SCHEMES


                                                                                               Process:

                                                                                               [Randomness Extraction]
                                                                                                  1. Call MAC( salt, Z, …) to obtain KDK or an error indicator. If an error occurs, output an error
                                                                                                     indicator, and exit from this process without performing step 2.

                                                                                               [Key Expansion]
                                                                                                  2. Call KDF( KDK, L, {IV,} FixedInfo ) to obtain DerivedKeyingMaterial or an error indicator
                                                                                                     (see [SP 800-108] for details). If an error occurs, output an error indicator; otherwise output
                                                                                                     DerivedKeyingMaterial.
This publication is available free of charge from: https://doi.org/10.6028/NIST.SP.800-56Cr2




                                                                                               Output:
                                                                                                     The bit string DerivedKeyingMaterial of length L bits (or an error indicator).

                                                                                               Notes:
                                                                                                  When HMAC-hash is used as the auxiliary MAC algorithm, the length of KDK is the length of
                                                                                                  an untruncated output block from the hash function, hash. When AES-CMAC is used, then
                                                                                                  (regardless of the AES variant employed) KDK is a 128-bit binary string. KDK is used (locally)
                                                                                                  as a key-derivation key by the auxiliary KDF during the key-expansion step and shall be
                                                                                                  destroyed (along with all other sensitive, locally stored data) after its use. Its value shall not
                                                                                                  be an output of the key-derivation procedure.

                                                                                               [RFC 5869] specifies a version of the above extraction-then-expansion key-derivation procedure
                                                                                               using HMAC for both the extraction and expansion steps. For an extensive discussion concerning
                                                                                               the rationale for the extract-and-expand mechanisms specified in this Recommendation, see
                                                                                               [LNCS 6223].

                                                                                               5.2    The Auxiliary MAC Algorithm and Related Parameters

                                                                                               Tables 4 and 5 enumerate the possibilities for the auxiliary MAC algorithm used for randomness
                                                                                               extraction and provide additional information concerning the lengths of the MAC key (i.e., the salt
                                                                                               value) and the extracted key-derivation key (i.e., KDK). The tables also indicate the range of
                                                                                               security strengths that can be supported by each choice for MAC (see Section 5.1) when used for
                                                                                               two-step key derivation in a key-establishment scheme specified in SP 800-56A and SP 800-56B.

                                                                                                     Table 4: MAC( salt, Z, …) = HMAC-hash( salt, Z ) (For Randomness Extraction)

                                                                                                                                  Effective                           Security
                                                                                                                    Hash                        Bit Length of
                                                                                                                                  Byte / Bit                         Strength s
                                                                                                                  Function                      Extracted KDK
                                                                                                                                  Length*                            supported
                                                                                                                   (hash)
                                                                                                                                   of salt                            (in bits)
                                                                                                                SHA-1              64 / 512           160          112 ≤ s ≤ 160
                                                                                                                SHA-224            64 / 512           224          112 ≤ s ≤ 224
                                                                                                                SHA-256            64 / 512           256          112 ≤ s ≤ 256



                                                                                                                                                20
