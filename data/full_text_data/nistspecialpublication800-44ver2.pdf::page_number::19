                                                                   GUIDELINES ON SECURING PUBLIC WEB SERVERS



 Step 5: Maintaining the secure configuration through application of appropriate patches and
  upgrades, security testing, monitoring of logs, and backups of data and OS

 Step 6: Using, publicizing, and protecting information and data in a careful and systemic manner

 Step 7: Employing secure administration and maintenance processes (including server/application
  updating and log reviews)

 Step 8: Conducting initial and periodic vulnerability scans of each public Web server and supporting
  network infrastructure (e.g., firewalls, routers).

The practices recommended in this document are designed to help mitigate the risks associated with
public Web servers. They build on and assume the implementation of practices described in the NIST
publications on system and network security listed in Appendix A.

When addressing Web server security issues, it is an excellent idea to keep in mind the following general
information security principles [Curt01 and Salt75]:

 Simplicity—Security mechanisms (and information systems in general) should be as simple as
  possible. Complexity is at the root of many security issues.

 Fail-Safe—If a failure occurs, the system should fail in a secure manner, i.e., security controls and
  settings remain in effect and are enforced. It is usually better to lose functionality rather than
  security.

 Complete Mediation—Rather than providing direct access to information, mediators that enforce
  access policy should be employed. Common examples of mediators include file system permissions,
  proxies, firewalls, and mail gateways.

 Open Design—System security should not depend on the secrecy of the implementation or its
  components. “Security through obscurity” is not reliable.

 Separation of Privilege—Functions, to the degree possible, should be separate and provide as much
  granularity as possible. The concept can apply to both systems and operators and users. In the case
  of systems, functions such as read, edit, write, and execute should be separate. In the case of system
  operators and users, roles should be as separate as possible. For example, if resources allow, the role
  of system administrator should be separate from that of the security administrator.

 Least Privilege—This principle dictates that each task, process, or user is granted the minimum
  rights required to perform its job. By applying this principle consistently, if a task, process, or user is
  compromised, the scope of damage is constrained to the limited resources available to the
  compromised entity.

 Psychological Acceptability—Users should understand the necessity of security. This can be
  provided through training and education. In addition, the security mechanisms in place should
  present users with sensible options that give them the usability they require on a daily basis. If users
  find the security mechanisms too cumbersome, they may devise ways to work around or compromise
  them. The objective is not to weaken security so it is understandable and acceptable, but to train and
  educate users and to design security mechanisms and policies that are usable and effective.




                                                     2-3
