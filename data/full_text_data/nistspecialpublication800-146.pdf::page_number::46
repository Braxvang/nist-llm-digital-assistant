                                                            CLOUD COMPUTING SYNOPSIS AND RECOMMENDATIONS



6.3.1    Facilitated Scalable Application Development and Deployment

PaaS provides a low-cost way of developing and deploying applications. A variety of toolkits exist for
developing PaaS applications and for supporting them both at the server side via data stores and server-
side processing frameworks (e.g., [Msf11-2, Goo11, Sal11, Red10, Ama12]), and at the client side via
thin clients and especially browser-based processing frameworks (e.g., [Gar05, Ado11, Goo11-2, Mic11,
Dja11]). These techniques provide a way for organizations to develop and deploy enterprise applications
and to maintain centralized control over their operation and the data that is processed with them. PaaS
application development frameworks typically provide design patterns supporting a high level of
scalability, thus enabling well-written PaaS applications to operate smoothly through large fluctuations in
demand. In on-site scenarios, scalability will be limited to the resources provided by consumer data
centers; however in outsourced scenarios more resources may be available at the providers' facilities and,
particularly in the public scenario, well-written PaaS applications can be quickly deployed to large
numbers of consumers and provide very large quantities of data and processing services.

6.4     Issues and Concerns

As with SaaS clouds discussed in Section 5, PaaS clouds, perform more application-level logic at
provider facilities than do traditional computing solutions, and PaaS deployments also place significant
burdens on consumer browsers (or thin clients) to maintain reliable and secure connections to provider
systems and to maintain separation between different PaaS applications and accounts. PaaS clouds thus
share SaaS issues and concerns as presented in Section 5.4):

 Browser-based Risks and Risk Remediation (5.4.1),
 Network Dependence (5.4.2), and
 Isolation vs. Efficiency (5.4.4).
In addition, several issues are specific to PaaS clouds.

6.4.1    Lack of Portability between PaaS Clouds

Portability in PaaS is a concern for new application development, particularly when platforms require
proprietary languages and run-time environments. Even when standard languages are used,
implementations of platform services may vary widely between providers – for example, one platform’s
file, queue, or hash-table interface may not be compatible with another’s. Consumers creating new
applications may mitigate portability risks by creating generalized interfaces to platform services instead
of creating specialized implementations for specific platform providers. Such a strategy, however, incurs
costs and also does not entirely mitigate the risks since a general interface that hides provider-specific
variations will likely limit the use of provider-specific value added features, thus resulting in a “lowest
common denominator” for application features.

6.4.2    Event-based Processor Scheduling

PaaS applications may be event driven with the events consisting of HTTP messages. This design is
particularly cost effective in that, absent an outstanding request, few resources are consumed. However it
poses resource constraints on applications, e.g., they must answer a request in a given time interval or
they must continue a long-running request by queuing synthetic messages that then can be serviced. Also,
tasks that execute quickly in a local application may not offer equivalent performance in a PaaS
application.



                                                     6-4
