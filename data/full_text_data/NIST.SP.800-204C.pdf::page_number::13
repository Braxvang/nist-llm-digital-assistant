                                                                                              NIST SP 800-204C                                           DEVSECOPS FOR A MICROSERVICES-BASED
                                                                                                                                                                APPLICATION WITH SERVICE MESH

                                                                                              This document covers the implementation of pipelines or workflows associated with all five code
                                                                                              types listed above. Thus, the entire application environment (not just the application code)
                                                                                              benefits from all of the best practices that exist for application code (e.g., agile iterative
                                                                                              development, version control, governance, etc.). Infrastructure as code, policy as code, and
                                                                                              observability as code belong to a special class called declarative code. When using ‘as code’
                                                                                              techniques, the code that is written (e.g., for provisioning a resource) is managed similar to
                                                                                              application source code. This implies that it is versioned, documented, and has access controls
                                                                                              defined similar to what is done for application source code repository. Often, domain-specific
                                                                                              declarative languages are used: the requirements are declared, and an associated tool converts
                                                                                              them into artifacts that make up a runtime instance. For example, in the case of infrastructure as
This publication is available free of charge from: https://doi.org/10.6028/NIST.SP.800-204C




                                                                                              code (IaC), the declarative language models the infrastructure as a series of resources. The
                                                                                              associated configuration management tool pulls together these resources and generates what are
                                                                                              known as manifests that define the final shape and state of the platform (runtime instance)
                                                                                              associated with the defined resources. These manifests are stored in servers associated with a
                                                                                              configuration management tool and are used by the tool to create compiled configuration
                                                                                              instructions for the runtime instance on the designated platform. Manifests are generally encoded
                                                                                              in platform-neutral representations (e.g., JSON) and fed to platform resource provisioning agents
                                                                                              through REST APIs.

                                                                                              1.2 Related DevSecOps Initiatives

                                                                                              There are several DevSecOps initiatives in various agencies of the Federal Government with
                                                                                              varying emphasis and focus, depending on the processes enabled by software and mission needs.
                                                                                              Though not exhaustive, here is a brief overview of those initiatives [3].

                                                                                                 •   DevSecOps pipelines are involved in building, checking in, and checking out from a
                                                                                                     container registry called Iron Bank, a repository of DOD-vetted hardened container
                                                                                                     images.
                                                                                                 •   The Air Force’s Platform One, the DevSecOps platform that enabled the concept of
                                                                                                     continuous authority to operate (C-ATO), which in turn streamlined the DOD’s
                                                                                                     authorization process to accommodate the speed and frequency of modern continuous
                                                                                                     software deployments.
                                                                                                 •   The National Geospatial-Intelligence Agency (NGA) outlined its DevSecOps strategy in
                                                                                                     “The NGA Software Way,” where three key metrics – availability, lead time, and
                                                                                                     deployment frequency – are laid out for each of its software products, along with
                                                                                                     specification of seven distinct product lines for enabling DevSecOps pipelines, including
                                                                                                     messaging and workflow tools.
                                                                                                 •   The Centers for Medicare and Medicaid Services (CMS) is adopting a DevSecOps
                                                                                                     approach where one emphasis is on laying the groundwork for the software bill of
                                                                                                     materials (SBOM) – a formal record that contains the details and supply chain
                                                                                                     relationships of various components used in building software. The purpose of producing
                                                                                                     SBOMs is to meet the goals established under the Continuous Diagnostics and Mitigation
                                                                                                     (CDM) program.


                                                                                                                                              3
