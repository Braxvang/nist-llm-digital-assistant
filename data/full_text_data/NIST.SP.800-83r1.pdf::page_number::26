                                      GUIDE TO MALWARE INCIDENT PREVENTION AND HANDLING FOR DESKTOPS AND LAPTOPS


with malware). The move from conventional BIOS implementations to implementations based on the
Unified Extensible Firmware Interface (UEFI) may make it easier for malware to target the BIOS in a
widespread fashion, as these BIOS implementations are based on a common specification.13 NIST Special
Publication 800-147 14 provides guidelines for significantly improving BIOS protection and integrity,
which is a necessary foundation for the other host-based methods.

3.5.2    Sandboxing

Sandboxing refers to a security model where applications are run within a sandbox—a controlled
environment that restricts what operations the applications can perform and that isolates them from other
applications running on the same host. In a sandbox security model, typically only authorized “safe”
operations may be performed within the sandbox; the sandbox prohibits applications within the sandbox
from performing any other operations. The sandbox also restricts access to system resources, such as
memory and the file system, to keep the sandbox’s applications isolated from the host’s other
applications.

Sandboxing provides several benefits in terms of malware incident prevention and handling. By limiting
the operations available, it can prevent malware from performing some or all of the malicious actions it is
attempting to execute; this could prevent the malware from succeeding or reduce the damage it causes.
And the sandboxing environment—the isolation—can further reduce the impact of the malware by
restricting what information and functions the malware can access. Another benefit of sandboxing is that
the sandbox itself can be reset to a known good state every time it is initialized.

3.5.3    Browser Separation

Multiple brands of Web browsers (e.g., Microsoft Internet Explorer, Mozilla Firefox, Apple Safari,
Google Chrome, Opera) can be installed on a single host. Accessing Web sites containing malicious
content is one of the most common ways for hosts to be attacked, such as malicious plug-ins being
installed within a browser. To reduce the impact of such attacks, users can use one brand of browser for
corporate applications and another brand of browser for all other website access. This separates the
sensitive corporate data within one browser from the data within the other browser, providing better
protection for the corporate data (although this alone cannot adequately secure browser data) and reducing
the likelihood that malware encountered during general web browsing will affect corporate applications.
Having a separate brand of browser for corporate applications also allows that browser to be secured more
tightly, such as disabling all forms of mobile code (e.g., Java, ActiveX) that are not required for the
specified applications.

3.5.4    Segregation Through Virtualization

Browser separation essentially segregates web browsers from each other. Virtualization 15 can be used to
segregate applications or operating systems from each other, with much more rigor than simple browser
separation can provide. For example, an organization could have one OS instance for corporate
applications and another OS instance for all other activities, including web browsing. Each OS instance is
a known-good virtualized image that contains the appropriate applications and is secured accordingly.
The user loads these virtualized images and does their work within these guest OS images, not directly on
the host OS itself. A compromise occurring within one image will not affect the other image unless the


13
     This paragraph was taken from the Executive Summary of NIST SP 800-147, BIOS Protection Guidelines.
14
     http://csrc.nist.gov/publications/PubsSPs.html#800-147
15
     For more information on virtualization, see NIST SP 800-125, Guide to Security for Full Virtualization Technologies
     (http://csrc.nist.gov/publications/PubsSPs.html#800-125).


                                                              15
