                                                                                   GUIDE TO SECURE WEB SERVICES



3.      Web Service Security Functions and Related Technologies

Web service security standards, functions, and technologies continue to evolve at a rapid pace, driven by
changes in the types of software attacks, community stakeholders, and Web services policy decision
makers. This section describes several current and emerging standards, initiatives, and techniques aimed
at improving the security of Web services. Many of the concepts used in securing Web applications are
useful for understanding the security of Web services. Several resources on the subject of Web
application security are provided in Appendix F for further reference.

3.1     Service-to-Service Authentication

Authentication is required to limit access to resources, to identify participants in transactions, and to
create seamless personalization of information based on identity. A means of sharing the fact that
authentication has been performed successfully is necessary to support single sign-on, allowing users to
authenticate with one system and use other services and applications within a SOA.

Service-to-service authentication can be performed using a variety of methods, from HTTP-based token
authentication to SSL/TLS-certificate based authentication, or by passing tokens along with the SOAP
request. The HTTP and SSL/TLS-based methods are performed below the SOAP message layer and are
transparent to the Web services involved, while SOAP-based token protocols require interaction between
Web services.

Token-based Web services authentication is usually performed using the OASIS WS-Security standard,
which supports tokens based on a variety of authentication standards: usernames, X.509 PKI certificates,
Kerberos tickets, or SAML assertions (SAML is discussed in-depth in Section 3.5.3). WS-Security
libraries are available for most of the widely used Java and .NET Web services development platforms.
When a service provider attempts to access a remote Web service on behalf of a user, it should send an
authentication token within a WS-Security message. These tokens convey that the initiating entity (e.g., a
user or requester) has been authenticated and provide information about the entity, such as the
authentication mechanism, time, and possibly subject attributes that may be applicable. Often, these
tokens take the form of a SAML assertion.

For authenticating Web services between organizations using identity federation, the Liberty Alliance
developed Liberty ID-WSF, which supports service-to-service authentication based on pairwise trust and
federated identity. Federated authentication can also be performed using the WS-Trust and WS-
Federation specifications developed to support WS-Security. Web service authentication using SAML
and WS-Security is described in the following section. Identity federation technologies are discussed in-
depth in Section 3.2.

3.1.1    Service Chaining

Sometimes, a service provider may not be able to perform the actions that a user or requester wishes it to
perform, but it knows of a remote Web service that can. The service provider may invoke another remote
service to satisfy the requesterâ€™s request, which is known as service chaining. The service provider may
use a SAML assertion, a WS-Security message, or both to make certain that both Web services trust each
other.

There are two different approaches to service chaining. The Web service can access the remote Web
service either as itself or by taking on the identity of the originator of the request. In the first case, the
two Web services would communicate with each other as normal. In the second case, the remote Web



                                                       3-1
