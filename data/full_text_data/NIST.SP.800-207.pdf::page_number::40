                                                                                             NIST SP 800-207                                                          ZERO TRUST ARCHITECTURE


                                                                                             ZTA is an open issue. It is assumed that most automated technology systems will use some
                                                                                             means to authenticate when using an API to resource components.

                                                                                             The biggest risk when using automated technology for configuration and policy enforcement is
                                                                                             the possibility of false positives (innocuous actions mistaken for attacks) and false negatives
                                                                                             (attacks mistaken for normal activity) impacting the security posture of the enterprise. This can
                                                                                             be reduced with regular retuning analysis to correct mistaken decisions and improve the decision
                                                                                             process.

                                                                                             The associated risk is that an attacker will be able to induce or coerce an NPE to perform some
                                                                                             task that the attacker is not privileged to perform. The software agent may have a lower bar for
                                                                                             authentication (e.g., API key versus MFA) to perform administrative or security-related tasks
This publication is available free of charge from: https://doi.org/10.6028/NIST.SP.800-207




                                                                                             compared with a human user. If an attacker can interact with the agent, they could theoretically
                                                                                             trick the agent into allowing the attacker greater access or into performing some task on behalf of
                                                                                             the attacker. There is also a risk that an attacker could gain access to a software agentâ€™s
                                                                                             credentials and impersonate the agent when performing tasks.




                                                                                                                                             31
