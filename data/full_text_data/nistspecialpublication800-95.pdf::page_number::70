                                                                                GUIDE TO SECURE WEB SERVICES



3.8   Availability of Web Services

There is a close relationship between availability, QoS, and reliability. Availability is intended to ensure
that QoS and reliability are maintained even when the Web service is subjected to intentional attempts to
compromise its operation.

Where QoS is concerned with ensuring the Web service consistently operates at its expected level of
performance, and reliability deals with ensuring the Web service continues to operate correctly and
predictably in the presence of unintentional faults, availability ensures that:

 The Web service will continue to operate correctly and predictably in the presence of the types of
  intentionally-induced faults associated with DoS attacks

 If the Web service cannot avoid failing, it will not fail into an insecure state (i.e., its failure will not
  leave the service itself, its data, or its environment vulnerable to being compromised, subverted, or
  exploited to compromise something else) unless organizational policy requires the service to continue
  operating.

To achieve availability, a Web service must not only be designed and implemented to achieve QoS and
reliability, but also to:

 Recognize and react to the attack patterns associated with DoS.
 When resistance is no longer possible, constrain and isolate the results of the DoS attack. This means
  preventing the DoS attack patterns from propagating beyond the point where they were first detected
  by the Web service.
 Recover and resume secure operation as soon as possible after a DoS.
It is particularly important that any planned performance degradations or orderly partial shutdowns not be
extended to any of the service’s security functions or self-protections. If the DoS attack becomes too
persistent, or its propagation cannot be prevented, the entire Web service should shut down in a safe,
secure manner. Unless a service is mission-critical as defined by organizational policy, it must never be
allowed to continue operating without fully-operational security functions and self-protections.

The service should also be designed and implemented to transition to a fallback state if it detects that any
of the external mechanisms it relies on to accomplish its security functions (e.g., SAML Attribute
Authority, PKI components) become unavailable.

The following approaches to the design, implementation, and sustainment (operation and maintenance) of
the Web service will increase its ability to recognize, resist, and recover from DoS:

 Design to include redundancy of critical functions, with diversity of how those critical functions are
  implemented.
 Design exception and error handling capabilities that:
        –   Are specific to the various types of faults expected (do not simply throw general exceptions
            for every fault)
        –   Detect, recognize, and respond specifically and appropriately to attack patterns associated
            with denial of service



                                                    3-35
