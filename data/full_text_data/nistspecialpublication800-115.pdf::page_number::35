                                              TECHNICAL GUIDE TO INFORMATION SECURITY TESTING AND ASSESSMENT



5.    Target Vulnerability Validation Techniques

This section addresses target vulnerability validation techniques, which use information produced from
target identification and analysis to further explore the existence of potential vulnerabilities. The
objective is to prove that a vulnerability exists, and to demonstrate the security exposures that occur when
it is exploited. Target vulnerability validation involves the greatest amount of risk in assessments, since
these techniques have more potential to impact the target system or network than other techniques.

Target vulnerability validation techniques for application security testing are briefly discussed in
Appendix C.

5.1   Password Cracking

When a user enters a password, a hash of the entered password is generated and compared with a stored
hash of the user’s actual password. If the hashes match, the user is authenticated. Password cracking is
the process of recovering passwords from password hashes stored in a computer system or transmitted
over networks. It is usually performed during assessments to identify accounts with weak passwords.
Password cracking is performed on hashes that are either intercepted by a network sniffer while being
transmitted across a network, or retrieved from the target system, which generally requires administrative-
level access on, or physical access to, the target system. Once these hashes are obtained, an automated
password cracker rapidly generates additional hashes until a match is found or the assessor halts the
cracking attempt.

One method for generating hashes is a dictionary attack, which uses all words in a dictionary or text file.
There are numerous dictionaries available on the Internet that encompass major and minor languages,
names, popular television shows, etc. Another cracking method is known as a hybrid attack, which builds
on the dictionary method by adding numeric and symbolic characters to dictionary words. Depending on
the password cracker being used, this type of attack can try a number of variations, such as using common
substitutions of characters and numbers for letters (e.g., p@ssword and h4ckme). Some will also try
adding characters and numbers to the beginning and end of dictionary words (e.g., password99,
password$%).

Yet another password-cracking method is called the brute force method. This generates all possible
passwords up to a certain length and their associated hashes. Since there are so many possibilities, it can
take months to crack a password. Although brute force can take a long time, it usually takes far less time
than most password policies specify for password changing. Consequently, passwords found during brute
force attacks are still too weak. Theoretically, all passwords can be cracked by a brute force attack, given
enough time and processing power, although it could take many years and require serious computing
power. Assessors and attackers often have multiple machines over which they can spread the task of
cracking passwords, which greatly shortens the time involved.

Password cracking can also be performed with rainbow tables, which are lookup tables with pre-
computed password hashes. For example, a rainbow table can be created that contains every possible
password for a given character set up to a certain character length. Assessors may then search the table
for the password hashes that they are trying to crack. Rainbow tables require large amounts of storage
space and can take a long time to generate, but their primary shortcoming is that they may be ineffective
against password hashing that uses salting. Salting is the inclusion of a random piece of information in
the password hashing process that decreases the likelihood of identical passwords returning the same
hash. Rainbow tables will not produce correct results without taking salting into account—but this
dramatically increases the amount of storage space that the tables require. Many operating systems use



                                                     5-1
