                                                                                              NIST SP 800-204C                                             DEVSECOPS FOR A MICROSERVICES-BASED
                                                                                                                                                                  APPLICATION WITH SERVICE MESH



                                                                                                 •   Security Benefits: Better security through validation of every request monitoring, alerts
                                                                                                     and feedback mechanisms because of Observability as code. These are described in more
                                                                                                     detailed in the following paragraphs. Specific capabilities include:
                                                                                                     (a) Runtime - Killing a malicious container
                                                                                                     (b) Feedback - to the right repository due to an errant program to update code and re-
                                                                                                         trigger the pipelines
                                                                                                     (c) Monitor new and terminated services and adjust associated services (e.g., service
                                                                                                         proxy)
                                                                                                     (d) Enable Security assertions: - Non-bypassable – by proxies executing in same
This publication is available free of charge from: https://doi.org/10.6028/NIST.SP.800-204C




                                                                                                         space, secure sessions, robust authentication & authorization and secure state
                                                                                                         transitions
                                                                                                 •   Enable Continuous Authorization to operate (C-ATO) described in detail at the end of this
                                                                                                     section
                                                                                              Validation of each request and the feedback mechanisms mentioned above are further described
                                                                                              below:

                                                                                                 •   Validation of every request: Every request from a user or client application (service) is
                                                                                                     authenticated and authorized (using mechanisms such as OPA or any external
                                                                                                     authorization engine or admission controllers [40] that are integral parts of the platform).
                                                                                                     While authorization engines provide application domain-specific policy enforcement,
                                                                                                     admission controllers provide platform-specific policy relating to end-point objects of a
                                                                                                     specific platform (e.g., pods, deployment, namespaces). Specifically, admission
                                                                                                     controllers mutate and validate. Mutating admission controllers parse each request and
                                                                                                     make changes to the request (mutate) before forwarding it down the chain. An example is
                                                                                                     setting default values for specifications that are not set by a user in the request so as to
                                                                                                     ensure that workloads running on the cluster are uniform and follow a particular standard
                                                                                                     defined by the cluster administrator. Another example is adding a specific resource limit
                                                                                                     for the pod (if the resource limits are not set for that pod) and then forwarding it down the
                                                                                                     chain (mutate the request by adding this field if it is not present in the request). By doing
                                                                                                     so, all of the pods in the cluster will always have a resource limit set according to a
                                                                                                     specification unless explicitly stated. Validating admission controllers reject requests that
                                                                                                     do not follow a particular specification. For example, none of the pod requests can have
                                                                                                     security context set to run as root user [40].
                                                                                                 •   Feedback mechanisms:
                                                                                                     o Some remediation for issues discovered at runtime may have to be handled or fixed at
                                                                                                       the source code. There should be a process for automatically opening an issue against
                                                                                                       the right code repository to fix the problem and re-trigger the DevSecOps pipeline.
                                                                                                     o Provide feedback loops to the application-hosting platform (e.g., a notification to kill a
                                                                                                       pod that contains a malicious container).
                                                                                                     o Provide proactive dynamic security by monitoring application configuration (e.g.,
                                                                                                       monitoring new pods/containers introduced into the application and generating and
                                                                                                       injecting proxies to take care of their secure communication needs).
                                                                                                                                              29
