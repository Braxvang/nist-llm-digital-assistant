                                                                                              NIST SP 800-77 REV. 1                                                                                   GUIDE TO IPSEC VPNS


                                                                                              tunnel mode and NAT have other potential compatibility issues. 36 Section 7.2.1 provides
                                                                                              guidance on overcoming NAT-related issues.

                                                                                               IP            ESP Header           Transport and Application Protocol Headers               ESP Trailer          ESP Integrity
                                                                                               Header                             and Data                                                 (ESP padding,        Check Value- ICV
                                                                                                                                                                                           Next Header)         (variable)
                                                                                                                                  Encrypted
                                                                                                             Authenticated (Integrity Protection)

                                                                                                                                         Figure 8: ESP Transport Mode Packet
This publication is available free of charge from: https://doi.org/10.6028/NIST.SP.800-77r1




                                                                                              4.1.2     Encryption with Separate Integrity Protection

                                                                                              ESP uses symmetric cryptography to provide encryption for IPsec packets. Accordingly, both
                                                                                              endpoints of an IPsec connection protected by ESP encryption must use the same key to encrypt
                                                                                              and decrypt the packets. When an endpoint encrypts data, it divides the data into small blocks
                                                                                              (for the AES algorithm, blocks of 128 bits each) and then performs multiple sets of
                                                                                              cryptographic operations (known as rounds) using the data blocks and key. Encryption
                                                                                              algorithms that work in this way are known as block cipher algorithms. When the other endpoint
                                                                                              receives the encrypted data, it performs decryption using the same key and a similar process but
                                                                                              with the steps reversed and the cryptographic operations altered.

                                                                                              After encryption has been performed, the first step for providing integrity protection is to create a
                                                                                              MAC on a message using a MAC algorithm and a secret key shared by the two endpoints. The
                                                                                              MAC is added to the packet, and the packet is sent to the recipient. The recipient can then
                                                                                              regenerate the MAC using the shared key and confirm that the two MACs match, thus
                                                                                              determining whether the data has been modified. IPsec mostly uses an HMAC algorithm [47] for
                                                                                              integrity protection, which uses approved hash functions. Examples of HMAC are HMAC-
                                                                                              SHA256. Another common non-HMAC integrity algorithm is AES-CMAC-96 [48]. Federal
                                                                                              agencies are required to use NIST-approved algorithms and FIPS-validated cryptographic
                                                                                              modules. HMAC with a hash function from the SHA-2 family and AES-CMAC-96 are NIST-
                                                                                              approved. However, AES-eXtended Cipher Block Chaining (AES-XCBC-96), for example, is
                                                                                              not an approved algorithm.

                                                                                              4.1.3     AEAD Encryption with Built-In Integrity

                                                                                              Encryption with separate integrity protection (as described in Section 4.1.2) requires two
                                                                                              separate cryptographic processes over the data using two different secret keys. AEAD combines
                                                                                              these two processes, which significantly increases performance. It also provides more constant-
                                                                                              time processing when errors occur, resulting in a more robust error handling process that is less
                                                                                              susceptible to timing attacks. The reverse process produces either the plaintext data or an error
                                                                                              indication. For IKEv2 and ESP, AES-GCM is specified in [49] as an AEAD algorithm. Due to
                                                                                              the way that IKEv1 handles the separation of encryption from data integrity protection in IKE

                                                                                              36   One possible issue is the inability to perform incoming source address validation to confirm that the source address is the
                                                                                                   same as that under which the IKE SA was negotiated. Other possible issues include packet fragmentation, NAT mapping
                                                                                                   timeouts, and multiple clients behind the same NAT device.



                                                                                                                                                              38
