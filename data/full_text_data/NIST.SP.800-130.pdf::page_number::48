SP 800-130                                                                     August 2013



In the case of an input to a function, the function may need to process protections placed
on the input by another entity. For example, for the key-entry function, the entity
providing the key (i.e., the key source 9) may have digitally signed the plaintext key and
then encrypted the signed result. Therefore, for this example, the key-entry function will
need to decrypt the input and perform digital signature verification to authenticate the key
source and verify the integrity of the key.

In the case of an output from a function, the function may need to apply security services.
For example, for the key-output function, the invoker of the function may desire to output
a key that is encrypted and then digitally signed. The key-output function would then
apply encryption and digital signature generation to the key as appropriate for the
intended recipient.

FR:6.17 The CKMS design shall specify the key and metadata management functions to
be implemented and supported.

FR:6.18 The CKMS design shall identify the integrity, confidentiality, and source-
authentication services that are applied to each key and metadata management function
parameter implemented in the CKMS.

6.4.1 Generate Key
When a user requires a key, the user should request that the key be generated by the
CKMS. The user may need to specify the type of key and other necessary parameters
(e.g., the name of the key-generation technique), including some metadata that needs to
be associated with the key when requesting this function. The function may return a key
identifier that is a pointer to the key and perhaps its metadata. If the user wishes to
actually know the key value, then the key-output function (see Section 6.4.20) could be
used in some circumstances.

Key-generation techniques typically depend on the specifications of the cryptographic
algorithm paired with the key (see [FIPS 186]). Different algorithms make use of keys
conforming to differing specifications (e.g., lengths and formats). Key generation for
asymmetric algorithms involves the generation of a key pair. The generation of keys
requires the use of a random number generator that is designed for cryptographic
purposes. For example, NIST has published several approved random number generators
(see [SP 800-90A]) and instructions on key generation (see [FIPS 186]).

The key-generation function may also provide for the selection or input of metadata that
is associated with the generated key.

FR:6.19 The CKMS design shall specify the key-generation methods to be used in the
CKMS for each type of key.


9
    The source of the key may or may not be the entity using the key-entry function.
                                                 40
