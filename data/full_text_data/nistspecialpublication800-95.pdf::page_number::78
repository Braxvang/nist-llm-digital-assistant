                                                                                              GUIDE TO SECURE WEB SERVICES



the involved standards may change or cease to be implemented. Organizations should take care when
adopting such overlapping standards to avoid expensive upgrades or overhauls of the SOA.

The WS-Security specification provides confidentiality, integrity, and non-repudiation using the XML
Signature and XML Encryption standards. It also supports authentication via SAML, X.509, Kerberos,
REL, and username and password combinations. WS-Security should be employed as an integral part of
any organization's Web services deployment, but it does not secure the entire SOA. For Web services
that were not implemented with support for WS-Security, XML gateways can be used to act as
intermediaries and apply WS-Security to SOAP requests and verify SOAP responses, using HTTPS to
secure communication directly between the legacy Web service and the XML gateway. While
confidentiality and integrity can be assured via WS-Security, there are no established standards for
specifying the required QoP of a particular SOAP message or Web service. By sharing the QoP
information about individual Web services, requesters and providers can support dynamic binding in a
secure environment.

WS-Security provides a powerful framework for authentication within a single organization. For
authentication within large organizations or across multiple organizations, using a single TTP may not be
feasible. To facilitate authentication across trust boundaries, a trust federation framework should be
adopted. Organizations face several options: Liberty Alliance, WS-Federation, and Shibboleth. Liberty
Alliance works closely with OASIS, and SAML v2.0 incorporated many of the features from earlier
Liberty Alliance specifications. Because the same functionality is provided by each framework, the
choice may largely depend on whether COTS products already deployed support one of these
frameworks.

Distributed authorization is becoming increasingly common in organizational SOAs where each Web
service is a PEP that communicates with a PDP to get authorization information. To this end, SAML and
XACML were developed to provide support for multiple authorization models. SAML assertions are
generated by TTPs and can be used as security tokens by entities within the SOA. When a request is
received, PEPs use the SAML protocol to communicate with the PDP to determine whether the requester
is authorized. XACML provides a flexible, extensible policy language and mechanisms for querying
XACML policies. Similarly, authorization rules may affect individual content or services. Security
metadata can be used to determine what entities are authorized to access content or services. By
providing policy along with the content or service, PEPs are able to make some authorization decisions
without communicating remotely over the network.

Securing the discovery process is also important for an organizational SOA. If the registry can be
corrupted, or if the provider's WSDL document is wrong, an attacker may gain access to restricted
information or the entire SOA may fail. UDDI v3 provides support for digitally signing registry
information using XML Signatures, allowing requesters to verify the authenticity and the integrity of the
information. WSDL documents, however, do not inherently support digital signatures, meaning that
verifying the authenticity and integrity requires an out-of-band mechanism. True automated discovery is
still hampered by the fact that even though an individual's identity is trusted, the published service may be
malicious or may itself use a malicious service.

Some of the biggest challenges facing Web services are in the realm of accountability and availability.
While XML Signatures and the algorithms defined in FIPS 186-2 can be used to support non-repudiation,
accountability also requires the use of auditing. There is no standard for distributed auditing within a
Web services environment. NIST SP 800-92, Guide to Security Log Management 54 provides guidance on


54
     NIST SP 800-92, Guide to Security Log Management, is available at http://csrc.nist.gov/publications/nistpubs/.


                                                             3-43
