                                                                                               NIST SP 800-177 REV. 1                                                           TRUSTWORTHY EMAIL




                                                                                               and decrypt the application data. RFC 5246 Appendix A describes a range of permissible
                                                                                               ciphers, and the parties agree on one from this set. �is range of ciphers may be restricted on
                                                                                               some hosts by local policy (such as only ciphers Approved for federal use). Data transmitted
                                                                                               over the connection is encrypted using the negotiated session key. At the end, the connection is
                                                                                               closed, and the session key can be deleted (but not always, see below).

                                                                                               Negotiating a TLS connection involves a signiﬁcant time and processor load, so when the two
                                                                                               parties have the need to establish frequent secure connections between them, a session
                                                                                               resumption mechanism allows them to continue with the previously negotiated cipher, for a
                                                                                               subsequent connection.

                                                                                               TLS gains its security from the fact that the server holds the private key securely and the public
                                                                                               key can be authenticated due to it being wrapped in an X.509 certiﬁcate that is guaranteed by
                                                                                               some Certiﬁcate Authority. If the Certiﬁcate Authority is somehow compromised, there is no
This publication is available free of charge from: https://doi.org/10.6028/NIST.SP.800-177r1




                                                                                               guarantee that the key in the certiﬁcate is truly the one belonging to the server, and a client may
                                                                                               inadvertently negotiate with a man-in-the-middle. An investigation of what X.509 certiﬁcates
                                                                                               are, how they work, and how they can be better secured, follows.

                                                                                               Security Recommendation 5-1: Organizations are recommended only use approved TLS
                                                                                               versions listed in NIST SP 800-52 [SP800-52] with FIPS approved cryptographic modules.

                                                                                               5.2.2    X.509 Certificates

                                                                                               The idea of certificates as a secure and traceable vehicle for locating a public key, its ownership
                                                                                               and use was first proposed by the Consultative Committee for International Telephony and
                                                                                               Telegraphy (CCITT), now the International Telecommunications Union (ITU). The X.509
                                                                                               specification was developed and brought into worldwide use as a result. In order to vest a
                                                                                               certificate with some authority, a set of Certificate Authorities is licensed around the world as
                                                                                               identifiable authentic sources. Each certificate hierarchy has a traceable root for authentication
                                                                                               and has specific traceable requirements for revocation if that is necessary. As a certificate has a
                                                                                               complex set of fields, the idea of a certificate profile has more recently come into play. X.509
                                                                                               certificate formats are described in Section 5.2.2.1, their authentication in Section 5.2.2.2, and
                                                                                               possible revocation in Section 5.2.2.3. The profile concept and a specific example are described
                                                                                               in Section 5.2.2.4

                                                                                               5.2.2.1 X.509 Description

                                                                                               A trusted Certiﬁcate Authority (CA) is licensed to validate applicants’ credentials, store each
                                                                                               applicant’s public key in a X.509 [RFC5280] structure, and digitally sign it with the CA’s private
                                                                                               key. Each applicant must ﬁrst generate their own public and private key pair, save the private key
                                                                                               securely, and wrap the public key into an X.509 request. �e openssl req command is an
                                                                                               example of how to do this on Unix/Linux systems with OpenSSL19 installed. Many CAs will
                                                                                               generate a certiﬁcate without receiving a request (in eﬀect, generating the request themselves on


                                                                                               19 https://www.openssl.org/




                                                                                                                                                59
