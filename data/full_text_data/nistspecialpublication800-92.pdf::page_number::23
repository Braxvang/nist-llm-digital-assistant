                                                                                GUIDE TO COMPUTER SECURITY LOG MANAGEMENT



      Inconsistent Timestamps. Each host that generates logs typically references its internal clock
       when setting a timestamp for each log entry. If a host’s clock is inaccurate, the timestamps in its
       logs will also be inaccurate. This can make analysis of logs more difficult, particularly when logs
       from multiple hosts are being analyzed. For example, timestamps might indicate that event A
       happened 45 seconds before event B, when event A actually happened two minutes after event B.
      Inconsistent Log Formats.17 Many of the log source types use different formats for their logs,
       such as comma-separated or tab-separated text files,18 databases, syslog, Simple Network
       Management Protocol (SNMP), Extensible Markup Language (XML), and binary files.19 Some
       logs are designed for humans to read, while others are not; some logs use standard formats, while
       others use proprietary formats. Some logs are created not for local storage in a file, but for
       transmission to another system for processing; a common example of this is SNMP traps. For
       some output formats, particularly text files, there are many possibilities for the sequence of the
       values in each log entry and the delimiters between the values (e.g., comma-separated values, tab-
       delimited values, XML).
To facilitate analysis of logs, organizations often need to implement automated methods of converting
logs with different content and formats to a single standard format with consistent data field
representations. Inconsistent log formats and data field representations also present challenges to people
reviewing logs, who need to understand the meaning of various data fields in each log to perform a
thorough review.

Because most hosts within an organization typically log some computer security-related information,
often with multiple logs per host, the number of logs within an organization can be quite high. Many logs
record large volumes of data on a daily basis, so the total daily volume of log data within an organization
is often overwhelming. This impacts the resources needed to store the data for the appropriate length of
time, as described in Section 2.3.2, and to perform reviews of the data, as described in Section 2.3.3. The
distributed nature of logs, inconsistent log formats, and volume of logs all make the management of log
generation and storage challenging.

2.3.2     Log Protection

Because logs contain records of system and network security, they need to be protected from breaches of
their confidentiality and integrity. For example, logs might intentionally or inadvertently capture
sensitive information such as users’ passwords and the content of e-mails. This raises security and
privacy concerns involving both the individuals that review the logs and others that might be able to
access the logs through authorized or unauthorized means. Logs that are secured improperly in storage or
in transit might also be susceptible to intentional and unintentional alteration and destruction. This could
cause a variety of impacts, including allowing malicious activities to go unnoticed and manipulating
evidence to conceal the identity of a malicious party. For example, many rootkits are specifically
designed to alter logs to remove any evidence of the rootkits’ installation or execution.

Organizations also need to protect the availability of their logs. Many logs have a maximum size, such as
storing the 10,000 most recent events, or keeping 100 megabytes of log data. When the size limit is
reached, the log might overwrite old data with new data or stop logging altogether, both of which would

17
     There is no consensus in the security community as to the standard terms to be used to describe the composition of log
     entries and files. For the purposes of this publication, the terms “log content” and “log format” have been defined and used,
     but other publications may use different terms or different definitions for these terms.
18
     It is not always safe to assume that a text file log will only contain text. For example, as part of an attack, an attacker might
     provide binary data as input to a program that is expecting text data. If the program records this input into its log, then the
     log is no longer strictly a text file. This could cause log management utilities to fail or mishandle the log data.
19
     Binary files often use proprietary formats that are software-specific (e.g., event logs on Windows systems).


                                                                 2-9
