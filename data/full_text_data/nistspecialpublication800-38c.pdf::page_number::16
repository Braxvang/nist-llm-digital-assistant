       4.      Set T=MSBTlen(Yr).
       5.      Apply the counter generation function to generate the counter blocks Ctr0, Ctr1,
               …, Ctrm, where m = ⎡Plen 128⎤ .
       6.      For j=0 to m, do Sj = CIPHK(Ctrj).
       7.      Set S= S1 || S2 || …|| Sm.
       8.      Return C=(P ⊕ MSBPlen(S)) || (T ⊕ MSBTlen(S0)).

The input data to the generation-encryption process are a valid nonce, a valid payload string, and
a valid associated data string, which are formatted according to the formatting function. The
CBC-MAC mechanism is applied to the formatted data to generate a MAC, whose length is a
prerequisite. Counter mode encryption, which requires a sufficiently long sequence of counter
blocks as input, is applied to the payload string and separately to the MAC. The resulting data,
called the ciphertext, denoted C, is the output of the generation-encryption process.


6.2   Decryption-Verification Process

       Prerequisites:
       block cipher algorithm;
       key K;
       counter generation function;
       formatting function;
       valid MAC length Tlen.

       Input:
       nonce N;
       associated data A;
       purported ciphertext C of length Clen bits;

       Output:
       either the payload P or INVALID.

       Steps:
       1.     If Clen ≤ Tlen, then return INVALID.
       2.     Apply the counter generation function to generate the counter blocks Ctr0, Ctr1,
              …, Ctrm, where m = ⎡(Clen − Tlen) 128⎤ .
       3.     For j=0 to m, do Sj = CIPHK(Ctrj).
       4.     Set S= S1 || S2 || …|| Sm.
       5.     Set P=MSBClen-Tlen(C) ⊕ MSBClen-Tlen(S).
       6.     Set T=LSBTlen(C) ⊕ MSBTlen(S0).
                                         B




       7.     If N, A, or P is not valid, as discussed in Section 5.4, then return INVALID, else
              apply the formatting function to (N, A, P) to produce the blocks B0, B1, …, Br.
                                                                                 B   B      B




       8.     Set Y0= CIPHK(B0).B




       9.     For i = 1 to r, do Yj = CIPHK(Bi ⊕ Yi-1).
                                              B




       10.    If T ≠ MSBTlen(Yr), then return INVALID, else return P.



                                                  10
