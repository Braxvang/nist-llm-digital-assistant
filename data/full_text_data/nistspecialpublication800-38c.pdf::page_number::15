Given bit strings of equal length, the exclusive-OR operation, denoted ⊕, specifies the addition,
modulo 2, of the bits in each bit position, i.e., without carries. For example, 10011 ⊕ 10101=
00110.

The functions LSBs and MSBs return the s least significant (i.e., right-most) bits and the s most
significant (i.e., left-most) bits of their arguments, respectively. For example, LSB3(111011010)
= 010, and MSB4(111011010) = 1110.

Given a positive real number x, the base 2 logarithm x is denoted lg(x). For example, lg(210)=10.

6 CCM Specification

The two CCM processes are called generation-encryption and decryption-verification. The
prerequisites, inputs, outputs, steps, and summaries for the execution of the two CCM processes
are specified in Sections 6.1 and 6.2 below. The prerequisites are inputs that are typically fixed
across many invocations of CCM. The prerequisites and inputs shall meet the requirements in
Section 5.

There is some flexibility in the order of the steps of the two processes. For example, the
generation of the counter blocks can occur at any time before they are used; in fact, the counter
blocks may be generated in advance and be considered as inputs to the processes.

6.1   Generation-Encryption Process

The following is a specification of the generation-encryption process of CCM:

       Prerequisites:
       block cipher algorithm;
       key K;
       counter generation function;
       formatting function;
       MAC length Tlen.

       Input:
       valid nonce N;
       valid payload P of length Plen bits;
       valid associated data A;

       Output:
       ciphertext C.

       Steps:
       1.     Apply the formatting function to (N, A, P) to produce the blocks B0, B1, …, Br.
                                                                                 B   B      B




       2.     Set Y0= CIPHK(B0).B




       3.     For i = 1 to r, do Yi = CIPHK(Bi ⊕ Yi-1).
                                              B




                                                  9
