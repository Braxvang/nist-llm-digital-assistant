                                                                       SECURE DOMAIN NAME SYSTEM (DNS) DEPLOYMENT GUIDE



       •    Complete Re-Signing. All existing signature records (RRSIG RRs) are deleted, the zone file is
            sorted again, all of the NSEC RRs are regenerated, and finally the new signature records are
            generated. Complete re-signing is performed under the following scenarios:

            –    The zone file is generated from a back-end relational database.

            –    The zone administrator has set up a batch job to run at a specific date/time (called a cron job
                 in Unix), based on the expiration time set in the signer.

       •    Incremental Re-Signing. NSEC RRs are modified because an existing RRSet has been dropped,
            NSEC RRs are added because a new RRSet set has been added to the zone file, and signatures are
            generated only for RRsets that have changed. Incremental re-signing is done when changes to
            zone file contents have been minimal since the last time of signature generation, as is usually the
            case after a dynamic update.




Checklist item 35: Periodic re-signing should be scheduled before the expiration field of the RRSIG RRs
found in the zone. This is to reduce the risk of a signed zone being rendered bogus because of expired
signatures.

Checklist item 36: The serial number in the SOA RR must be incremented before re-signing the zone
file. If this operation is not done, secondary name servers may not pick up the new signatures because
they are refreshed purely on the basis of the SOA serial number mismatch. The consequence is that some
security-aware resolvers will be able to verify the signatures (and thus have a secure response) but others
cannot.


11.5 DNSSEC Algorithm Migration

Eventually, it may be necessary to migrate to a new DNSSEC signing algorithm. This may be because of
a discovered weakness in the currently used algorithm, or due to overriding policy decisions. The
migration from the current DNSSEC algorithm to a new algorithm requires a set of steps and delays. This
is due to the need to wait for old data to be removed from caches before the next step.

A proposed process can be found in RFC 4641bis 12, which outlines the basic steps. In order to reduce the
risk of a validator thinking it is under a downgrade attack. To reduce this risk, the signatures for the new
algorithm are added before the DNSKEY RR with the new algorithm public key. Likewise, when
removing the retiring algorithm, the public key DNSKEY RR is removed first, followed by the
signatures. The steps outlined in the document are repeated below:

       1. The zone starts with public keys of algorithm A and RRSIG RRs generated by algorithm A. The
          zone administrator then generates a new KSK and ZSK for the new algorithm B.
       2. The zone administrator signs the zone with the new algorithm B and adds the RRSIGs generated
          by algorithm B. There is no need to resign the entire zone (unless algorithm A RRSIGS are due
          to expire). Only the SOA RR needs to be resigned by algorithm A’s ZSK as the serial number
          has changed (indicating a zone update).
12
     As of the time of writing, RFC 4641 is currently undergoing a revision. The working version is draft-ietf-dnsops-rfc4641bis-
       01.txt


                                                                11-7
