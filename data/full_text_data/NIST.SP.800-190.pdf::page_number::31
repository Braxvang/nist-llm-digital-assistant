                                                                                             NIST SP 800-190                                                APPLICATION CONTAINER SECURITY GUIDE



                                                                                             4       Countermeasures for Major Risks

                                                                                             This section recommends countermeasures for the major risks identified in Section 3.

                                                                                             4.1     Image Countermeasures

                                                                                             4.1.1    Image vulnerabilities

                                                                                             There is a need for container technology-specific vulnerability management tools and processes.
                                                                                             Traditional vulnerability management tools make many assumptions about host durability and
                                                                                             app update mechanisms and frequencies that are fundamentally misaligned with a containerized
                                                                                             model. These tools are often unable to detect vulnerabilities within containers, leading to a false
This publication is available free of charge from: https://doi.org/10.6028/NIST.SP.800-190




                                                                                             sense of safety.

                                                                                             Organizations should use tools that take the pipeline-based build approach and immutable nature
                                                                                             of containers and images into their design to provide more actionable and reliable results. Key
                                                                                             aspects of effective tools and processes include:

                                                                                                   1. Integration with the entire lifecycle of images, from the beginning of the build process, to
                                                                                                      whatever registries the organization is using, to runtime.
                                                                                                   2. Visibility into vulnerabilities at all layers of the image, not just the base layer of the
                                                                                                      image but also application frameworks and custom software the organization is using.
                                                                                                      Visibility should be centralized across the organization and provide flexible reporting and
                                                                                                      monitoring views aligned with organizations’ business processes.
                                                                                                   3. Policy-driven enforcement; organizations should be able to create “quality gates” at each
                                                                                                      stage of the build and deployment process to ensure that only images that meet the
                                                                                                      organization’s vulnerability and configuration policies are allowed to progress. For
                                                                                                      example, organizations should be able to configure a rule in the build process to prevent
                                                                                                      the progression of images that include vulnerabilities with Common Vulnerability
                                                                                                      Scoring System (CVSS) [18] ratings above a selected threshold.

                                                                                             4.1.2    Image configuration defects

                                                                                             Organizations should adopt tools and processes to validate and enforce compliance with secure
                                                                                             configuration best practices. For example, images should be configured to run as non-privileged
                                                                                             users. Tools and processes that should be adopted include:

                                                                                                   1. Validation of image configuration settings, including vendor recommendations and third-
                                                                                                      party best practices.
                                                                                                   2. Ongoing, continuously updated, centralized reporting and monitoring of image
                                                                                                      compliance state to identify weaknesses and risks at the organizational level.
                                                                                                   3. Enforcement of compliance requirements by optionally preventing the running of non-
                                                                                                      compliant images.
                                                                                                   4. Use of base layers from trusted sources only, frequent updates of base layers, and
                                                                                                      selection of base layers from minimalistic technologies like Alpine Linux and Windows
                                                                                                      Nano Server to reduce attack surface areas.



                                                                                                                                               19
