GUIDELINES ON ELECTRONIC MAIL SECURITY



Organizations should determine which types of attachments to allow. The simplest approach is to allow
all types of attachments. If this is the case, then some sort of malware scanner (e.g., anti-virus software,
anti-spyware software) should be installed in the mail transit path to filter out known malware, and
perhaps even some behavior blocking utility installed at the client to prevent any unwanted operations by
executable attachments from occurring. A better approach is to filter potentially dangerous attachment
types (e.g., .vbs, .ws, .wsc file extensions) at the mail server or mail gateway, while conducting malware
scans on allowed file types. Although filtering on such extensions is a good first step, its effectiveness is
limited because attackers can alter the extensions. Instead of simply checking the extension, filtering
should check the file header, footer, or other identifying aspects of the file if possible to identify the
attachment. Organizations might also wish to consider setting different rules for internally originated
versus externally originated email or trusted versus untrusted organizations (e.g., trust .gov/.mil domains),
although this latter option is subject to email address spoofing.

Attachment filtering is not completely effective unless all attachments are blocked, and that is not
feasible. Some of the most useful attachment types, such as those from office productivity suites, are also
some of the riskiest. Also, sophisticated attackers can obfuscate the true nature of their malicious
attachments in various ways. For example, attackers sometimes send emails that have hyperlinks to a
malicious file on a remote Web site; if a user clicks on the hyperlink and it uses HTTPS instead of HTTP,
the malicious file will be downloaded while protected by HTTPS, concealing it from detection by
network-based security controls. Organizations could filter active hyperlinks in email messages to
prevent this, but this would reduce the usability of email messages for users. Also, an organization might
find it desirable for users to place hyperlinks to files in their email messages instead of attaching the files
to their messages, since this reduces the load on the mail servers.

Organizations should also consider restricting the maximum acceptable size for email attachments. This
benefits mail servers in several ways, including decreasing mail queue latency, storage requirements, and
server processor requirements. The combination of these benefits decreases the likelihood of a successful
denial of service attack caused by a deluge of oversized messages. [Mell05] However, setting a low
maximum size for attachments could inadvertently cause legitimate content to be blocked, reducing the
usability and value of the mail system.

Email encryption tends to make filtering more complicated or ineffective. Once a message is encrypted,
filtering on the mail server and/or perimeter devices is ineffective unless they can decrypt the message,
scan it, and re-encrypt it. This is problematic because of the huge performance requirement. Privacy and
other concerns with this sort of solution also exist. Generally speaking, if encryption is used extensively,
then filtering has to occur at the end point (mail client user workstation), which is susceptible to being
bypassed.

Another vector for email-borne malware that is often overlooked is personal mail accounts accessed via
Web browsers. Organizations need to determine if having access to personal mail accounts from
organizational computers is appropriate, and if so, take measures to ensure users do not put organization
assets at risk when accessing their personal accounts.

In addition to email attachments, malware can be transmitted via email by other means. For example,
many mail clients support HTML-based messages. These messages often contain active content in the
form of a client-side scripting language or control objects that can affect the client. The most popular
types of active content are ActiveX, Java, JavaScript, and Visual Basic Script (VBScript). Organizations
should determine whether or not to allow or block active content or forms of active content within email




                                                     6-4
