                                                                                               NIST SP 800-56C REV. 2                                RECOMMENDATION FOR KEY DERIVATION METHODS
                                                                                                                                                                  IN KEY ESTABLISHMENT SCHEMES


                                                                                               4      One-Step Key Derivation

                                                                                               This section specifies a family of approved key-derivation functions (KDFs) that are executed in
                                                                                               a single step; a two-step procedure is specified in Section 5. The input to each specified KDF
                                                                                               includes the shared secret Z, an indication of the desired bit length of the keying material to be
                                                                                               output, and, perhaps, other information (as determined by the particular implementation of the key-
                                                                                               establishment scheme and/or key-derivation function).
                                                                                               Implementations of these one-step KDFs depend upon the choice of an auxiliary function H, which
                                                                                               can be either: 1) an approved hash function, denoted as hash, as defined in [FIPS 180] or [FIPS
                                                                                               202]; 2) HMAC with an approved hash function, hash, denoted as HMAC-hash and defined in
This publication is available free of charge from: https://doi.org/10.6028/NIST.SP.800-56Cr2




                                                                                               [FIPS 198]; or 3) a KMAC variant, as defined in [SP 800-185]. Tables 1, 2, and 3 in Section 4.2
                                                                                               describe the possibilities for H and also include any restrictions on the associated implementation-
                                                                                               dependent parameters. H shall be chosen in accordance with the selection requirements specified
                                                                                               in Section 7.
                                                                                               When an approved MAC algorithm (HMAC or KMAC) is used to define the auxiliary function
                                                                                               H, it is permitted to use a known salt value as the MAC key. In such cases, it is assumed that the
                                                                                               MAC algorithm will satisfy the following property (for each of its supported security strengths):

                                                                                                   Given knowledge of the key k, and (perhaps) partial knowledge of a message x that includes an
                                                                                                   unknown substring y, it must be computationally infeasible to predict the (as-yet-unseen) value
                                                                                                   of MAC(k, x, …) with a probability of success that is a significant improvement over simply
                                                                                                   guessing either the MAC value or the value of y, even if one has already seen the values of
                                                                                                   MAC(kj, xj, …) for a feasible number of other (kj, xj) pairs where each key kj is known and each
                                                                                                   (partially known) message xj includes the same unknown substring y, provided that none of the
                                                                                                   (kj, xj) pairs is identical to (k, x).

                                                                                               This property is consistent with the use of the MAC algorithm as the specification of a family of
                                                                                               pseudorandom functions defined on the appropriate message space and indexed by the choice of
                                                                                               MAC key. Under Option 2 and Option 3 of the KDF specification below, the auxiliary function H
                                                                                               is a particular selection from such a family. The (partially known) messages will have the form
                                                                                               counter || Z || FixedInfo, containing the shared secret Z as an unknown substring.

                                                                                               4.1    Specification of Key-Derivation Functions

                                                                                               A family of one-step key-derivation functions is specified as follows:

                                                                                               Function call: KDM( Z, OtherInput).
                                                                                               Options for the Auxiliary Function H:
                                                                                                Option 1: H(x) = hash(x), where hash is an approved hash function meeting the selection
                                                                                                           requirements specified in Section 7, and the input, x, is a bit string.
                                                                                                Option 2: H(x) = HMAC-hash(salt, x), where HMAC-hash is an implementation of the HMAC
                                                                                                           algorithm (as defined in [FIPS 198]) employing an approved hash function, hash,
                                                                                                           that meets the selection requirements specified in Section 7. An implementation-
                                                                                                           dependent byte string, salt, whose (non-null) value may be optionally provided in


                                                                                                                                                11
