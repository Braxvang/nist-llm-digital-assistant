                                NIST Special Publication 800-38F


for a given implementation is called a valid length. The definition of a set of valid lengths, within
the limits that are specified in Table 1, is a prerequisite for both the authenticated-encryption
function and the authenticated-decryption function. Different sets of valid lengths may be
defined for different KEKs.

Ideally, for a given choice of KEK and designated cipher function, the set of valid lengths for the
authenticated-encryption function should correspond to the set of valid lengths for the
authenticated-decryption function. If not, interoperability may be affected; in particular, the
authenticated-decryption function might not accept a legitimate ciphertext as input on the basis
of its length.

The manner in which the validity of the lengths of the inputs to the authenticated-encryption and
authenticated-decryption functions is enforced is outside the scope of this Recommendation.

5.4   Limits on the Number of Invocations
There is no requirement to limit the number of invocations for KW-AE or KWP-AE, or for TKW
with three-key TDEA as the underlying block cipher. There is a requirement in [8] that, in order
to keep the “restricted” status for TKW with two-key TDEA as the underlying block cipher, the
number of invocations of TKW-AE shall not exceed 220 for a given KEK; the restricted status is
described in that publication.

Considerations for limiting the number of invocations of the authenticated-decryption function
are discussed in Appendix A.3.

6 Specifications of KW and KWP

6.1   W and W-1
Algorithm 1 below specifies the wrapping function, W, for KW-AE (see Sec. 6.2) and KWP-AE
(see Sec. 6.3), using the same KEK and designated cipher function.

Algorithm 1: W(S)

Prerequisites:
KEK, K, for an approved, 128-bit block cipher;
designated cipher function, CIPHK.

Input:
a string, S, of n semiblocks, for some integer n ≥ 3.

Steps:
    1. Initialize variables.
           a) Let s = 6(n-1).
           b) Let S1, S2 , … , Sn be the semiblocks such that S=S1 || S2 ||… || Sn .
           c) Let A0 = S1.
           d) For i = 2, …, n: let Ri0 = Si.



                                                 11
