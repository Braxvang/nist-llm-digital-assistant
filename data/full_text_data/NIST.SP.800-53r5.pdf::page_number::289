                                                                                              NIST SP 800-53, REV. 5                      SECURITY AND PRIVACY CONTROLS FOR INFORMATION SYSTEMS AND ORGANIZATIONS
                                                                                              _________________________________________________________________________________________________


                                                                                                       (12) SECURITY AND PRIVACY ENGINEERING PRINCIPLES | HIERARCHICAL PROTECTION
                                                                                                              Implement the security design principle of hierarchical protection in [Assignment:
                                                                                                              organization-defined systems or system components].
                                                                                                              Discussion: The principle of hierarchical protection states that a component need not be
                                                                                                              protected from more trustworthy components. In the degenerate case of the most trusted
                                                                                                              component, it protects itself from all other components. For example, if an operating system
                                                                                                              kernel is deemed the most trustworthy component in a system, then it protects itself from
                                                                                                              all untrusted applications it supports, but the applications, conversely, do not need to
                                                                                                              protect themselves from the kernel. The trustworthiness of users is a consideration for
                                                                                                              applying the principle of hierarchical protection. A trusted system need not protect itself
                                                                                                              from an equally trustworthy user, reflecting use of untrusted systems in “system high”
                                                                                                              environments where users are highly trustworthy and where other protections are put in
                                                                                                              place to bound and protect the “system high” execution environment.
This publication is available free of charge from: https://doi.org/10.6028/NIST.SP.800-53r5




                                                                                                              Related Controls: None.
                                                                                                       (13) SECURITY AND PRIVACY ENGINEERING PRINCIPLES | MINIMIZED SECURITY ELEMENTS
                                                                                                              Implement the security design principle of minimized security elements in [Assignment:
                                                                                                              organization-defined systems or system components].
                                                                                                              Discussion: The principle of minimized security elements states that the system does not
                                                                                                              have extraneous trusted components. The principle of minimized security elements has two
                                                                                                              aspects: the overall cost of security analysis and the complexity of security analysis. Trusted
                                                                                                              components are generally costlier to construct and implement, owing to the increased rigor
                                                                                                              of development processes. Trusted components require greater security analysis to qualify
                                                                                                              their trustworthiness. Thus, to reduce the cost and decrease the complexity of the security
                                                                                                              analysis, a system contains as few trustworthy components as possible. The analysis of the
                                                                                                              interaction of trusted components with other components of the system is one of the most
                                                                                                              important aspects of system security verification. If the interactions between components
                                                                                                              are unnecessarily complex, the security of the system will also be more difficult to ascertain
                                                                                                              than one whose internal trust relationships are simple and elegantly constructed. In general,
                                                                                                              fewer trusted components result in fewer internal trust relationships and a simpler system.
                                                                                                              Related Controls: None.
                                                                                                       (14) SECURITY AND PRIVACY ENGINEERING PRINCIPLES | LEAST PRIVILEGE
                                                                                                              Implement the security design principle of least privilege in [Assignment: organization-
                                                                                                              defined systems or system components].
                                                                                                              Discussion: The principle of least privilege states that each system component is allocated
                                                                                                              sufficient privileges to accomplish its specified functions but no more. Applying the principle
                                                                                                              of least privilege limits the scope of the component’s actions, which has two desirable
                                                                                                              effects: the security impact of a failure, corruption, or misuse of the component will have a
                                                                                                              minimized security impact, and the security analysis of the component will be simplified.
                                                                                                              Least privilege is a pervasive principle that is reflected in all aspects of the secure system
                                                                                                              design. Interfaces used to invoke component capability are available to only certain subsets
                                                                                                              of the user population, and component design supports a sufficiently fine granularity of
                                                                                                              privilege decomposition. For example, in the case of an audit mechanism, there may be an
                                                                                                              interface for the audit manager, who configures the audit settings; an interface for the audit
                                                                                                              operator, who ensures that audit data is safely collected and stored; and, finally, yet another
                                                                                                              interface for the audit reviewer, who only has need to view the audit data that has been
                                                                                                              collected but no need to perform operations on that data.
                                                                                                              In addition to its manifestations at the system interface, least privilege can be used as a
                                                                                                              guiding principle for the internal structure of the system itself. One aspect of internal least
                                                                                                              privilege is to construct modules so that only the elements encapsulated by the module are



                                                                                              CHAPTER THREE                                                                                             PAGE 262
