                                                                                               NIST SP 800-56B REV. 2                            RECOMMENDATION FOR PAIR-WISE KEY ESTABLISHMENT
                                                                                                                                                      USING INTEGER FACTORIZATION CRYPTOGRAPHY


                                                                                                  information about the byte string Z. An opponent who can reliably obtain particular bits of Z
                                                                                                  for sufficiently many chosen ciphertext values may be able to obtain the full decryption of an
                                                                                                  arbitrary RSA-encrypted value by applying the bit-security results of Håstad and Näslund [HN
                                                                                                  1998].
                                                                                               A routine that implements this operation shall destroy any local copies of the private key, any
                                                                                               locally stored portions of Z and z, and any other potentially sensitive locally stored values used or
                                                                                               produced during the execution of this routine. The destruction of these locally stored values shall
                                                                                               occur prior to or during any exit from the routine (whether exiting early because of an error or
                                                                                               exiting normally with the output of Z). Note that the requirement for destruction includes any
                                                                                               locally stored portions of the output.
This publication is available free of charge from: https://doi.org/10.6028/NIST.SP.800-56Br2




                                                                                               7.2.2 RSA with Optimal Asymmetric Encryption Padding (RSA-OAEP)
                                                                                               RSA-OAEP consists of asymmetric encryption and decryption operations that are based on an
                                                                                               approved hash function, an approved random bit generator, a mask-generation function, and the
                                                                                               RSAEP and RSADP primitives. These operations are used by the KTS-OAEP key-transport
                                                                                               scheme (see Section 9.2).
                                                                                               In the RSA-OAEP encryption operation, a data block is constructed by the sender (party U) from
                                                                                               the keying material to be transported and the hash of additional input (see Section 9.1) that is
                                                                                               shared by party U and the intended receiving party (party V). A random byte string is generated,
                                                                                               after which both the random byte string and the data block are masked in a way that binds their
                                                                                               values. The masked values are used to form the plaintext that is input to the RSAEP primitive,
                                                                                               along with the public key-establishment key of party V. The resulting RSAEP output further binds
                                                                                               the random byte string, the keying material and the hash of the additional data in the ciphertext
                                                                                               that is sent to party V.
                                                                                               In the RSA-OAEP decryption operation, the ciphertext and the receiving party’s (i.e., party V’s)
                                                                                               private key-establishment key are input to the RSADP primitive, recovering the masked values as
                                                                                               output. The mask-generation function is then used to reconstruct and remove the masks that
                                                                                               obscure the random byte string and the data block. After removing the masks, party V can examine
                                                                                               the format of the recovered data and compare its own computation of the hash of the additional
                                                                                               data to the hash value contained in the unmasked data block, thus obtaining some measure of
                                                                                               assurance of the integrity of the recovered data – including the transported keying material.
                                                                                               RSA-OAEP can process up to nLen – 2HLen – 2 bytes of keying material, where nLen is the byte
                                                                                               length of the recipient’s RSA modulus, and HLen is the byte length of the values output by the
                                                                                               underlying hash function.

                                                                                               7.2.2.1 RSA-OAEP Components
                                                                                               RSA-OAEP uses the following components:
                                                                                                  1. H:               An approved hash function (see Section 5.1). HLen is used to denote the
                                                                                                                      byte length of the hash function output.
                                                                                                  2. MGF:             The mask-generation function (see Section 7.2.2.2). The MGF employs a
                                                                                                                      hash function hash. This hash function need not be the same as the hash
                                                                                                                      function H used in step 3a of Section 7.2.2.3 and step 4a of Section 7.2.2.4.

                                                                                                                                                66
