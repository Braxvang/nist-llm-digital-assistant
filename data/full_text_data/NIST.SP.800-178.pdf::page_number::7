                                                                                               NIST SP 800-178                                                    COMPARISON OF ABAC STANDARDS FOR
                                                                                                                                                                    DATA SERVICES: XACML AND NGAC


                                                                                               messaging system), it does not necessarily need to do so. NGAC includes a standard PEP with an
                                                                                               API that supports a set of generic, operating environment-agnostic operations (read, write, create,
                                                                                               and delete policy elements and relations). This API enables a common, centralized PEP to be
                                                                                               implemented to serve the requests of multiple applications.

                                                                                               Operational Efficiency

                                                                                               An XACML request is a collection of attribute name, value pairs for the subject (user), action
                                                                                               (operation), resource, and environment. XACML identifies relevant policies and rules for
                                                                                               computing decisions through a search for Targets (conditions that match the attributes of the
This publication is available free of charge from: http://dx.doi.org/10.6028/NIST.SP.800-178




                                                                                               request). Because multiple Policies in a PolicySet and/or multiple Rules in a Policy may produce
                                                                                               conflicting access control decisions, XACML resolves these differences by applying a policy
                                                                                               combining algorithm from a set defined by the standard. The entire process includes collecting
                                                                                               attributes, matching conditions, computing rules, and resolving conflicts involving at least two
                                                                                               data stores. There are two phases of policy evaluation that need to be considered. The first and
                                                                                               costliest is loading policy from disk to Policy Decision Point (PDP) main memory, and the
                                                                                               second is request evaluation. In both phases, performance is directly related to the number of
                                                                                               policies considered.

                                                                                               An NGAC request is composed of a process id, user id, operation, and a sequence of one or more
                                                                                               operands mandated by the operation that affects either a resource or access control data. NGAC
                                                                                               identifies relevant Policies and attributes by reference when computing a decision. NGAC
                                                                                               computes decisions by applying a single combining algorithm over applicable Policies that do
                                                                                               not conflict. Unlike XACML, NGAC does not need to load policy from disk into memory when
                                                                                               evaluating a request. Instead, and as treated in NGAC reference implementation version 1.6 [11]
                                                                                               all information necessary in computing an access decision can reside in memory. Memory is
                                                                                               initially loaded when the PDP is initialized, and is updated when an administrative change
                                                                                               occurs. The NGAC specification describes what constitutes a valid implementation, but does not
                                                                                               provide implementation guidance, thereby leaving room for multiple competing approaches with
                                                                                               different efficiencies. A measure of the operational efficiency is the complexity of algorithm
                                                                                               used for arriving at a policy decision. In its reference implementation Version 1. 6 on GitHub
                                                                                               [11], the NGAC computes a decision through an algorithm [30] that is linear. Furthermore, it is
                                                                                               not linear in relation to the entire access control data set, but only to the portion relevant to a
                                                                                               particular user.

                                                                                               Attribute and Policy Management

                                                                                               Proper enforcement of data resource policies is dependent on administrative policies. This is
                                                                                               especially true in a federated or collaborative environment, where governance policies require
                                                                                               different organizational entities to have different responsibilities for administering different
                                                                                               aspects of policies and their dependent attributes.

                                                                                               XACML and NGAC differ dramatically in their ability to impose policy over the creation and
                                                                                               modification of access control data (attributes and policies). NGAC manages attributes and
                                                                                               policies through a standard set of administrative operations, applying the same enforcement
                                                                                               interface and decision making function as it uses for accessing data resources. XACML does not
                                                                                               recognize administrative operations, but instead manages policy content through a Policy

                                                                                                                                                v
