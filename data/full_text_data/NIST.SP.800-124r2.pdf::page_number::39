NIST SP 800-124r2                                                  Guidelines for Managing the Security
May 2023                                                            of Mobile Devices in the Enterprise

interact poorly with existing enterprise infrastructure software or application software and cause
a mobile app or even the entire device to become unusable.
When choosing to take corrective actions and deciding how strong such actions should be, the
enterprise administrator should consider special factors that affect software deployment in the
mobile computing environment. If users are traveling, offline for extended periods of time, or
only connected via low-bandwidth networks (e.g., legacy cellular), updating software may be
almost infeasible. To address these cases, administrators should develop mitigations in advance
for unpatched mobile systems.
Best practices for mobile updates include pushing updates periodically (e.g., weekly) to
acclimate users to regular patching and prevent apps from becoming excessively outdated.
Administrators should identify a group of relatively tolerant users (e.g., other system
administrators) and push updates to these users before patching mobile devices across the
organization. By using this approach, problems with updates may be discovered and addressed
before they impact a larger number of users who are less tolerant of software problems[41].
Threats Addressed: Exploitation of underlying vulnerabilities in devices, mobile malware

4.3.7. OS and Application Isolation
Using a secure container to isolate enterprise data is a commonplace strategy for preventing data
compromise. As stated in Section 4.2.7, containers use a variety of underlying technologies to
separate enterprise and user data. Secure containers often act as an EMM’s device-side agent to
obtain information about a device’s health, enforce enterprise policy, and notify administrators of
non-conformance. They can also be used to provide cryptographic confidentiality protection of
data. Acting as the EMM agent, secure containers may work in conjunction with the
management APIs to perform their security and management functions.
Administrators can also configure policy, receive notifications of policy violations, prevent data
exfiltration, and manage device health by embedding a security-focused SDK into an app that
resides on an employee device. Although this approach can be fruitful, it requires a certain level
of expertise from the enterprise to develop the SDK. Another approach to isolation involves
wrapping applications as mentioned in Section 4.2.6. All of these can work in concert to provide
the desired degree of isolation.
Enterprises may need to employ multiple isolation mechanisms within their mobile deployment.
The exact combination necessary for a particular enterprise is a function of the enterprise’s
unique security and operational requirements. Implementing all of the isolation mechanisms
listed here may not be an appropriate response to the threats posed to an enterprise and may also
be too costly to implement. Enterprises should gain an understanding of what security benefits an
isolation mechanism is actually providing and what features are simply a byproduct of the
underlying OS. In addition, organizations should ensure that isolation mechanisms are activated
and properly configured.
Threats Addressed: Exploitation of underlying vulnerabilities in devices, mobile malware




                                                29
