                                                                                             NIST SP 800-204                                                          SECURITY STRATEGIES FOR
                                                                                                                                                      MICROSERVICES-BASED APPLICATION SYSTEMS

                                                                                             Security strategies for implementing circuit breakers (MS-SS-6)

                                                                                                •    A proxy circuit breaker option should be deployed to limit the trusted component to the
                                                                                                     proxy. This avoids the need to place the trust on the clients and microservices (e.g.,
                                                                                                     setting thresholds and cutting off requests based on the set threshold) since they are
                                                                                                     multiple components.

                                                                                             4.5.2   Strategies for Load Balancing

                                                                                             Load balancing is an integral functional module in all microservices-based applications, and its
                                                                                             main purpose is to distribute loads to services. A service name is associated with a namespace
                                                                                             that supports multiple instances of the same service. In other words, many instances of the
This publication is available free of charge from: https://doi.org/10.6028/NIST.SP.800-204




                                                                                             same service would use the same namespace [13]. To balance the service load, the load
                                                                                             balancer chooses one service instance in the request namespace using an algorithm such as the
                                                                                             round-robin algorithm—a circular pattern to assign the request to a service instance.

                                                                                             Security strategies for load balancing (MS-SS-7)

                                                                                                •    All programs supporting the load balancing function should be decoupled from individual
                                                                                                     service requests. For example, the program that performs health checks on services to
                                                                                                     determine the load balancing pool should run asynchronously in the background.
                                                                                                •    Care must be taken to protect the network connection between the load balancer and the
                                                                                                     microservice platform.
                                                                                                •    When a DNS resolver is deployed in front of a source microservice to provide a table of
                                                                                                     available target microservice instances, it should work in tandem with the health check
                                                                                                     program to present a single list to the calling microservice.

                                                                                             4.5.3   Rate Limiting (Throttling)

                                                                                             The primary goal of rate limiting is to ensure that a service is not oversubscribed impacting
                                                                                             availability. That is, when one client increases the rate of requests, the service continues its
                                                                                             response to other clients. This is achieved by setting a limit on how often a client can call a
                                                                                             service within a defined window of time. When the limit is exceeded, the client—rather than
                                                                                             receiving an application-related response—receives a notification that the allowed rate has been
                                                                                             exceeded as well as additional data regarding the limit number and the time at which the limit
                                                                                             counter will be reset for the requestor to resume receiving responses. A secondary goal of rate
                                                                                             limiting is to mitigate the impact of Denial of Service attacks. Closely related to the concept of
                                                                                             rate limiting is quota management or conditional rate limiting where limits are determined based
                                                                                             on application requirements rather than infrastructure limitations or requirements.

                                                                                             Security strategies for rate limiting (MS-SS-8)

                                                                                                •    Quotas or limits for application usage should be based on both infrastructure and
                                                                                                     application-related requirements.
                                                                                                •    Limits should be determined based on well-defined API usage plans.


                                                                                                                                             24
