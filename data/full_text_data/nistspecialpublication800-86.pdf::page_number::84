GUIDE TO INTEGRATING FORENSIC TECHNIQUES INTO INCIDENT RESPONSE



    ! Links. Also known as shortcuts, links are simply pointers to something else, such as an
      executable. Links are most frequently used on Windows systems; for example, the items listed
      on the Start menu are really links to programs. By examining the properties of a link, an analyst
      can determine what program the link runs, where the program is, and what options (if any) are
      set.
    ! Graphics. These files may include standalone graphics used by the application, as well as
      graphics for icons. Although application graphics are typically of little interest to an analyst, icon
      graphics may be of interest for identifying which executable was running.
7.1.6   Application Architecture

Every application has an architecture, which refers to the logical separation of its components and the
communication mechanisms used between components. Most applications are designed to follow one of
three major application architecture categories, as follows:

    ! Local. A local application is intended to be contained mainly within a single system. The code,
      configuration settings, logs, and supporting files are located on the user’s system. Local
      applications are unlikely to perform authentication. Application data may be contained on the
      user’s system or another system (e.g., file server) and usually cannot be modified simultaneously
      by multiple users. Examples of local applications are text editors, graphics editors, and office
      productivity suites (e.g., word processor, spreadsheet).
    ! Client/Server. A client/server application is designed to be split among multiple systems. A
      two-tiered client/server application stores its code, configuration settings, and supporting files on
      each user’s workstation, and its data on one or more central servers accessed by all users. Logs
      are most likely stored on the workstations only. A three-tiered client/server application separates
      the user interface from the rest of the application, and also separates the data from the other
      components. The classic three-tier model places the user interface code on the client workstation
      (along with some supporting files), the rest of the application code on an application server, and
      the data on a database server. Many Web-based applications use four-tier models: Web browser,
      Web server, application server, and database server. Each tier interacts only with the adjacent
      tiers, so in three and four-tier models, the client does not interact directly with the database
      server. Examples of typical client/server applications are medical records systems, e-commerce
      applications, and inventory systems.
    ! Peer-to-Peer. A peer-to-peer application is designed so that individual client hosts directly
      communicate and share data with each other. Typically, the clients first communicate with a
      centralized server that provides information about other clients; this information is then used to
      establish direct connections that do not need to go through the centralized server. Examples of
      peer-to-peer applications are certain file sharing, chat, and IM programs. However, some
      programs of these types, while popularly referred to as peer-to-peer, are actually client/server,
      because the clients communicate with a centralized server, instead of communicating directly
      with each other.
Most applications are quite flexible in terms of architecture. For example, many client/server applications
can have multiple tiers installed on a single system. Especially during application demonstrations or
testing, all tiers might be installed on one system. On the other hand, some local applications can be split
among systems, with some components on local systems and some on remote systems. Applications
often make it easy to specify where different components should be installed and where data and
configuration files should be stored. For many applications, there can be a great deal of variety among
deployments.



                                                    7-4
