                                                                                              NIST SP 800-204C                                             DEVSECOPS FOR A MICROSERVICES-BASED
                                                                                                                                                                  APPLICATION WITH SERVICE MESH

                                                                                                     o Enable several security assertions regarding the application: non-bypassable (i.e.,
                                                                                                       policies always enforced under all usage scenarios), trusted and untrusted portions of
                                                                                                       the overall application code, absence of credential and privilege leaks, trusted
                                                                                                       communication paths, and secure state transitions.
                                                                                                     o Enable assertions regarding performance parameters (e.g., network resilience
                                                                                                       parameters, such as continued operation under failures, redundancy, and recoverability
                                                                                                       features).
                                                                                                     o Overall, faster incorporation of feedback, results in quicker software improvements

                                                                                              4.10 Leveraging DevSecOps for Continuous Authorization to Operate (C-ATO)
This publication is available free of charge from: https://doi.org/10.6028/NIST.SP.800-204C




                                                                                              In the reference platform, the runtime status or execution state of the entire application system is
                                                                                              due to a combination of executions of infrastructure code (e.g., networking routes for inter-
                                                                                              service communication, resources provisioning code), policy code (e.g., code that specifies
                                                                                              authentication and authorization policies), and session management code (e.g., code that
                                                                                              establishes an mTLS session, code that generates JWT tokens) as revealed by the execution of
                                                                                              observability as code. The observability as code of the service mesh relays the output from the
                                                                                              execution of infrastructure, policy, and session management codes during runtime to various
                                                                                              monitoring tools that generate applicable metrics and log aggregation tools and tracing tools,
                                                                                              which in turn relay their output to a centralized dashboard. The analytics that are integral to the
                                                                                              output of these tools enable system administrators to obtain a comprehensive global view of the
                                                                                              runtime status of the entire application system. It is the runtime performance of a DevSecOps
                                                                                              platform enabled through continuous monitoring with zero trust design features that provides all
                                                                                              of the necessary security assurance for cloud-native applications.

                                                                                              The activities in the DevSecOps pipelines that enable continuous ATO are:
                                                                                              •   Checking for compliant code: The following codes can be checked for compliance with a
                                                                                                  Risk Management Framework
                                                                                              (a) IaC – Generate network routes, Resource provisioning
                                                                                              (b) Policy as Code – Encodes AuthN and AuthZ policies
                                                                                              (c) Session Management Code – mTLS session, JWT tokens
                                                                                              (d) Observability code
                                                                                              Specific risk assessment features include the capability to generate actionable tasks, specify code-
                                                                                              level guidance, and test plans for verifying compliance [38]. In addition, risk assessment tools
                                                                                              can provide complete traceability for all of the artifacts displayed in the dashboard, as well as the
                                                                                              reporting capabilities needed for continuous ATO.

                                                                                              •   Dashboard that displays runtime status: Provides alerts and feedback necessary to fix security
                                                                                                  and performance bottleneck issues (that impact availability) by the process that triggers new
                                                                                                  pipelines. In addition, dashboard generation tools have features that enable system
                                                                                                  administrators to analyze macro-level features, as well as dynamically change the
                                                                                                  composition of the artifacts to be displayed based on the evolving system and consumer needs
                                                                                                  of the environment in which the application operates.


                                                                                                                                               30
