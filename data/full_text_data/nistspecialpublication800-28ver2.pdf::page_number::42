                                                                GUIDELINES ON ACTIVE CONTENT AND MOBILE CODE



5.1.7   Isolation

Isolation can be applied at various levels. The simplest is complete isolation at the system level. A
production computer system that is unable to receive active content documents cannot be affected by
malicious hidden code. Although isolating a system physically is not always possible, logical isolation
(e.g., via router settings or firewall controls) may be applied.

Virtualization takes logical isolation one step further, allowing multiple OSs to coexist on a computing
platform. In virtualization, special purpose software successfully replicates the behavior of hardware.
Through such methods, a single physical host computer can run multiple virtual machines, each with a
distinct guest OS and associated applications. Various virtualization products exist that can be used to
provide an isolated virtual machine environment for systems and applications to execute. Risky
functions, such as Web browsing, may be confined to a virtual machine environment designated and
configured exclusively for that purpose. This presumes that the virtualization software controlling the
various virtual machine environments has adequate security [Gar07]. Should a virtual machine
environment be compromised or become suspect, it can be replaced with the original version. Virtual
machine technology is improving constantly. New versions of mainstream OSs are being designed with
virtualization in mind and new x86 64-bit processors provide hardware-level support for virtualization.

Isolating tightly bounded, proprietary program components is another alternative. Seamless
interoperation of products such as email, Web browsers, and office applications is a goal of product
manufacturers. To provide better functionality or performance, manufacturers often allow products
within their product line to take advantage of proprietary interfaces, which may not benefit from the
widespread testing and scrutiny standard interfaces and protocols receive. By integrating products from
different manufacturers, one can effectively induce those program components to use standard
documented interfaces.

5.1.8   Minimal Functionality

Security is inversely related to complexity â€“ the more complex a system, the more difficult it is to secure.
Therefore, the functionality of a system should be reduced to the minimum needed to carry out its
operation. Prudent users and administrators should remove unnecessary applications and program
components to reduce complexity and shut off possible avenues of attack. Although a system
configuration may have a function logically disabled, a clever attacker may be able to alter the settings to
enable the functionality and then use it in an exploit.

On the browser side, unnecessary plug-ins or ActiveX controls should be removed. It is also
recommended to substitute programs with lesser functionality in lieu of fully capable helper applications
or plug-ins. Manufacturers of desktop applications often provide free software readers for electronic
documents encoded in their proprietary file formats, for interpretation by recipients who do not own the
application. Adobe Acrobat Reader, for example, allows users to view and print PDF files, but does not
allow users to create or edit them. Since software readers are only intended to produce a viewable
rendition of the document and have limited inherent capabilities, they eliminate many potentially harmful
features and exploits based on implementation vulnerabilities contained in the full-fledged application.
Besides manufacturer-provided readers, general-purpose software readers are commercially available that
can render dozens of different file formats. A related measure is the selection of less capable types of
active content documents, when multiple choices are available. Some Web sites offer an electronic
document in a variety of formats such as proprietary word processor format, HTML markup, PostScript,
or PDF. Users should take the opportunity to choose the most benign format for their operating
environment.




                                                    5-5
