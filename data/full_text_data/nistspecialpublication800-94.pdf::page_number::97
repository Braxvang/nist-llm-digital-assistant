                                                          GUIDE TO INTRUSION DETECTION AND PREVENTION SYSTEMS (IDPS)



Exposures (CVE) numbers, 54 which provide universal identifiers for vulnerabilities, and possibly other
references such as vendor security advisories.

9.2.3    Detection Capabilities

Organizations should carefully evaluate the detection capabilities of each IDPS solution being evaluated.
For many implementations, the detection capabilities are the most important function. Comparing
detection capabilities is a complex undertaking because each product typically performs detection of a
somewhat different set of events using different methodologies. Factors that organizations should
consider in their IDPS evaluations include the following:

 Which types of activities it currently analyzes fully and analyzes partially, as well as future plans for
  additional analysis capabilities. Examples are as follows:

     –   For network-based IDPS, a listing of the network, transport, and application layer protocols
         analyzed, and an explanation of the amount of analysis performed on each (e.g., signature-based
         detection, anomaly-based detection, stateful protocol analysis)

     –   For host-based IDPS, a listing of the specific resources that can be monitored (e.g., log files,
         system files, network interfaces) and an explanation of how each is monitored (e.g., after-the-fact
         detection of changes, active handling of file access requests, TCP/IP stack monitoring)
 What types of incidents it can identify, such as denial of service [DoS] attacks, backdoors, policy
  violations, port scans, malware (e.g., worms, Trojan horses, rootkits, malicious mobile code), and
  unauthorized application/protocol use.
 How comprehensive its detection is for each type of incident it can identify (e.g., how many worms,
  how many types of DoS attacks).
 How effective its default, out-of-the-box configuration is. When an IDPS is first activated, its default
  settings should be reasonable. For example, signatures or policies that tend to generate large numbers
  of false positives should be disabled, and signatures or policies that are reliable and identify important
  recent attacks should be enabled. Detection thresholds (e.g., x instances in y minutes) should be set to
  values that attempt to balance false positives and false negatives. Also, features that are particularly
  resource-intensive should be disabled.
 How effective it is at detecting known malicious events, such as attacks, scans, or malware.
  Signature-based detection techniques typically perform better than anomaly detection and stateful
  protocol analysis techniques in recognizing known events. This should include the IDPS’s ability to
  state precisely which exploit was performed and which vulnerability was targeted (e.g., CVE
  reference identifier).
 How effective it is at detecting previously unknown malicious events, such as new attacks or variants
  on existing attacks, without reconfiguring or updating the IDPS. Anomaly detection and stateful
  protocol analysis techniques typically perform better than signature-based detection techniques in
  recognizing unknown events.
 How effective it is at detecting known and unknown malicious events that have been concealed
  through evasion techniques. Examples of such techniques include unusual IP packet fragmentation,
  non-standard application port use, and alternate character sets or other character encoding.
54
     More information on CVE is available from NIST SP 800-51, Use of the Common Vulnerabilities and Exposures (CVE)
     Vulnerability Naming Scheme, which is located at http://csrc.nist.gov/publications/nistpubs/, and the CVE Web site at
     http://cve.mitre.org/.


                                                             9-5
