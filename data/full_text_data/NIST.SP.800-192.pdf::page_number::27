                                                                                             NIST SP 800-192                                                    VERIFICATION & TEST METHODS FOR
                                                                                                                                                                ACCESS CONTROL POLICIES/MODELS

                                                                                             which are seeped through the specification of the safety requirement by applying white box
                                                                                             checking on mutated versions of the model. The second step is to detect unexpected access
                                                                                             permission that might not be the intention of the policy author, by applying model checking on
                                                                                             modified rules extracted from the original ones.

                                                                                             Rule coverage checking

                                                                                             The key notion of rule coverage checking is to synthesize a version of the given model in such a
                                                                                             way that the permission of its rules is mutated such that rule r is changed to ~r. If safety
                                                                                             requirements are satisfied by both mutated and original models through model checking, then some
                                                                                             of the rules and their mutants would never be applied to the safety requirements; in other words,
                                                                                             the safety requirements do not cover all the rules in the model.
This publication is available free of charge from: https://doi.org/10.6028/NIST.SP.800-192




                                                                                             As an example in Figure 8, the safety and liveness checking verify that the model conforms the
                                                                                             safety requirement AG (q = = i) → access = grant without counterexamples; however, by
                                                                                             applying the CCC by mutating the rule u == j :grant to u == j : deny for the coverage checking,
                                                                                             the result shows that the safety requirement satisfies the mutated rules as well (without
                                                                                             counterexamples), indicating that the variable u was never applied to the safety requirement AG
                                                                                             (q = = i) → access = grant.

                                                                                                          NEXT_STATE(q):= CASE {
                                                                                                            x :i
                                                                                                            ….
                                                                                                          }



                                                                                                          NEXT_STATE(access):= CASE {
                                                                                                                                                        NEXT_STATE(access):= CASE {
                                                                                                            u == j :grant
                                                                                                                                                        u == j :deny
                                                                                                            g == I : grant
                                                                                                                                                        g == I : deny
                                                                                                            OTHERWISE: deny           Mutant            OTHERWISE: grant
                                                                                                            ……
                                                                                                                                                          ……
                                                                                                          }
                                                                                                                                                        }

                                                                                                          ……
                                                                                                          .
                                                                                                          AG (q == i) → access = grant



                                                                                                                       Figure 8 Example of uncovered rules in a AC model


                                                                                             This result shows that the rule u == j : grant is not verified with the property AG (q == i) →
                                                                                             access = grant. One way of addressing this insufficiency is by adding a new property that
                                                                                             describes proper control of u. Note that it is necessary to check every rule in the model against all
                                                                                             safety requirement to achieve thorough verification.

                                                                                             Property confinement checking

                                                                                             Property confinement checking ensures that there is no exceptional permission allowed in addition
                                                                                             to the specified safety requirement; this checking requires a modified safety requirement to be

                                                                                                                                              20
