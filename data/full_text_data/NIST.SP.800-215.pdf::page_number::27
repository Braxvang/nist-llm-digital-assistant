NIST SP 800-215                                                           Guide to a Secure Enterprise
November 2022                                                                     Network Landscape

each segment can be monitored and controlled [21]. The primary purpose of microsegmentation
is to provide a degree of isolation to prevent attack escalation.
Capabilities enabled by microsegmentation include:
   •   Segments being isolated and relatively small enables close monitoring of the traffic
       because of better visibility.
   •   The consequence of the above capability is that granular access control is possible by
       defining associated policies.
The above capabilities restrict the unauthorized lateral movement of a user or application that has
either (a) breached the perimeter to enter the internal network or (b) been initiated by users
within the internal network itself.

5.1.1 Prerequisites for Implementing Microsegmentation
   •   Creation of application identity: The fundamental requirement to enable this is the
       assignment of a unique identity to each application or service, just like how each user
       carries a unique identity (e.g., userid). Prior to the era of cloud-based applications, the
       application requests were validated based on the IP subnet or IP address from which they
       originated. Ubiquitous access and multi-clouds have eliminated the concept of network
       perimeters. Hence, authentication and authorization based on those parameters are neither
       feasible nor scalable. Further, the presence of proxies, network address translation,
       dynamic infrastructure (e.g., migration of applications between VMs), and load balancers
       make it impossible for the called application to know the IP address of the calling
       application in order to make authentication or authorization decisions. A unique
       application identity is inevitable.
   •   Establishment of trust in application identity: The created application (workload or
       service) identity should not be subject to spoofing and should be continuously verifiable.
       An example of workload identity is a SPIFFE ID [47]. A SPIFFE ID is a string that
       uniquely and specifically identifies a workload and encoded as a Uniform Resource
       Identifier (URI), which takes the following format: spiffe://trust domain/workload
       identifier where the workload identifier uniquely identifies a specific workload within
       a trust domain. The SPIFFE ID is carried in a cryptographically-verifiable document
       called a SVID (SPIFFE Verifiable Identity Document). The two formats supported for
       SVID in SPIFFE specification are a short-lived X.509 certificate or a Java Web Token
       (JWT) token.
   •   Discovery of application resources: There should be a robust secure method for
       discovering all application resources (e.g., services, networks), called service discovery
       capability.
   •   Segmentation of workloads: Security requirements for all applications and services must
       be identified and groupings established based on identical security requirements.
   •   Mapping of logical application groupings to physical or virtual infrastructures:
       Application-centric groupings must be mapped to physical or virtual infrastructures that




                                                18
