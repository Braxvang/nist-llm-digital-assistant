NIST SP 800-52 REV. 2                                                              GUIDELINES FOR TLS IMPLEMENTATIONS


2.6     Anti-Replay

TLS provides inherent protection against replay attacks, except when 0-RTT data (optionally
sent in the first flight of handshake messages) is sent in TLS 1.3. 6 The integrity-protected
envelope of the message contains a monotonically increasing sequence number. Once the
message integrity is verified, the sequence number of the current message is compared with the
sequence number of the previous message. The sequence number of the current message must be
greater than the sequence number of the previous message in order to further process the
message.

2.7     Key Management

The security of the server’s private key is critical to the security of TLS. If the server’s private
key is weak or can be obtained by a third party, the third party can masquerade as the server to
all clients. Similarly, if a third party can obtain a public-key certificate for a public key
corresponding to its own private key in the name of a legitimate server from a certification
authority (CA) trusted by the clients, the third party can masquerade as the server to the clients.
Requirements and recommendations to mitigate these concerns are addressed later in these
guidelines.

Similar threats exist for clients. If a client’s private key is weak or can be obtained by a third
party, the third party can masquerade as the client to a server. Similarly, if a third party can
obtain a public-key certificate for a public key corresponding to his own private key in the name
of a client from a CA trusted by the server, the third party can masquerade as that client to the
server. Requirements and recommendations to mitigate these concerns are addressed later in
these guidelines.

Since the random numbers generated by the client and server contribute to the randomness of the
session keys, the client and server must be capable of generating random numbers with at least
112 bits of security 7 each. The various TLS session keys derived from these random values and
other data are valid for the duration of the session. Because the session keys are only used to
protect messages exchanged during an active TLS session and are not used to protect any data at
rest, there is no requirement for recovering TLS session keys. However, all versions of TLS
provide mechanisms to store a key related to a session, which allow sessions to be resumed in the
future. Keys for a resumed session are derived during an abbreviated handshake that uses the
stored key as a form of authentication.




6 While TLS 1.3 does not inherently provide replay protection with 0-RTT data, the TLS 1.3 specification does recommend

  mechanisms to protect against replay attacks (see Section 8 of [57]).

7 See the SP 800-90 series for more information on random bit generators (https://csrc.nist.gov/projects/random-bit-generation).




                                                                7
