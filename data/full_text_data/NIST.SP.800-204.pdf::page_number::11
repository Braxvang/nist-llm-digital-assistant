                                                                                             NIST SP 800-204                                                            SECURITY STRATEGIES FOR
                                                                                                                                                        MICROSERVICES-BASED APPLICATION SYSTEMS

                                                                                             2         Microservices-based Application Systems: Technology Background

                                                                                             In this section, the technology behind the development and deployment of a microservices-based
                                                                                             application system will be described using the underlying design drivers or principles, the
                                                                                             artifacts that constitute the building blocks, and the different ways the building blocks can be
                                                                                             configured to produce different deployment options. This is not meant to be a comprehensive
                                                                                             description of the technology but provides sufficient information about components and concepts
                                                                                             to facilitate the identification of security threats and the development of secure implementation
                                                                                             strategies for a microservices-based application system.

                                                                                             2.1       Microservices: A Conceptual View
This publication is available free of charge from: https://doi.org/10.6028/NIST.SP.800-204




                                                                                             A microservices-based application system consists of multiple components (microservices) that
                                                                                             communicate with each other through synchronous remote procedure calls or an asynchronous
                                                                                             messaging system. Each microservice typically implements one (rarely more) distinct business
                                                                                             process or functionality (e.g., storing customer details, storing and displaying a product catalog,
                                                                                             customer order processing etc.). Each microservice is a mini-application that has its own
                                                                                             business logic and various adapters for carrying out functions such as database access and
                                                                                             messaging. Some microservices would expose a Representational State Transfer (REST)ful API
                                                                                             [1] that is consumed by other microservices or by the application’s clients [2]. Other
                                                                                             microservices might implement a web User Interface (UI). At runtime, a microservice instance
                                                                                             may be configured to run as a process in an application server, in a virtual machine (VM), or in a
                                                                                             container.

                                                                                             Though a microservices-based application can be implemented purely as an enterprise
                                                                                             application and not as a cloud service, it is often identified as a cloud-native application with a
                                                                                             service-based architecture, application programming interface (API)-driven communications,
                                                                                             container-based infrastructure, and a bias for DevOps (Combination of Development and
                                                                                             Operations) processes such as continuous improvement, agile development, continuous delivery,
                                                                                             and collaborative development among developers, quality assurance teams, security
                                                                                             professionals, IT operations, and line-of-business stakeholders [3]. Part of the reason for this
                                                                                             perspective is due to the fact that on-premises software development and deployment relies on a
                                                                                             server-centric infrastructure with tightly integrated application modules rather than on loosely
                                                                                             coupled, services-based architectures with API-based communications.

                                                                                             2.2       Microservices: Design Principles

                                                                                             The design of a microservice is based on the following drivers [4]:

                                                                                                   •    Each microservice must be managed, replicated, scaled, upgraded, and deployed
                                                                                                        independently of other microservices.
                                                                                                   •    Each microservice must have a single function and operate in a bounded context (i.e.,
                                                                                                        have limited responsibility and dependence on other services).
                                                                                                   •    All microservices should be designed for constant failure and recovery and must
                                                                                                        therefore be as stateless as possible.

                                                                                                                                                3
