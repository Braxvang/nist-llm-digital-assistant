                                                                                                 NIST SP 800-57 PART 1 REV. 5                                       RECOMMENDATION FOR KEY MANAGEMENT:
                                                                                                                                                                                       PART 1 – GENERAL

                                                                                                 Many algorithms and schemes that provide a security service use a hash function as a component
                                                                                                 of the algorithm (i.e., a hash function is used as a building block). For example:
                                                                                                       1. To provide source and integrity authentication services, the hash function is used with a
                                                                                                          key to generate a message authentication code (MAC) (see item 2 in Section 4.2),
                                                                                                       2. To compress messages for digital signature generation and verification (see item 1 in
                                                                                                          Section 4.3),
                                                                                                       3. To derive keys from pre-shared keys (see item 3 in Section 4.2),
                                                                                                       4.    To derive keys using asymmetric key-establishment algorithms (see item 2 in Section 4.3),
                                                                                                            and
This publication is available free of charge from: https://doi.org/10.6028/NIST.SP.800-57pt1r5




                                                                                                       5. To generate random numbers (see Section 4.4).
                                                                                                 4.2        Symmetric-Key Algorithms
                                                                                                 Symmetric-key algorithms (sometimes known as secret-key algorithms) transform data in a way
                                                                                                 that is fundamentally difficult to undo without knowledge of a secret key. The key is “symmetric”
                                                                                                 because the same key is used for a cryptographic operation and its inverse (e.g., for both encryption
                                                                                                 and decryption). Symmetric keys are often known by more than one entity; however, the key shall
                                                                                                 be generated using a random process and shall not be disclosed to entities that are not authorized
                                                                                                 access to the data protected by that algorithm and key.
                                                                                                 Two classes of symmetric-key algorithms have been approved: those based on block cipher
                                                                                                 algorithms (e.g., AES, as specified in FIPS 197) and those based on the use of hash functions
                                                                                                 (e.g., a keyed-hash message authentication code, as specified in FIPS 198). SP 800-175B
                                                                                                 provides discussions on each algorithm type as well as the modes of operation that are used with
                                                                                                 block cipher algorithms.
                                                                                                 Symmetric-key algorithms are used, for example, to:
                                                                                                       1. Provide data confidentiality – the same key is used to encrypt and decrypt data, 25
                                                                                                       2. Provide source and integrity authentication services in the form of message authentication
                                                                                                          codes (MACs) 26 − the same key is used to generate the MAC and to validate it (MACs
                                                                                                          normally employ either a symmetric-key algorithm or a cryptographic hash function as
                                                                                                          their cryptographic primitive),
                                                                                                       3. Derive keying material from a pre-shared key using a key-derivation method, 27
                                                                                                       4. Derive a key from a shared secret during the use of an asymmetric key-agreement
                                                                                                          scheme, 28




                                                                                                 25
                                                                                                    For example, see FIPS 197, SP 800-38A, SP 800-38C, and SP 800-38D.
                                                                                                 26
                                                                                                    For example, see CMAC, as specified in SP 800-38B; HMAC, as specified in FIPS 198 using a hash function; and
                                                                                                    KMAC, as specified in SP 800-185.
                                                                                                 27
                                                                                                    See SP 800-108.
                                                                                                 28
                                                                                                    See SP 800-56A and SP 800-56B.



                                                                                                                                                       28
