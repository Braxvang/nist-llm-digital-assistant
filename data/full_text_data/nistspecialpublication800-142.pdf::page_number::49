                                                          Practical Combinatorial Testing
 _______________________________________________________
is needed to ensure that the screen information is properly displayed. However, we can do
very thorough testing of the most critical aspects of the withdrawal module.

Requirements for the module are as follows:

       1. Some accounts have a minimum balance requirement, indicated by boolean
          variable minflag.
       2. The bank allows all customers a basic overdraft protection amount, but for a
          fee, customers may purchase overdraft protection that exceeds the default.
       3. If the account has a minimum balance, the withdrawal cannot reduce account
          balance below (minimum balance â€“ overdraft default) unless
          overdraft protection is set for this account and the allowed overdraft amount for
          this account exceeds the default, in which case the balance cannot be reduced
          below (minimum balance â€“ overdraft amount).
       4. No withdrawals may exceed the default limit (to keep the ATM from running
          out of cash), although some customers may have a withdrawal limit below this
          amount, such as minors who have an account with limits placed by parents.
       5. The overdraft privilege can be used only once until the balance is made positive
          again.
       6. Cards flagged as stolen are to be captured and logged in the hot card file. No
          withdrawal is allowed for a card flagged as stolen.

The module has these inputs from the user after the user is authorized by another module:

       string num: the user card number
       int amt: withdrawal amount requested

and these inputs from the system:

       int balance: user account balance
       boolean minflag: account has minimum balance requirement
       int min: account minimum balance
       boolean odflag: account has overdraft protection
       int odamt: overdraft protection amount,
       int oddefault: overdraft default
       boolean hot: card flagged as stolen
       boolean limflag: withdrawal limit less than default
       int limit: withdrawal limit for this account
       int limdefault: withdrawal limit default

How should these requirements be translated into assertions and used in testing? Consider
requirement 1: if minflag is set, then the balance before and after the withdrawal must be
no less than the minimum balance amount. This could be translated directly into logic for
assertions: minflag => balance >= min.              If the assertion facility does not include
logical implication, then the equivalent expression can be used, for example, in C syntax:
!minflag || balance >= min.




                                                                                                 43
