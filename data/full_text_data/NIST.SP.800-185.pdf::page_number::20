                                                                                             NIST SP 800-185                                                            SHA-3 DERIVED FUNCTIONS: CSHAKE,
                                                                                                                                                                       KMAC, TUPLEHASH, AND PARALLELHASH

                                                                                             6          ParallelHash

                                                                                             6.1        Overview

                                                                                             The purpose of ParallelHash 10 is to support the efficient hashing of very long strings, by taking
                                                                                             advantage of the parallelism available in modern processors. ParallelHash supports the 128- and
                                                                                             256-bit security strengths, and also provides variable-length output. Changing any input
                                                                                             parameter to ParallelHash, even the requested output length, will result in unrelated output. Like
                                                                                             the other functions defined in this document, ParallelHash also supports user-selected
                                                                                             customization strings.

                                                                                             6.2        Parameters
This publication is available free of charge from: https://doi.org/10.6028/NIST.SP.800-185




                                                                                             ParallelHash takes the following parameters:

                                                                                                    •    X is the main input bit string. It may be of any length 11, including zero.
                                                                                                    •    B is the block size in bytes for parallel hashing. It may be any integer such that 0 < B <
                                                                                                         22040.
                                                                                                    •    L is an integer representing the requested output length in bits.
                                                                                                    •    S is an optional customization bit string of any length, including zero. If no customization
                                                                                                         is desired, S is set to the empty string.

                                                                                             6.3        Definition

                                                                                             ParallelHash divides the input bit string X into a sequence of contiguous, non-overlapping
                                                                                             blocks, each of length B bytes, and then computes the hash value for each block separately.
                                                                                             Finally, these hash values are combined and passed to cSHAKE along with the function name
                                                                                             (N) of "ParallelHash" = 00001010 10000110 01001110 10000110 00110110
                                                                                             00110110 10100110 00110110 00010010 10000110 11001110 00010110, the
                                                                                             optional customization string S, and some encoded integer values (as shown below in the
                                                                                             pseudocode), to generate the final hash value of the function.

                                                                                             The ParallelHash functions are defined in pseudocode as follows:

                                                                                             ParallelHash128(X, B, L, S):
                                                                                             Validity Conditions: 0 < B < 22040 and ⌈ len(X)/B ⌉ < 22040 and
                                                                                                                  0 ≤ L < 22040 and len(S) < 22040

                                                                                             1. n = ⌈ (len(X)/8) / B ⌉.

                                                                                             10
                                                                                                   A generic parallel hash mode for other NIST-approved hash functions may be developed in the future. The
                                                                                                  function here (i.e., ParallelHash) is specifically based on cSHAKE, and thus, on KECCAK.

                                                                                             11
                                                                                                   Where ⌈ len(X)/B ⌉ < 22040 and B is the block size in bytes as defined in Sec. 6.2. As specified in Footnote 2,
                                                                                                  NIST will treat such absurdly large limit as interchangeable with having no limit at all.




                                                                                                                                                       14
