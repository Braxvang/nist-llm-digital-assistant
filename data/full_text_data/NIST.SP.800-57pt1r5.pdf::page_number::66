                                                                                                 NIST SP 800-57 PART 1 REV. 5                                      RECOMMENDATION FOR KEY MANAGEMENT:
                                                                                                                                                                                      PART 1 – GENERAL

                                                                                                        schemes, key-agreement schemes using Diffie-Hellman and MQV, 67 and the key-agreement
                                                                                                        and key-transport schemes using RSA may need to be replaced with secure quantum-resistant
                                                                                                        (or “post-quantum”) counterparts. At the time that this revision of the Recommendation was
                                                                                                        published, NIST was undergoing a process to select post-quantum cryptographic algorithms
                                                                                                        for standardization. This process is a multi-year project; when these new standards are
                                                                                                        available, this Recommendation will be updated with the appropriate guidance. Information
                                                                                                        on the post-quantum project is available at https://csrc.nist.gov/projects/post-quantum-
                                                                                                        cryptography.
                                                                                                 The use of strong cryptographic algorithms is critical for cryptographic security. However, their
                                                                                                 implementation and use are also of vital concern since algorithms may unintentionally be
This publication is available free of charge from: https://doi.org/10.6028/NIST.SP.800-57pt1r5




                                                                                                 implemented in a manner that leaks small amounts of information about the key. In this case, a
                                                                                                 larger key may reduce the likelihood that this leaked information will eventually compromise that
                                                                                                 key.
                                                                                                 5.6.1.1       Security Strengths of Symmetric Block Cipher and Asymmetric-Key Algorithms
                                                                                                 The approved symmetric-key block ciphers (e.g., AES) and public-key (i.e., asymmetric-key)
                                                                                                 algorithms require the use of cryptographic keys. Security-strength estimates were made under the
                                                                                                 assumption that the keys are a specified length and are generated and handled in accordance with
                                                                                                 specific rules (e.g., the keys are generated using RBGs that were seeded with sufficient entropy
                                                                                                 and meet certain criteria). However, these rules are often not followed, and the security provided
                                                                                                 to the data protected by those keys may be somewhat less than the security-strength estimates
                                                                                                 provided (see Section 5.6.2).
                                                                                                 Two algorithms are considered to be of comparable strength for the given key sizes (X and Y) if
                                                                                                 the amount of work needed to “break the algorithms” or determine the keys (with the given key
                                                                                                 sizes and sufficient entropy) is approximately the same using a given resource. The security
                                                                                                 strength of an algorithm for a given key size is traditionally described in terms of the amount of
                                                                                                 work it takes to try all keys for a symmetric-key algorithm with a key size of “X” that has no
                                                                                                 shortcut attacks (i.e., the most efficient attack is to try all possible keys). In this case, the best attack
                                                                                                 is said to be an exhaustion attack. An algorithm that has a Y-bit key and an estimated maximum
                                                                                                 security strength that is comparable to a symmetric-key algorithm with an X-bit key is said to have
                                                                                                 an “estimated maximum security strength of X bits” or to be able to provide “X bits of security.”
                                                                                                 Given a few plaintext blocks and the corresponding ciphertext, an algorithm that can provide X
                                                                                                 bits of security would, on average, take 2X-1T units of time to attack, where T is the amount of time
                                                                                                 that is required to perform one encryption of a plaintext value and compare the result against the
                                                                                                 corresponding ciphertext value.
                                                                                                 Determining the security strength of an algorithm can be nontrivial. The strength depends on many
                                                                                                 factors, including the attacker’s capabilities, the key lengths, the amount of data processed using
                                                                                                 the same key, and how closely keys are related. The attacker's capabilities could include the
                                                                                                 cryptanalysis techniques used to reduce the time to attack an algorithm, the processing power
                                                                                                 available to the attacker, and the advent of new types of computing systems (e.g., quantum
                                                                                                 computers).




                                                                                                 67
                                                                                                      Both finite field and elliptic curve versions.


                                                                                                                                                       53
