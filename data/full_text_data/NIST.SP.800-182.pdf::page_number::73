Co nfo r m a n ce Ve r ific at ion for Access                                             To address the issue, CSD developed the Access Control
Co nt ro l Po l i c i es                                                             Property Tool (ACPT), shown in Figure 22 (next page),
     Access control (AC) systems are among the most                                  which allows a user to compose, verify, test, and generate
critical network security components. Faulty policies,                               access control policies. CSD also researched the AC Rule
misconfigurations, or flaws in software implementation can                           Logic Circuit Simulation (ACRLCS) technique, which enables
result in serious vulnerabilities. The specification of access                       the AC authors to detect a fault when the fault-causing AC
control policies is often a challenging problem. Often, a                            rule is added to the policy, so the fix can be implemented in
system’s privacy and security are compromised due to the                             real time before adding other rules that further complicate
misconfiguration of access control policies, instead of the                          the detecting effort, rather than checking by retracing the
failure of cryptographic primitives or protocols. This problem                       interrelations between rules after the policy is completed.
becomes increasingly severe as software systems become                                   In FY 2015, CSD accomplished the following:
more and more complex, and are deployed to manage a large
                                                                                     •    ublished a conference paper for policy tool evaluation
                                                                                         P
amount of sensitive information and resources organized
                                                                                         and analysis: Evaluating and Capability and Perfor-
into sophisticated structures. Identifying discrepancies
                                                                                         mance of Access Control Policy Verification Tools;
between policy specifications and their properties (their
intended function) is crucial because correct implementation                         •    eveloped verification oracles for policy test bench-
                                                                                         D
and enforcement of policies by applications is based on the                              marking, which embed policy faults for committee,
premise that the policy specifications are correct. As a result,                         university, hospital, and bank policy test scenarios;
policy specifications must undergo rigorous verification and                         •    eveloped a Small Business Innovation Research
                                                                                         D
validation through systematic testing to ensure that the                                 (SBIR) solicitation for access control tool development;
policy specifications truly encapsulate the desires of the
                                                                                     •    nhanced the ACRLCS − the Access Control Rule Logic
                                                                                         E
policy authors.
                                                                                         Circuit Simulation System;
     To formally and precisely capture the security properties
                                                                                     •    ublished a conference paper for policy test case gen-
                                                                                         P
that AC should adhere to, access control models are usually
                                                                                         eration: Pseudo-exhaustive Testing of Attribute-Based
written to bridge the rather wide gap in abstraction between
                                                                                         Access Control Rules;
policy and mechanism. Thus, an access-control model
provides unambiguous and precise expression, as well as                              •    orked with industrial and academic organizations in
                                                                                         W
a reference for the design and implementation of security                                exploring new capabilities that helped to improve the
requirements. Techniques are required for verifying whether                              usability of the AC tools (ACPT and ACRLCS), resulting
an access-control model is correctly expressed in the access-                            in additional usage; ACPT was downloaded by 343
control policies, and whether the properties are satisfied in                            users and organizations; and,
the model.                                                                           •    nhanced the capability of ACPT by improving policy
                                                                                         E
     Most research on AC model or policy verification                                    combination algorithms and adding test oracles for
techniques is focused on one particular model, and almost                                basic access control models.
all of the research is in applied methods, which require the                             In FY 2016, CSD is planning to conduct further research
completed AC policies as the input for verification or test                          on the new capabilities and enhance the performance of the
processes to generate fault reports. Even though correct                             ACPT and ACRLCS.
verification is achieved, and counter-examples may be
                                                                                         Figure 22 (next page) shows the system architecture
generated when faults were found, those methods provide
                                                                                     of the NIST access control policy tool: ACPT, which allows
no information about the source of faults that might allow
                                                                                     access control policy authors to compose, verify, and test
conflicts in privilege assignment, the leakage of privileges, or
                                                                                     access control policy implementation.
conflict of interest permissions. The difficulty in finding the
source of faults is increased, especially when the AC rules                              This project is expected to:
are intricately covering duplicated variables to a degree of                         •    rovide a generic paradigm and framework of access
                                                                                         P
complexity. The complexity is due to the fact that a fault                               control model/property conformance testing;
might not be caused by one particular rule. Thus, it requires
                                                                                     •    rovide templates for specifying access control rules
                                                                                         P
manually analyzing each rule in the policy in order to find the
                                                                                         in popular access control models, such as the Attribute
correct solution for the fault.
                                                                                         Based, Multilevel, and Workflow models;



                                                                                                                                                     65
T H I S P U B L I C AT I O N I S AVA I L A B L E F R E E O F C H A R G E F R O M :        PROGRAM AND PROJECT ACHIEVEMENTS                  |     FY 2015
h t t p : // d x . d o i . o r g / 1 0 . 6 0 2 8 / N I S T . S P. 8 0 0 - 1 8 2
