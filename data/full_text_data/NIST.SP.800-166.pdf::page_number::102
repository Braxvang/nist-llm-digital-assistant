NIST SP 800-166                                                     DERIVED PIV APPLICATION AND
                                                                    DATA MODEL TEST GUIDELINES

                          4. From Step 5, all unsigned data objects are included in the
                             Security Object.
                          5. From Step 6, all data objects found in the mapping are actually
                             present on the Derived PIV Application as evidenced by the
                             GET DATA commands returning the data objects along with
                             status word '90 00'.

9.2   Signed Data Object Conformance

9.2.1 Security Object

9.2.1.1 Data Object Hash Integrity Check

 Test Assertion           TA-09.02.01.01
 Purpose                  Verifies the integrity of the hashes of the data objects referenced in
                          the Security Object (if present).
 DTR(s)                   • DTR-07.02.01.01
                          • DTR-07.01.05.02
                          • DTR-07.01.08.02
 Issuer Documentation     None.

 Precondition(s)          •   A token with the Derived PIV Application is inserted into an
                              appropriate token reader.
                          •   Suitable drivers have been loaded between the test system and
                              an instance of the reader.
                          •   A Security Object is present within the Derived PIV
                              Application.
 Test Scenario            1. Send the SELECT command with
                                • AID == 'A0 00 00 03 08 00 00 20 00 01 00'
                          2. Send the GET DATA command with
                                • Data field of the command containing the tag
                                   ('5FC106') of the Security Object
                          3. Identify the various data elements that are part of
                             the security object by parsing the Mapping of Data
                             Group (DG) to ContainerID (i.e. TAG 0xBA).
                          4. Extract the ldsSecurityObject from the eContent
                             field of the Security Object Asymmetric Signature
                             (i.e. TAG 0xBB).
                          5. Get all the data objects that are present in the
                             mapping obtained from Step 3 (i.e., the Discovery
                             Object and/or the Key History Object).
                          6. Compute the hash for each data object and verify
                             that it matches the hash value present in the
                             ldsSecurityObject.
 Expected Result(s)       1. From Step 1, the command returns the application property
                             template with the status word '90 00'.
                          2. From Step 2, the command returns the Security Object and the
                             status word '90 00'.


                                            95
