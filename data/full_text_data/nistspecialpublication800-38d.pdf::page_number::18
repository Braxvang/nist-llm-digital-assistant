                                NIST Special Publication 800-38D


The hash subkey, denoted H, is generated by applying the block cipher to the “zero” block. The
resulting instance of this hash function, denoted GHASHH, is used to compress an encoding of
the AAD and the ciphertext into a single block, which is then encrypted to produce the
authentication tag.

GHASH is a keyed hash function but not, on its own, a cryptographic hash function. This
Recommendation only approves GHASH for use within the context of GCM.

The intermediate values in the execution of the GCM functions shall be secret. In particular, this
requirement precludes a system in which GCM is implemented using the hash subkey publicly
for some other purpose, for example, as an unpredictable value or as an integrity check value on
the key.

6 Mathematical Components of GCM

This section presents the mathematical components that appear in the specifications of the
authenticated encryption and authenticated decryption functions in Sec. 7 below. Examples of
the basic operations and functions on bit strings are given in Sec. 6.1. The incrementing function
is defined in Sec. 6.2. Algorithm 1 for “multiplying” blocks is defined in Sec. 6.3. Algorithm 2
for the GHASH function that is constructed from this multiplication is defined in Sec 6.4.
Algorithm 3 for the GCTR function is defined in Sec. 6.5.

The specifications of Algorithms 1-3 include the inputs, the outputs, the steps of the algorithm,
diagrams, and summaries. Equivalent sets of steps that produce the correct output are permitted.
The inputs that are typically fixed across many invocations of the function are called the
prerequisites, although they may also be regarded as (varying) inputs.

6.1   Examples of Basic Operations and Functions on Strings

In this document, the ‘0’ bit and the ‘1’ bit are indicated in the new courier font to help
distinguish them from the integers 0 and 1.

Given a real number x, the ceiling function, denoted ⎡x⎤, is the least integer that is not less than x.
For example, ⎡2.1⎤ = 3, and ⎡4⎤ = 4.

Given a positive integer s, 0s denotes the string that consists of s ‘0’ bits. For example, 08 =
00000000.

The concatenation operation on bit strings is denoted ||; for example, 001 || 10111 =
00110111.

Given bit strings of equal length, the exclusive-OR (XOR) operation, denoted ⊕, specifies the
addition, modulo 2, of the bits in each bit position, i.e., without carries. For example, 10011 ⊕
10101 = 00110.




                                                  10
