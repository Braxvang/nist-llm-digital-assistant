                                                                                              NIST SP 800-204C                                               DEVSECOPS FOR A MICROSERVICES-BASED
                                                                                                                                                                    APPLICATION WITH SERVICE MESH
This publication is available free of charge from: https://doi.org/10.6028/NIST.SP.800-204C




                                                                                                                               Figure 1: CI/CD pipeline workflow [16]

                                                                                              The unit and integration tests shown in the diagram use the SAST, DAST, and SCA tools
                                                                                              described in Section 3.2. It should be noted that an organization has the option to continue the
                                                                                              build process when a test fails. Depending on how the organization balances risk tolerance versus
                                                                                              business needs, it may choose to fail-open (log and continue) or fail-closed (stop/break) when a
                                                                                              specific test fails. In the fail-closed event, the developer gets the test outcome report, must fix the
                                                                                              issues, and restart the CI process.



                                                                                              Continuous integration involves developers frequently merging code changes into a central
                                                                                              repository where automated builds and tests run. Build is the process of converting the source
                                                                                              code to executable code for the platform on which it is intended to run. In the CI/CD pipeline
                                                                                              software, the developer’s changes are validated by creating a build and running automated tests
                                                                                              against the build. This process avoids the integration challenges that can happen when waiting for
                                                                                              release day to merge changes into the release branch [17].

                                                                                              Continuous delivery is the stage after continuous integration where code changes are deployed to
                                                                                              a testing and/or staging environment after the build stage. Continuous delivery to a production
                                                                                              environment involves the designation of a release frequency – daily, weekly, fortnightly, or some
                                                                                              other period – based on the nature of the software or the market in which the organization
                                                                                              operates. This means that on top of automated testing, there is a scheduled release process,
                                                                                              though the application can be deployed at any time by clicking a button. The deployment process
                                                                                              in continuous delivery is characterized as manual, but tasks such as the migration of code to a
                                                                                              production server, the establishment of networking parameters, and the specification of runtime
                                                                                              configuration data may be performed by automated scripts.

                                                                                              Continuous deployment is similar to continuous delivery except that the releases happen
                                                                                              automatically [17], and changes to code are available to customers immediately after they are
                                                                                              made. The automatic release process may in many instances include A/B testing to facilitate slow
                                                                                              rollout of new features so as to mitigate the impact of failures if there is a bug/error.

                                                                                              The distinction between continuous delivery and continuous deployment is shown in Figure 2
                                                                                              below.

                                                                                                                                                13
