A STATISTICAL TEST SUITE FOR RANDOM AND PSEUDORANDOM NUMBER GENERATORS FOR CRYPTOGRAPHIC APPLICATIONS



5.        User’s Guide

This section describes the set-up and proper usage of the statistical tests developed by NIST that are
available in the NIST test code. Descriptions of the algorithms and data structures that were utilized are
included in this section.

5.1       About the Package

This toolbox was specifically designed for individuals interested in conducting statistical testing of
cryptographic (P)RNGs. Several implementations of PRNGs utilized during the development phase of
the project have also been included.

This package will address the problem of evaluating (P)RNGs for randomness. It will be useful in:

      •    identifying (P)RNGs which produce weak (or patterned) binary sequences,
      •    designing new (P)RNGs,
      •    verifying that the implementations of (P)RNGs are correct,
      •    studying (P)RNGs described in standards, and
      •    investigating the degree of randomness by currently used (P)RNGs.

The objectives during the development of the NIST statistical test suite included:

      •    Platform Independence: The source code was written in ANSI C. However, some modification
           may have to be made, depending on the target platform and the compiler.
      •    Flexibility: The user may freely introduce their own math software routines.
      •    Extensibility: New statistical tests can easily be incorporated.
      •    Versatility: The test suite is useful in performing tests for PRNGs, RNGs and cipher algorithms.
      •    Portability: With minor modifications, source code may be ported to different platforms. The
           NIST source code was ported to a Windows XP system running Visual Studio 2005 compiler and
           a Ubuntu Linux system running gcc.
      •    Orthogonality: A diverse set of tests is provided.
      •    Efficiency: Linear time or space algorithms were utilized whenever possible.

5.2       System Requirements

This software package was originally developed on a SUN workstation under the Solaris operating
system. All of the source code was written in ANSI C. The latest revisions were done on an Apple
MacBook Pro with an Intel Core 2 Duo processor using the gcc compiler.

In practice, minor modifications may have to be introduced during the porting process in order to ensure
the correct interpretation of tests. In the event that a user wishes to compile and execute the code on a
different platform, sample data and the corresponding results for each of the statistical tests have been
provided. In this manner, the user will be able to gain confidence that the ported statistical test suite is
functioning properly. For additional details see Appendix B.

For the majority of the statistical tests, memory must be allocated dynamically in order to proceed. In the
event that workspace cannot be provided, the statistical test returns a diagnostic message.




                                                     5-1
