                                                             CLOUD COMPUTING SYNOPSIS AND RECOMMENDATIONS



identities to one another. Generally, a consumer provides an account name and password or other
authentication credential such as a time-based hardware token value.

The SaaS provider’s main responsibility to the consumer is to ensure that the software that it supplies is
solidly supported and tested. Another key requirement is that SaaS applications be scalable to
increasingly larger consumer workloads. Maintaining an infrastructure to carry this out in a secure
environment with specified uptime for the consumer is a critical aspect. Many consumers may have
valuable organizational data stored in the cloud and some of this information may be proprietary and
business-sensitive; therefore a secure environment is paramount.

The following six subsections describe several important characteristics of SaaS offerings: Abstract
Interaction Dynamics; Software Stack and Provider/Consumer Scopes of Control; Benefits; Issues and
Concerns; Candidate Application Classes; and Recommendations.

5.1   Abstract Interaction Dynamics




                          Figure 9: SaaS Consumer/Provider Interaction Dynamics

To provide an understanding of SaaS cloud offerings, this section abstractly describes the dynamics of an
interaction between clients of a typical consumer and the SaaS cloud service through a simplified model.
One such model is shown in Figure 9. Figure 9.A depicts a cloud providing services to two clients, C1
and C2. In a private cloud, the clients will belong to (or be associated with) a single consumer
organization; in other deployment models, as covered in Section 4, the clients may represent different
consumers. Abstractly, the cloud provider possesses an inventory of software applications ("apps" in the
figure) that it is offering to clients for use over the network. In addition, the cloud provider possesses (or
can rent) application execution resources (labeled "exr" in the figure). In Figure 9.A, client C1 is
currently using two applications, B and C. To execute the apps for client C1, the cloud provider has
allocated two execution resources, exr1 and exr2, with exr1 supplying the processing power and other
resources to run the B application (denoted by B→exr1 in the figure), and exr2 supplying the processing
power and other resources to run the C application (denoted by C→exr2 in the figure). An execution
resource might be, e.g., a physical computer, a virtual machine (discussed in Section 7), or a running
server program that can service client requests, start a virtual machine, or even rent computing cycles and
storage from another organization. Similarly, client C2, is using one application, C, which is supported by
execution resource exr3. Note that the same application (C in this case) can be rented out to multiple
clients at the same time, as long as the cloud provider can marshal the execution resources to support the
application. As shown in Figure 9.B, when an additional client requests applications from the cloud, the
cloud provider allocates extra execution resources to support the requested applications.




                                                     5-2
