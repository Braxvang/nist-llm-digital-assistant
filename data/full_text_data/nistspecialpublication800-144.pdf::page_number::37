           responsible for protecting access to resources, sends a request containing a description of
           the attempted access to a Policy Decision Point (PDP) for evaluation against available
           policies and attributes. The PDP evaluates this request and returns an authorization
           decision for the PEP to enforce. XACML does not define protocols or transport
           mechanisms or specify how user credentials are validated. Messages transmitted between
           XACML entities are susceptible to attack by malicious third parties, including
           unauthorized disclosure, replay, deletion and modification attacks, unless sufficient
           safeguards are in place to protect transactions [Kel05].

4.6       Software Isolation
High degrees of multi-tenancy over large numbers of platforms are needed for cloud computing
to achieve the envisioned flexibility of on-demand provisioning of reliable services and the cost
benefits and efficiencies due to economies of scale. To reach the high scales of consumption
desired, cloud providers have to ensure dynamic, flexible delivery of service and isolation of
consumer resources. Multi-tenancy in IaaS cloud computing environments is typically done by
multiplexing the execution of virtual machines from potentially different consumers on the same
physical server [Ris09]. Applications deployed on guest virtual machines remain susceptible to
attack and compromise, much the same as their non-virtualized counterparts. This was
dramatically exemplified by a botnet found operating out of an IaaS cloud computing
environment [Mcm09a, Whi09].

Multi-tenancy in PaaS and SaaS cloud computing environments can be handled differently. For
example, many SaaS providers rely on an infrastructure free of virtual machines, using instead a
single logical instance of an application (i.e., a software technology stack) that can handle
extremely large numbers of tenants, scaling upwards or outwards as needed [Arm10, Wai08].
Regardless of the service model and multi-tenant software architecture used, the computations of
different consumers must be able to be carried out in isolation from one another, mainly through
the use of logical separation mechanisms.

      ï€¼    Hypervisor Complexity. The security of a computer system depends on the quality of
           the underlying software kernel that controls the confinement and execution of processes.
           A virtual machine monitor or hypervisor is designed to run multiple virtual machines,
           each hosting an operating system and applications, concurrently on a single host
           computer, and to provide isolation between the different guest virtual machines.

           A virtual machine monitor can, in theory, be smaller and less complex than an operating
           system. These characteristics generally make it easier to analyze and improve the quality
           of security, giving a virtual machine monitor the potential to be better suited for
           maintaining strong isolation between guest virtual machines than an operating system is
           for isolating processes [Kar08]. In practice, however, modern hypervisors can be large
           and complex, comparable to an operating system, which negates this advantage. For
           example, Xen, an open source x86 virtual machine monitor, incorporates a modified
           Linux kernel to implement a privileged partition for input/output operations, and KVM,
           another open source effort, transforms a Linux kernel into a virtual machine monitor
           [Kar08, Sha08, Xen08]. Understanding the use of virtualization by a cloud provider is a
           prerequisite to understanding the security risk involved.


                                                   27
