                                                                        GUIDELINES ON ACTIVE CONTENT AND MOBILE CODE



 Assisting management in authorizing (or accrediting) the IT systems on the basis of the supporting
  documentation resulting from the performance of risk management.
5.1.3   Evaluated Technology

Where appropriate, consideration should be given to using IT products that have undergone a formal
security evaluation. Products that quarantine or block the behavior of active content are available on the
market, and some have undergone formal evaluation. The focus of a formal security evaluation is
primarily on the correctness and effectiveness of the design, under the well-founded principle that a sound
design enables a secure implementation, while an unsound design is hopelessly doomed. Other, less
formal forms of third-party testing and evaluation may rely on a set of functional and security tests.
Many evaluations offer a range of assessment levels. For example, the NIST Cryptographic Module
Validation Program (CMVP) 8 uses security evaluation levels defined in Federal Information Processing
Standard (FIPS) 140-2 [NIST01]. Modules evaluated at Level 4 provide a higher level of assurance than
those evaluated at Level 1. Nevertheless, an evaluated product without a needed security capability might
be less desirable than a product having a lower level of assurance that offers the capability. A more
detailed recommendation for Federal organizations on the acquisition and use of evaluated and tested
products is available elsewhere [NIST00].

Note that using tested and evaluated software does not necessarily ensure a secure operational
environment. The way in which a product is configured and composed with other system components
affects security. Even when a product does successfully complete a formal security evaluation, it may
contain vulnerabilities. For example, one of the most common attacks is through a buffer overflow,
whereby the input to a defined programming interface is carefully crafted to overwrite memory beyond
the input buffer limit with instructions designed to gain control of the process. Security evaluations might
be expected to include a systematic search and elimination of buffer overflows; unfortunately, most do
not. While evaluators test the implementation for known security vulnerabilities, and at more stringent
levels even attempt penetrations, a systematic search of buffer overflow vulnerabilities is normally out of
scope due mainly to cost. Automatic discovery of buffer overflow vulnerabilities within code is a
research challenge.

5.1.4   Security Audit

A common approach for measuring the security posture of an organization is a formal security audit.
Audits ensure that policies and controls already implemented are operating correctly and effectively.
Audits can include static analysis of policies, procedures, safeguards, and configuration settings as well as
active probing of the system’s external and internal security mechanisms. The results of an audit identify
the strengths and weaknesses of the security of the system and provide a list of noted deficits for
resolution, typically ranked by degree of severity. Because the security posture of a system evolves over
time, audits are most effective when done on a recurring basis.

While periodic formal audits are useful, they are not a replacement for day-to-day management of the
security status of a system. Enabling system logs and reviewing their contents manually or through
automated report summaries can sometimes be the best means of uncovering unauthorized behavior and
detecting security problems. A well-known example of this is documented in Cliff Stoll’s book, The
Cuckoo's Egg, where a 75-cent accounting error appearing in a computer log eventually led to the
discovery of an industrial espionage ring.




8
    More information about the NIST CMVP is available at http://csrc.nist.gov/groups/STM/index.html.


                                                           5-3
