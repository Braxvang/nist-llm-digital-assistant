                                                                           GUIDELINES FOR THE SECURE DEPLOYMENT OF IPV6


detect and to mitigate without a complete system for authentication by port number, which would
represent a huge security requirement. For a description of an analogous attack, see the Java-based attack
described by Martin et al.60

Some attack mitigation strategies block an IPv4 address (temporarily or permanently) after detecting an
improper use. Thus, the carrier-grade NAT needs to protect other customers using the same address by
making sure that a single user of a shared address cannot trigger such a response.

Finally, a carrier-grade NAT needs to enforce ingress filtering of IPv6 traffic to prevent IPv6 spoofing.

6.6       Translation

Translation consists of transforming IPv4 or IPv6 packets into the other protocol so they can be routed or
transmitted across a network. Network Address Translation—Protocol Translation (NAT-PT) allows
IPv6 and IPv4 devices to communicate via an intermediate translation device. Transport Relay Translator
(TRT) is another mechanism to allow IPv6 hosts to communicate with IPv4 hosts through an
intermediary. Translation mechanisms (IPv4 to IPv6 and IPv6 to IPv4) introduce new methods to
construct networks and systems and thus enlarge the set of possible attacks against those networks and
systems.

Protocol translation is not recommended as a strategic approach to transitioning from IPv4 to IPv6 for a
variety of reasons. Translating IPv6 into IPv4 effectively negates most of the compelling reasons for
transitioning to IPv6 in the first place. Hierarchical routing, expanded address space, streamlined packet
headers, and IPv6 mobility are all lost when translating IPv6 into IPv4. Translation does not solve the
IPv4 address space exhaustion problem. Nevertheless, an IPv6-only system cannot communicate with an
IPv4-only system unless translation occurs somewhere, so translation is necessary to keep isolated IPv4
legacy applications running in an otherwise IPv6 world.

Because protocol translation is not exact, but merely the best approximation of one protocol with another,
the translation of header fields, addresses, extensions, options, fragmentation, and error reporting can be
exploited to try to circumvent security policies.

Translation mechanisms can work at different layers:

           Network layer translators
      -    Stateless IP/ICMP Translation Algorithm (SIIT) (RFC 2765)
      -    NAT-PT (RFC 2766 and RFC 4966)
      -    Bump in the Stack (BIS) (RFC 2767)
           Transport layer translators
      -    Transport Relay Translator (TRT) (RFC 3142)
           Application layer translators
      -    Bump in the API (BIA) (RFC 3338)



60
      Martin, Rajagopalan and Rubin, ―Blocking Java Applets at the Firewall,‖ Proceedings of the Internet Society Symposium on
      Network and Distributed System Security, pp. 16–26, 1997.


                                                             6-32
