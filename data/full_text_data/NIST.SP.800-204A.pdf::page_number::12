                                                                                              NIST SP 800-204A                                BUILDING SECURE MICROSERVICES-BASED APPLICATIONS
                                                                                                                                                              USING SERVICE-MESH ARCHITECTURE


                                                                                              2       Microservices-based Application – Background and Security Requirements

                                                                                              The definition and description of microservices-based application, threats, and security strategies
                                                                                              for countering those threats are described in NIST SP 800-204, Security Strategies for
                                                                                              Microservices-based Application Systems [1]. The purpose of this chapter is to recap and
                                                                                              elaborate on the security requirements for this class of application to provide context for how
                                                                                              those requirements are met by the functionality of the Service Mesh described in Chapter 3. This
                                                                                              facilitates the development of deployment recommendations for Service Mesh components to
                                                                                              meet those requirements in Chapter 4.
This publication is available free of charge from: https://doi.org/10.6028/NIST.SP.800-204A




                                                                                              2.1     Authentication and Authorization Requirements

                                                                                              Authentication and access policy may vary depending on the type of APIs exposed by
                                                                                              microservices—some may be public APIs, private APIs, or partner APIs, which are available
                                                                                              only for business partners. There are multiple microservices, and the authentication policies
                                                                                              should be defined to provide coverage for all of them. Further, certificate-based authentication
                                                                                              requires a public key infrastructure (PKI) for certificate generation/management and key
                                                                                              management. Further authorization modules covering resources in all microservices must be
                                                                                              built to provide fine-grained authorization in all service requests.
                                                                                              2.2     Service Discovery

                                                                                              In legacy distributed systems, there are multiple services configured to operate at designated
                                                                                              locations (IP address and port number). In the microservices-based application, the following
                                                                                              scenario exists and calls for a robust service discovery mechanism:

                                                                                                    a) There are a substantial number of services and many instances associated with each
                                                                                                       service with dynamically changing locations.
                                                                                                    b) Each of the microservices may be implemented in Virtual Machines (VMs) or as
                                                                                                       containers, which may be assigned dynamic IP addresses, especially when they are
                                                                                                       hosted in an Infrastructure as a Service (IAAS) or Software as a Service (SAAS) cloud
                                                                                                       service.
                                                                                                    c) The number of instances associated with a service can vary based on the load fluctuations
                                                                                                       using features such as autoscaling.

                                                                                              Based on the above characteristics, a feature to discover a service while making a service request
                                                                                              is an essential requirement. A common approach to implementing this feature is the use of a
                                                                                              service registry. A service registry consists of a directory where new service instances created for
                                                                                              the microservices-based application register themselves while service instances going offline are
                                                                                              deleted from it.

                                                                                              2.3     Improving Availability through Network Resilience Techniques

                                                                                                    ● Load balancing: There is a need to have multiple instances of the same service, and the
                                                                                                      loads on these instances must be evenly distributed to avoid delayed responses or service
                                                                                                      crashes due to overload.
                                                                                                                                              4
