      •   If 0 < a < 216-28, then a is encoded as [a]16, i.e., two octets.
      •   If 216-28 ≤ a < 232, then a is encoded as 0xff || 0xfe || [a]32, i.e., six octets.
      •   If 232 ≤ a < 264, then a is encoded as 0xff || 0xff || [a]64, i.e., ten octets.

For example, if a=216, the encoding of a is 11111111 11111110 00000000 00000001 00000000
00000000.

The formatting of distinct sets of associated data will not overlap, because for distinct values of
a, the leading bits of the encodings of a are distinct: in the first case, the first octet will not be
0xff as it will for the second and third cases; the second and third cases can be distinguished by
the second octet. Encodings that are not specified in these three cases are reserved, e.g., when
the first two octets are 0x0000, 0xff00, 0xff01, etc.

A.2.3        Formatting of the Payload

The associated data blocks, if any, are followed in the sequence of formatted blocks by the
payload blocks. The payload is concatenated with the minimum number of ‘0’ bits, possibly
none, such that the result can be partitioned into 16-octet blocks. These blocks are denoted in the
formatted data as Bu+1, Bu+2 … Br, where r=u+ ⎡ p 16⎤ .
                       B     B         B




A.3       Formatting of the Counter Blocks

The counter generation function in this section is equivalent to a formatting of the counter index i
into a complete data block. The counter blocks Ctri are formatted as shown in Table 3 below.

                                           Table 3: Formatting of Ctri

                 Octet number:                0              1 ... 15-q           16-q ... 15
                 Contents:                  Flags                 N                  [i]8q

Within each block Ctri, the Flags field is formatted as shown in Table 4 below.

                                 Table 4: Formatting of the Flags Field in Ctri

      Bit number                  7                 6         5       4       3           2       1      0
      Contents               Reserved         Reserved        0       0       0                 [q-1]3

The Reserved bits are reserved for future expansions and shall be set to 0. Bits 3, 4, and 5 shall
also be set to 0, to ensure that all the counter blocks are distinct from B0 (as specified in A.2.1
                                                                                      B




above). Bits 0, 1, and 2 contain the same encoding of q as in B0.         B




                                                        14
