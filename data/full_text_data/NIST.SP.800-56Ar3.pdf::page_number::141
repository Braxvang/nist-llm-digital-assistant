                                                                                               NIST SP 800-56A Rev. 3                                  Recommendation for Pair-Wise Key Establishment
                                                                                                                                                               Using Discrete Logarithm Cryptography

                                                                                               Appendix C: Data Conversions (Normative)
                                                                                               C.1      Integer-to-Byte String Conversion
                                                                                               Input:            A non-negative integer C and the intended length n of the byte string
                                                                                                                 satisfying
                                                                                                                                 28n > C.
                                                                                                                 When called from an FFC Scheme, n = t / 8 bytes, where t = log2 p and p
                                                                                                                 is the large prime field order.
                                                                                               Output:           A byte string S of length n bytes.

                                                                                                  1. Jn+1 = C.
This publication is available free of charge from: https://doi.org/10.6028/NIST.SP.800-56Ar3




                                                                                                  2. For i = n to 1 by -1

                                                                                                           2.1    Ji = (Ji+1)/256.

                                                                                                           2.2    Ai = Ji+1 − (Ji • 256).

                                                                                                           2.3     Si = (ai1, ai2, ai3, ai4, ai5, ai6, ai7, ai8),
                                                                                                                         The 8-bit binary representation of the non-negative integer
                                                                                                                         Ai = ai1 27+ai2 26+ai3 25+ai4 24+ai5 23+ai6 22+ai7 2+ai8.

                                                                                                     3. Let S1, S2, …, Sn be the bytes of S from leftmost to rightmost.

                                                                                                     4. Output S.

                                                                                               C.2      Field-Element-to-Byte String Conversion
                                                                                               Input:            An element  in the field Fq.
                                                                                               Output:           A byte string S of length n = t / 8 bytes, where t = log2 q.
                                                                                                  1. If q is an odd prime, then  must be an integer in the interval [0, q − 1];  shall be
                                                                                                     converted to a byte string of length n bytes using the technique specified in Appendix
                                                                                                     C.1 above.
                                                                                                  2. If q = 2m, then it is assumed that  is (already) represented as a bit string of length m,
                                                                                                     with each bit indicating the coefficient (0 or 1) of a specific element of a particular
                                                                                                     basis for GF(2m) viewed as a vector space over GF(2).
                                                                                                        Let s1, s2, …, sm be the bits of  from leftmost to rightmost. Let S1, S2, …, Sn be the
                                                                                                        bytes of S from leftmost to rightmost.
                                                                                                        The rightmost bit sm shall become the rightmost bit of the last byte Sn, and so on
                                                                                                        through the leftmost bit s1, which shall become the (8n − m + 1)th bit of the first byte
                                                                                                        S1. The leftmost (8n − m) bits of the first byte S1 shall be zero.



                                                                                                                                                 130
