                                       Figure 36: Interaction Rule Graph

values from equivalence classes corresponding to the names                           C O N TAC T S :
of equivalence classes in the primary array. If the outputs
corresponding to one row of the primary array differ, then                           Mr. Rick Kuhn		            Dr. Raghu Kacker
either the equivalence classes were defined incorrectly or                           (301) 975-3337		           (301) 975-2109
the code is faulty in some way. This method can detect a                             kuhn@nist.gov 		           raghu.kacker@nist.gov
large class of software faults automatically after equivalence
classes have been defined, without a conventional test                               Ro o t s o f Tr u st
oracle.
                                                                                              Modern computing devices consist of various
     Technology transfer activities included the publication                         hardware, firmware, and software components at multiple
of a number of technical papers and software distributions;                          layers of abstraction. Many security and protection
publication of the results of a Cooperative R&D (CRADA)                              mechanisms are currently rooted in software that, along
project with Lockheed Martin; release of enhanced                                    with all underlying components, must be trusted and not
combinatorial measurement tools; input modeling and                                  tampered with. A vulnerability in any of those components
fault location tools; a provisional patent application on the                        could compromise the trustworthiness of the security
oracle-free testing method; and seminars at a number of                              mechanisms that rely upon those components. Stronger
conferences, universities, and federal agencies.                                     security assurances may be possible by grounding security
    Plans for FY 2017 include the development of a                                   mechanisms in roots of trust.
mathematical model for the evolution of t-way faults in                                       Roots of trust are highly reliable and secure
software; combinatorial testing for big data software;                               hardware, firmware, and software components that perform
measurement of input model combination coverage of                                   specific, critical security functions. Because roots of trust
network protocol software; trial use of prototype methods                            are inherently trusted, they must be secure by their design.
and tools for oracle-free testing methods; analysis of                               As such, many roots of trust are implemented in hardware
empirical data on failures; further development of methods                           or protected firmware so that malware cannot tamper with
and tools for fault localization; and seminars, workshops,                           the functions they provide. Roots of trust provide a firm
and tutorials at professional meetings and research labs.                            foundation from which to build security and trust.
F O R M O R E I N F O R M AT I O N , S E E :                                              This project aims to encourage the use of roots of trust in
                                                                                     computers to provide stronger security assurances. A focus
http://csrc.nist.gov/groups/SNS/acts/
                                                                                     area for this work has been securing firmware. Previous work
                                                                                     in this project described methods to protect boot firmware             93



T H I S P U B L I C AT I O N I S AVA I L A B L E F R E E O F C H A R G E F R O M :        PROGRAM AND PROJECT ACHIEVEMENTS                    |   FY 2016
h t t p : // d x . d o i . o r g / 1 0 . 6 0 2 8 / N I S T . S P. 8 0 0 - 1 9 5
