                                                                                             NIST SP 800-192                                                    VERIFICATION & TEST METHODS FOR
                                                                                                                                                                ACCESS CONTROL POLICIES/MODELS


                                                                                             The second mutant model in Figure 15 is not killed by any of the three safety requirements,
                                                                                             reflecting that the original model is not comprehensive and does not completely “cover” the safety
                                                                                             requirements.

                                                                                             Mutation verification serves the safety requirement with the two purposes: (1) to quantify how
                                                                                             thoroughly the model covers safety requirements (2) to facilitate model changes such that the
                                                                                             model covers all safety requirements or vice versa.

                                                                                             In some cases, instead fixing a model, the mutation verification serves the purpose to patch the
                                                                                             safety requirements, thus, fixing the policy. For example, adding safety requirement S4 as below
                                                                                             fails to hold for the second mutant policy in xx4.
This publication is available free of charge from: https://doi.org/10.6028/NIST.SP.800-192




                                                                                                    S4 All members of student can receive external_grades.

                                                                                             In Summary, Figure 17 illustrates the necessary inputs and resultant outputs of the mutation
                                                                                             verification. The inputs are the model under test and, in this case, a single mutation operator. The
                                                                                             mutator then generates a set of mutant models, each with a single fault. The mutation operator
                                                                                             generates a mutant for each rule by negating the decision of that rule. Although black box
                                                                                             verification executes relatively quickly for the mutants, large models can be used to easily generate
                                                                                             thousands of mutant models. An equivalent mutant is a mutant that is syntactically different from
                                                                                             the original model while being semantically equivalent. In other words, an equivalent mutant will
                                                                                             produce the same result as the original model for all inputs and thus provides no benefit and result
                                                                                             in an artificial lowering of the mutant killing ratio, giving an under rated and inaccurate quality
                                                                                             measurement. We can also determine which safety requirements hold and which do not hold for
                                                                                             both the original model and each mutant model. Note that in order to perform verification
                                                                                             programmatically, an executable script and Scheme program for the original model and each
                                                                                             mutant model may be required [MX07].




                                                                                                                                              32
