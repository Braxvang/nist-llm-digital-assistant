                                                                                             NIST SP 800-204                                                              SECURITY STRATEGIES FOR
                                                                                                                                                          MICROSERVICES-BASED APPLICATION SYSTEMS

                                                                                                   •    Orchestration layer: An orchestration layer may come into play if the microservices
                                                                                                        implementation involves technologies such as containers. The threats in this layer pertain
                                                                                                        to the subversion of automation or configuration features, especially related to scheduling
                                                                                                        and clustering of servers, containers, or VMs hosting the services, and are therefore
                                                                                                        beyond the scope of this document.
                                                                                             3.2       Microservices-specific Threats

                                                                                             Most state-of-practice core features refer to the communication layer in the deployment stack of
                                                                                             microservices-based applications. Hence, the overall security strategies for microservices-based
                                                                                             applications should involve choosing the right implementation options, identifying the
                                                                                             architectural frameworks packaging those core features, identifying microservice-specific
This publication is available free of charge from: https://doi.org/10.6028/NIST.SP.800-204




                                                                                             threats, and providing coverage for countering those threats in the implementation options.

                                                                                             However, it should be pointed out that microservices-based applications are still susceptible to
                                                                                             most attacks that web applications are susceptible to, including injection, encoding and
                                                                                             serialization attacks, cross site scripting (XSS), Cross-Site Request Forgery (CSRF), and HTTP
                                                                                             verb tempering [20]. And many of the controls to prevent these attacks still need to be
                                                                                             implemented in the microservice code so you need to ensure that developers are not under the
                                                                                             impression that an API gateway or service mesh will provide all security for their microservice.

                                                                                             3.2.1      Service Discovery Mechanism Threats

                                                                                             The basic functions in a service discovery mechanism are:

                                                                                                   •    Service registration and de-registration.
                                                                                                   •    Service discovery.

                                                                                             The potential security threats to the service discovery mechanism include:

                                                                                                   •    Registering malicious nodes within the system, redirecting communication to them, and
                                                                                                        subsequently compromising service discovery.
                                                                                                   •    Corruption of the service registry database leading to redirection of service requests to
                                                                                                        wrong services and resulting in denial of services; also, redirection to malicious services
                                                                                                        resulting in compromise of the entire application system.

                                                                                             3.2.2      Internet-based Attacks

                                                                                             Though all networked or distributed applications are vulnerable to internet-based attacks,
                                                                                             microservices-based applications are more vulnerable to this type of attacks due to the following:

                                                                                                   •    Unlike a monolithic application that exposes a smaller set of IP-addressable remote
                                                                                                        procedure call interfaces, a microservices architecture will almost always expose a larger
                                                                                                        set of IP-addressable remote procedure call interfaces. This is due to the fact that
                                                                                                        monolithic applications favor single-component implementation of a range of business
                                                                                                        functions and typically expose a consolidated interface to them all. Applications

                                                                                                                                                    15
