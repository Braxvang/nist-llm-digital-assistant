                                                                                               NIST SP 800-178                                                     COMPARISON OF ABAC STANDARDS FOR
                                                                                                                                                                     DATA SERVICES: XACML AND NGAC


                                                                                               5     Analysis

                                                                                               XACML is similar to NGAC insofar as they both provide flexible, mechanism-independent
                                                                                               representations of policy rules that may vary in granularity, and they employ attributes in
                                                                                               computing decisions. However, XACML and NGAC differ significantly in their expression of
                                                                                               policies, treatment of attributes, computation of decisions, and representation of requests. In this
                                                                                               section, these similarities and differences are analyzed with respect to the degree of separation of
                                                                                               access control functionality from proprietary operating environments and four ABAC
                                                                                               considerations identified in NIST SP 800-162: scope and type of policy support, operational
This publication is available free of charge from: http://dx.doi.org/10.6028/NIST.SP.800-178




                                                                                               efficiency, attribute and policy management, and support for administrative review and resource
                                                                                               discovery.

                                                                                               For the purposes of comparison, some of XACML and NGAC’s terminology is normalized.

                                                                                               5.1   Separation of Access Control Functionality from Proprietary Operating
                                                                                                     Environments

                                                                                               XACML and NGAC both separate access control functionality of data services from proprietary
                                                                                               operating environments, but to different degrees. An XACML deployment may consist of
                                                                                               multiple operating environments, each hosting one or more applications and sharing a common
                                                                                               authorization infrastructure. Each of these operating environments implements its own method of
                                                                                               authentication, and in support of its applications implements its own operational routines.
                                                                                               Application specific operations included in XACML access requests correspond one-to-one with
                                                                                               operational routines implemented in supporting operating environments. It is for this reason that
                                                                                               an XACML-enabled application is dependent on an operating environment PEP. Requests are
                                                                                               issued from, and decisions are returned to, an operating environment-specific PEP.

                                                                                               Although an NGAC deployment could include a PEP with an application programming interface
                                                                                               (API) that recognizes operating environment-specific operations (e.g., send and forward
                                                                                               operations for a messaging system), it does not necessarily need to do so. NGAC includes a PEP
                                                                                               with an API that supports a set of generic, operating environment-agnostic operations (read,
                                                                                               write, create, and delete policy elements and relations). This API enables a common, centralized
                                                                                               PEP to be implemented to serve the requests of multiple applications. Although the generic
                                                                                               operations may not meet the requirements of every application (e.g., transactions that perform
                                                                                               computations on attribute values), calls from many applications can be accommodated. This
                                                                                               includes operations that generically pertain to consumption, manipulation, and management of
                                                                                               data, and distribution of access rights on data. For example, the “send” operation of a messaging
                                                                                               data service could be implemented through a series of administrative operations on NGAC data
                                                                                               elements and relations, where “inboxes” and “outboxes” are represented as object attributes. The
                                                                                               administrative operations create and assign a message (an object) to the “outbox” of the sender
                                                                                               and the “inbox” of the recipient, where the sender and recipient have read access rights to objects
                                                                                               contained in their respective “outbox” and “inbox”. The file management data service described
                                                                                               in Section 4 is another example of a data service that supports application specific operations for
                                                                                               creating and managing files and folders implemented though NGAC generic operations. Still
                                                                                               others could include operations in support of workflow, calendar, record management, and time
                                                                                               and attendance.


                                                                                                                                                36
