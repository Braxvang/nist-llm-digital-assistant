SP 800-152                                                 A Profile for U.S. Federal CKMS


9.4   Self-Testing

An FCKMS module or device could be designed, implemented, and operate correctly
when first deployed, but then fail some time later. A Federal CKMS must use modules
and devices that test themselves for functionality, integrity and security.

FR:9.5 The CKMS design shall specify all self-tests created and implemented by the
designer and the corresponding CKMS functions whose correct operation they verify.

                           A Federal CKMS shall perform initial and periodic self-tests
PR:9.7
                           that verify the continued correctness of the system.
                SI-6       For Moderate and High impact-level systems, a Federal
PR:9.8
                SI-7       CKMS shall verify its software integrity after initial
                           installation, update installation, system power-on, and then
                           daily thereafter.

                 SI-6      For Low impact-level systems, a Federal CKMS should
PA:9.4
                 SI-7      verify its software integrity after initial installation, update
                           installation, system power-on, and then daily thereafter.

9.5   Scalability Testing

Scalability is a characteristic of a system, network, or process to perform increasing
amounts of work correctly. Scalability testing involves testing a device or system to learn
how it reacts when the number of transactions to be processed or participants to be
serviced properly during a given period of time increases dramatically. Scalability testing
can be used to stress devices and systems so that overload problems are detected and
mitigated before encountering these problems during operational use.

FR:9.6 The CKMS design shall specify all scalability analysis and testing performed on
the system to date.

                           A Federal CKMS shall be subjected to scalability tests.
PR:9.9


9.6   Functional and Security Testing

Functional testing is used to verify that an implementation performs correctly. For
example, a functional test could verify that an implemented encryption algorithm
produces the correct ciphertext. Functional testing includes performing and passing the
types of tests specified in Sections 9.2 - 9.5 or obtaining evidence that these tests have
been performed and produced acceptable results.

Security testing is used to verify that an implementation operates securely. For example,
a security test could verify that fluctuations in power consumption or other outside
influences will not compromise the key of a correctly operating device. Thus, a

                                            96
