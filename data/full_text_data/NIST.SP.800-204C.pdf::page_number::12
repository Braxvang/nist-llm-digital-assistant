                                                                                              NIST SP 800-204C                                             DEVSECOPS FOR A MICROSERVICES-BASED
                                                                                                                                                                  APPLICATION WITH SERVICE MESH

                                                                                              take on different forms, depending on the platform. In this document, the chosen platform is a
                                                                                              container orchestration and resource management platform (e.g., Kubernetes). The platform is an
                                                                                              abstraction layer over a physical (bare metal) or virtualized (e.g., virtual machines, containers)
                                                                                              infrastructure. To unambiguously refer to this platform or application environment throughout
                                                                                              this document, it is called the Reference Platform for DevSecOps Primitives, or simply the
                                                                                              reference platform.

                                                                                              Before describing the implementation of DevSecOps primitives for the reference platform, it is
                                                                                              assumed that the following due diligence is applied with respect to deployment of the service
                                                                                              mesh component [2]:
This publication is available free of charge from: https://doi.org/10.6028/NIST.SP.800-204C




                                                                                                 •   Secure design patterns for deploying and managing service mesh-based components for
                                                                                                     infrastructure (e.g., network routing), policy enforcement, and monitoring
                                                                                                 •   Tests to prove that these service mesh components work as intended in a variety of
                                                                                                     scenarios for all aspects of the application, such as ingress, egress, and inside services

                                                                                              The guidance provided for implementation of DevSecOps primitives for the reference platform is
                                                                                              agnostic to (a) the tools used in DevSecOps pipelines and (b) the service mesh software, which
                                                                                              provides application services, though examples from service mesh offerings, such as Istio, are
                                                                                              used to link them to real-world application artifacts (e.g., containers, policy enforcement
                                                                                              modules, etc.).

                                                                                              A slightly more detailed description of the code types (referred to in the executive summary) in
                                                                                              the entire application environment presented by the reference platform is given below. Please
                                                                                              note that these code types include those that support implementation of DevSecOps primitives.

                                                                                                 1. Application code – embodies the application logic for carrying out one or more business
                                                                                                    functions) and is made up of code describing the business transactions and database
                                                                                                    access
                                                                                                 2. Application services code (e.g., service mesh code) – provides various services for the
                                                                                                    application, such as service discovery, establishing network routes, network resiliency
                                                                                                    services (e.g., load balancing, retries), and security services (e.g., enforcing
                                                                                                    authentication, authorization etc. based on policies (item 4 below))
                                                                                                 3. Infrastructure as code – expresses the computing, networking, and storage resources
                                                                                                    needed to run the application in the form of a declarative code
                                                                                                 4. Policy as code – contains declarative code for generating the rules and configuration
                                                                                                    parameters for realizing security objectives, such as zero trust through security controls
                                                                                                    (e.g., authentication, authorization) during runtime
                                                                                                 5. Observability as code – triggers software related to logging (recording all transactions)
                                                                                                    and tracing (communication pathways involved in executing application requests) and
                                                                                                    monitors (keeping track of application states during runtime)
                                                                                              Code types 3, 4, and 5 may have overlap with code type 2.

                                                                                                                                               2
