                                                                                               NIST SP 800-183                                                                                            NETWORKS OF ‘THINGS’



                                                                                                                   Geographic               Physical (possibly
                                                                                                                                                                             N/A                 Y             Y
                                                                                                                    location                   unknown)

                                                                                                                                            Physical (possibly
                                                                                                                      Owner                                                    ?               N/A             ?
                                                                                                                                               unknown)

                                                                                                                                            Virtual or Physical
                                                                                                                  Environment                                                N/A                 Y             Y
                                                                                                                                           (possibly unknown)

                                                                                                                       Cost                  Partially known                 N/A                 ?             ?
This publication is available free of charge from: http://dx.doi.org/10.6028/NIST.SP.800-183




                                                                                                                   Device_ID                       Virtual                    Y                  Y             Y

                                                                                                                    Snapshot              Natural phenomenon                 N/A                 Y             ?


                                                                                                           Such questions demonstrate the difficulty assuring and assessing NoT trustworthiness.
                                                                                                           We offer the following statement about NoT trustworthiness:

                                                                                                           Trust in some NoT A, at some snapshot X, is a function of NoT A’s assets ϵ {sensors (s),
                                                                                                           aggregator(s), communication channel(s), eUtility(s), decision trigger(s)} with respect to
                                                                                                           the members ϵ {geographic location, owner, environment, cost, Device_IDs, snapshot}
                                                                                                           when applicable.

                                                                                               4.          NoT Testability

                                                                                                           A testability 7 metric that applies here is titled the Domain Range Ratio [Voas 1993]. This
                                                                                                           ratio is simply the cardinality of the set of all possible test cases to the cardinality of the
                                                                                                           set of all possible outputs.

                                                                                                           To understand this metric, consider a NoT’s decision trigger that forces an actuator to be
                                                                                                           in one of two states: (‘1’) or (‘0’). (This situation occurs in Figures 3 and 4.) Further,
                                                                                                           assume that each output state occurs 50 % of the time. Because of this minimal output
                                                                                                           space size, a fair coin toss also has a 50-50 chance of providing a correct output for any
                                                                                                           given input, and that’s likely less expensive than building a complex NoT. Worse,
                                                                                                           consider the scenario where ‘1’ and ‘0’ are not evenly distributed, e.g., the specification
                                                                                                           states that for 1 million unique test cases only 10 should produce a ‘1’ and the other 999
                                                                                                           990 should produce a ‘0’. Here, you could build a NoT to compute this function or you
                                                                                                           could write a piece of code that simply says: for all inputs output (‘0’).
                                                                                                           This incorrect software implementation is still 99.999 % reliable, and you’ll almost
                                                                                                           certainly not discover the code defect with a handful of random tests sampled from the
                                                                                                           1M. In short, testing here has a minimal probability of detecting the faulty logic because




                                                                                               7
                                                                                                   Testability here refers to the likelihood that defects can be discovered during testing [Voas 1995].


                                                                                                                                                                  19
