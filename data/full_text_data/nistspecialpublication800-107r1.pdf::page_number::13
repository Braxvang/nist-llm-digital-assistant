The truncated message digest of λ bits provides an expected preimage resistance of λ bits,
not L bits, regardless of the hash function used.
The expected second preimage resistance strength of a message digest truncated to λ bits
sometimes depends on the length of the message. This dependence is determined as
specified in Appendix A. Note that there are situations for which the expected second
preimage resistance strength does not depend on the message length. For example, a 130-
bit truncated message digest generated using SHA-256 has an expected second preimage
strength of 130 bits, rather than a value in the range specified in Table 1 above for SHA-
256.
Truncating the message digest can have other impacts, as well. For example, applications
that use a truncated message digest risk attacks based on confusion between different
parties about the specific amount of truncation used, as well as the specific hash function
that was used to produce the truncated message digest. Any application using a truncated
message digest is responsible for ensuring that the truncation amount and the hash
function used are known to all parties, with no chance of ambiguity.


5.2    Digital Signatures
A hash function is used to map a message of any eligible length (see FIPS 180-4) to a
fixed-length message digest. In a digital signature generation process, this message digest
is then signed by a signing operation, such as an RSA private key operation, to produce a
digital signature. The resulting digital signature is used to verify who signed the message
and whether or not the message was altered (either deliberately or accidentally) after it
was signed.
When two different messages have the same message digest (i.e., a collision is found),
then a digital signature of one message could be used as a digital signature for the other
message. If this happens, then a verified digital signature does not guarantee the
authenticity of the signed message, because either one of the two messages could be
considered valid. Therefore, a hash function used for digital signatures requires collision
resistance. The approved hash functions are considered to provide the collision resistance
strengths as specified in Table 1 of Section 4.2.
For digital signature applications, the security strength of a hash function without any
preprocessing is generally its collision resistance strength. When appropriate processing
is applied to the data before the hash value is computed, the security strength may be
more than the collision resistance strength (see Section 5.2.3).
Without any preprocessing of the message input to the hash function, the security
strength of any digital signature that is generated using an algorithm specified in FIPS
186-3 is the minimum of the collision resistance strength of the hash algorithm and the
security strength provided by the signing algorithm. More information on security
strengths can be found in SP 800-57, Part 1. For instance, if a digital signature that is
generated by one of the approved digital signature algorithms with SHA-1 as the hash




                                            10
