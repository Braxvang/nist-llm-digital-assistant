                                NIST Special Publication 800-38D

                                   ⎧ Zi                if x i = 0;
                           Z i+1 = ⎨
                                   ⎩ Z i ⊕ Vi          if x i = 1.
                                   ⎧ Vi >> 1            if LSB1 (Vi ) = 0;
                           Vi+1 = ⎨
                                   ⎩(Vi >> 1 ) ⊕ R      if LSB1 (Vi ) = 1.
       4.      Return Z128.

The • operation on (pairs of) the 2128 possible blocks corresponds to the multiplication operation
for the binary Galois (finite) field of 2128 elements. The fixed block, R, determines a
representation of this field as the modular multiplication of binary polynomials of degree less
than 128. The convention for interpreting strings as polynomials is “little endian”: i.e., if u is
the variable of the polynomial, then the block x0x1...x127 corresponds to the polynomial x0 + x1 u +
x2 u2 + ... + x127 u127. The XOR operation is used to add coefficients of “like” terms during the
multiplication. The reduction modulus is the polynomial of degree 128 that corresponds to R || 1.
Ref. [6] discusses this field in detail.

For a positive integer i, the ith power of a block X with this multiplication operation is denoted
Xi. For example, H2=H•H, H3=H•H•H, etc.

6.4   GHASH Function

Algorithm 2 below specifies the GHASH function:

       Algorithm 2: GHASHH (X)

       Prerequisites:
       block H, the hash subkey.

       Input:
       bit string X such that len(X) = 128m for some positive integer m.

       Output:
       block GHASHH (X).

       Steps:
       1. Let X1, X 2, ... , X m-1, X m denote the unique sequence of blocks such that X = X 1 || X 2 ||
           ... || X m-1 || X m.
       2. Let Y0 be the “zero block,” 0128.
       3. For i = 1, ..., m, let Yi = (Yi-1 ⊕ Xi) • H.
       4. Return Ym.

In effect, the GHASH function calculates X1•Hm ⊕ X2•Hm-1 ⊕ ... ⊕ Xm-1•H2 ⊕ Xm•H. Ref. [6]
describes methods for optimizing implementations of GHASH in both hardware and software.

The GHASH function is illustrated in Figure 1 below, without the zero block, Y0, whose
exclusive-OR with X1 does not change X1.




                                                  12
