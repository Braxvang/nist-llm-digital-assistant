                                                                              GUIDE TO SECURE WEB SERVICES



Requester: The entity (person or organization) that wishes to make use of a provider’s Web service. It
will use a requester agent to exchange messages with the provider’s provider agent. “Requester” is also
used as a shorthand to refer to the requester agent acting on the requester’s behalf. [22]

Risk-Adaptive Access Control (RAdAC): In RAdAC, access privileges are granted based on a
combination of a user’s identity, mission need, and the level of security risk that exists between the
system being accessed and a user. RAdAC will use security metrics, such as the strength of the
authentication method, the level of assurance of the session connection between the system and a user,
and the physical location of a user, to make its risk determination. [23]

Role Based Access Control (RBAC): A model for controlling access to resources where permitted
actions on resources are identified with roles rather than with individual subject identities. [24]

Sandbox: A system that allows an untrusted application to run in a highly controlled environment where
the application’s permissions are restricted to an essential set of computer permissions. In particular, an
application in a sandbox is usually restricted from accessing the file system or the network. A widely
used example of applications running inside a sandbox is a Java applet. [26]

Secure Sockets Layer (SSL): Provides privacy and reliability between two communicating applications.
It is designed to encapsulate other protocols, such as HTTP. SSL v3.0 was released in 1996. It has been
succeeded by IETF's TLS. [27]

Security Assertions Markup Language (SAML): A framework for exchanging authentication and
authorization information. Security typically involves checking the credentials presented by a party for
authentication and authorization. SAML standardizes the representation of these credentials in an XML
format called assertions, enhancing the interoperability between disparate applications. [25]

Security Fault Injection Test: Involves data perturbation (i.e., alteration of the type of data the
execution environment components pass to the application, or that the application’s components pass to
one another). Fault injection can reveal the effects of security defects on the behavior of the components
themselves and on the application as a whole. [12]

Security-Oriented Code Review: A code review, or audit, investigates the coding practices used in the
application. The main objective of such reviews is to discover security defects and potentially identify
solutions. [12]

Security Service: A processing or communication service that is provided by a system to give a specific
kind of protection to resources, where said resources may reside with said system or reside with other
systems, for example, an authentication service or a PKI-based document attribution and authentication
service. A security service is a superset of AAA services. Security services typically implement portions
of security policies and are implemented via security mechanisms. [1]

Service: A software component participating in a service-oriented architecture that provides functionality
or participates in realizing one or more capabilities. [14]

Service Composition: Aggregation of multiple small services into larger services. [14]

Service Description: A set of documents that describe the interface to and semantics of a service. [1]




                                                    C-4
