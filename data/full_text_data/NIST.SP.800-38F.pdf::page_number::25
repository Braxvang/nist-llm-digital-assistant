                                  NIST Special Publication 800-38F


inverse of the designated cipher function, CIPH-1K.

Input:
a semiblock string, C, with length, n, for an integer n ≥ 3.

Steps:
    1. Initialize the variables.
           a) Let s = 6(n-1).
           b) Let C1, C2 , … , Cn be the semiblocks such that C = C1 || C2 || … || Cn.
           c) Set As = C1.
           d) For i = 2, …, n: Ris = Ci.
    2. Calculate the intermediate values. For t = s, s-1, …, 1, update the variables as follows:
           a) At-1 = MSB32(CIPH-1K((At ⊕ [t]32) || Rnt));
           b) R2t-1 = LSB32(CIPH-1K((At ⊕ [t]32) || Rnt));
           c) For i = 2, …, n-1: Ri+1t-1 = Rit.
    3. Output the results:
           a) Let S1 = A0.
           b) For i = 2, ..., n: Si = Ri0.
           c) Return S1 || S2 || … || Sn.

7.2   TKW
Algorithm 9 specifies the authenticated-encryption function for TKW for a given TDEA key.
The wrapping function, TW, specified in Algorithm 7 above, is invoked in Step 3 with the same
key as a prerequisite.

Algorithm 9: TKW-AE(P)

Prerequisites:
KEK, K, for TDEA;
designated cipher function, CIPHK;
definition of valid plaintext lengths.

Input:
plaintext P, with valid length.

Output:
ciphertext C.

Steps:
    1. Let ICV3 = 0xA6A6A6A6.
    2. Let S = ICV3 || P.
    3. Return C = TW(S).

Algorithm 10 specifies the authenticated-decryption function for TKW for a given TDEA key.
The unwrapping function, TW-1, specified in Algorithm 8 above, is invoked in Step 4 with the
same key as a prerequisite.



                                                 17
