                                                                                              NIST SP 800-40r4                                    GUIDE TO ENTERPRISE PATCH MANAGEMENT PLANNING:
                                                                                                                                                           PREVENTIVE MAINTENANCE FOR TECHNOLOGY

                                                                                              2         Risk Response Approaches for Software Vulnerabilities

                                                                                              This section outlines possible risk response approaches for software vulnerabilities, provides an
                                                                                              overview of the software vulnerability management life cycle, and takes a closer look at parts of
                                                                                              that life cycle with respect to patching.

                                                                                              2.1       Risk Responses

                                                                                              Patching is one of several ways to respond to risks from software vulnerabilities. This
                                                                                              publication references four types of risk responses [2]:
                                                                                                    1. Accept: Accept the risk from vulnerable software as is, such as by relying on existing
                                                                                                       security controls to prevent vulnerability exploitation or by determining that the potential
This publication is available free of charge from: https://doi.org/10.6028/NIST.SP.800-40r4




                                                                                                       impact is low enough that no additional action is needed.
                                                                                                    2. Mitigate: Reduce the risk by eliminating the vulnerabilities (e.g., patching the vulnerable
                                                                                                       software, disabling a vulnerable feature, or upgrading to a newer software version
                                                                                                       without the vulnerabilities) and/or deploying additional security controls to reduce
                                                                                                       vulnerability exploitation (e.g., using firewalls and network segmentation to isolate
                                                                                                       vulnerable assets, thus reducing the attack surface).
                                                                                                    3. Transfer: Reduce the risk by sharing some of the consequences with another party, such
                                                                                                       as by purchasing cybersecurity insurance or by replacing conventional software
                                                                                                       installations with software-as-a-service (SaaS) usage where the SaaS vendor/managed
                                                                                                       service provider takes care of patching.
                                                                                                    4. Avoid: Ensure that the risk does not occur by eliminating the attack surface, such as by
                                                                                                       uninstalling the vulnerable software, decommissioning assets with the vulnerabilities, or
                                                                                                       disabling computing capabilities in assets that can function without them.

                                                                                              By default, an organization accepts the risk posed by using its software. Software could have
                                                                                              vulnerabilities in it at any time that the organization does not know about, and sometimes
                                                                                              previously unknown vulnerabilities are exploited – a zero-day attack. Once a new vulnerability
                                                                                              becomes publicly known, risk usually increases because attackers are more likely to develop
                                                                                              exploits that target the vulnerable software.

                                                                                              Installing a patch or update or upgrading software to a newer version without the vulnerabilities
                                                                                              are the only forms of risk response that can completely eliminate the vulnerabilities without
                                                                                              removing functionality. However, immediately patching, updating, or upgrading vulnerable
                                                                                              software is sometimes not viable. Examples of why include the following:
                                                                                                    •    A patch may not be available yet. For example, a vulnerability may be announced before
                                                                                                         a patch is ready, and it could be days, weeks, or months before the patch is released.
                                                                                                    •    The vendor may no longer support the vulnerable software, meaning that a patch for it
                                                                                                         will never be released because the software is at end-of-life.
                                                                                                    •    The organization may need to wait for a scheduled outage window, perform testing first,
                                                                                                         update other software that interacts with the software to be patched, or train employees
                                                                                                         on new features or interfaces.


                                                                                                                                                 3
