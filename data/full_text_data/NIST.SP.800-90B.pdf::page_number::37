                                                                                             NIST SP 800-90B                                             RECOMMENDATION FOR THE ENTROPY SOURCES
                                                                                                                                                                 USED FOR RANDOM BIT GENERATION

                                                                                             5      Testing the IID Assumption

                                                                                             The samples from a noise source are independent and identically distributed (IID) if each sample
                                                                                             has the same probability distribution as every other sample, and all samples are mutually
                                                                                             independent. The IID assumption significantly simplifies the process of entropy estimation. When
                                                                                             the IID assumption does not hold, i.e., the samples are either not identically distributed or are not
                                                                                             independently distributed (or both), estimating entropy is more difficult and requires different
                                                                                             methods.

                                                                                             This section includes statistical tests that are designed to find evidence that the samples are not IID
                                                                                             and if no evidence is found that the samples are non-IID, then it is assumed that the samples are
                                                                                             IID (see Section 3.1.2). These tests take the sequence S = (s1,…,sL), where si ϵ A = {x1,…,xk}, as
This publication is available free of charge from: https://doi.org/10.6028/NIST.SP.800-90B




                                                                                             input, and test the hypothesis that the values in S are IID. If the hypothesis is rejected by any of
                                                                                             the tests, the values in S are assumed to be non-IID.

                                                                                             Statistical tests based on permutation testing (also known as shuffling tests) are given in Section
                                                                                             5.1. Five additional chi-square tests are presented in Section 5.2.

                                                                                             5.1    Permutation Testing

                                                                                             Permutation testing is a way to test a statistical hypothesis in which the actual value of the test
                                                                                             statistic is compared to a reference distribution that is inferred from the input data, rather than a
                                                                                             standard statistical distribution. The general approach of permutation testing is to generate 10 000
                                                                                             permutations of the dataset, computing a test statistic for each permutation and comparing the
                                                                                             result with a test statistic computed on the original dataset; the process is listed in Figure 4. This
                                                                                             is repeated for each of the test statistics described in Sections 5.1.1 – 5.1.11. The shuffle algorithm
                                                                                             of step 2.1 is provided in Figure 5.

                                                                                              Input: S = (s1,…, sL)

                                                                                              Output: Decision on the IID assumption

                                                                                              1. For each test i
                                                                                                   1.1. Assign the counters Ci,0 and Ci,1 to zero.
                                                                                                   1.2. Calculate the test statistic Ti on S.
                                                                                              2. For j = 1 to 10 000
                                                                                                   2.1. Permute S using the Fisher-Yates shuffle algorithm.
                                                                                                   2.2. For each test i
                                                                                                       2.2.1. Calculate the test statistic T on the permuted data.
                                                                                                       2.2.2. If (T > Ti), increment Ci,0. If (T = Ti), increment Ci,1.
                                                                                              3. If ((Ci,0+Ci,1≤5) or (Ci,0 ≥ 9995)) for any i, reject the IID assumption; else, assume that
                                                                                                 the noise source outputs are IID.
                                                                                                                    Figure 4 Generic Structure for Permutation Testing

                                                                                                                                                29
