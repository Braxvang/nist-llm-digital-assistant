                                                                                              NIST SP 800-204C                                              DEVSECOPS FOR A MICROSERVICES-BASED
                                                                                                                                                                   APPLICATION WITH SERVICE MESH

                                                                                                                      Reports on Computer Systems Technology

                                                                                              The Information Technology Laboratory (ITL) at the National Institute of Standards and
                                                                                              Technology (NIST) promotes the U.S. economy and public welfare by providing technical
                                                                                              leadership for the Nation’s measurement and standards infrastructure. ITL develops tests, test
                                                                                              methods, reference data, proof of concept implementations, and technical analyses to advance the
                                                                                              development and productive use of information technology. ITL’s responsibilities include the
                                                                                              development of management, administrative, technical, and physical standards and guidelines for
                                                                                              the cost-effective security and privacy of other than national security-related information in federal
                                                                                              information systems.
This publication is available free of charge from: https://doi.org/10.6028/NIST.SP.800-204C




                                                                                                                                           Abstract

                                                                                              Cloud-native applications have evolved into a standardized architecture consisting of multiple
                                                                                              loosely coupled components called microservices (often typically implemented as containers)
                                                                                              that are supported by an infrastructure for providing application services, such as service mesh.
                                                                                              Both of these components are usually hosted on a container orchestration and resource
                                                                                              management platform. In this architecture, the entire set of source code involved in the
                                                                                              application environment can be divided into five code types: 1) application code (which
                                                                                              embodies the application logic), 2) application services code (for services such as session
                                                                                              establishment, network connection, etc.), 3) infrastructure as code (for provisioning and
                                                                                              configuring computing, networking, and storage resources), 4) policy as code (for defining
                                                                                              runtime policies such as zero trust expressed as a declarative code), 5) and observability as code
                                                                                              (for the continuous monitoring of an application runtime state). Due to security, business
                                                                                              competitiveness, and the inherent structure of loosely coupled application components, this class
                                                                                              of applications needs a different development, deployment, and runtime paradigm. DevSecOps
                                                                                              (consisting of acronyms for Development, Security, and Operations, respectively) has been
                                                                                              found to be a facilitating paradigm for these applications with primitives such as continuous
                                                                                              integration, continuous delivery, and continuous deployment (CI/CD) pipelines. These pipelines
                                                                                              are workflows for taking the developer’s source code through various stages, such as building,
                                                                                              testing, packaging, deployment, and operations supported by automated tools with feedback
                                                                                              mechanisms. The objective of this document is to provide guidance for the implementation of
                                                                                              DevSecOps primitives for cloud-native applications with the architecture and code types
                                                                                              described above. The benefits of this approach for high security assurance and for enabling
                                                                                              continuous authority to operate (C-ATO) are also discussed.


                                                                                                                                          Keywords

                                                                                              container orchestration and resource management platform; DevSecOps; CI/CD pipelines;
                                                                                              infrastructure as code; policy as code; observability as code; GitOps; workflow models; static
                                                                                              AST; dynamic AST; interactive AST; SCA.




                                                                                                                                                ii
