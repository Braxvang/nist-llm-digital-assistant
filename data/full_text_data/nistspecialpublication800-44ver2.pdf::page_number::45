                                                                           GUIDELINES ON SECURING PUBLIC WEB SERVERS



5.2.1    Configuring the Permissions of the Web Server Application

It is vital that the Web server application executes only under a unique individual user and group identity
with very restrictive access controls. 26 New user and group identities should be established for exclusive
use by the Web server software. The new user and new group should be independent from all other users
and groups and unique. This is a prerequisite for implementing the access controls described in the
following steps. During initialization, the server may have to run with root (Unix) or
administrator/system (Windows) privileges to bind to Transmission Control Protocol (TCP) ports
numbered below 1024 (80 and 443 are the default ports for HTTP and HTTPS). Ensure that the Web
server is configured to reduce its privileges to those of the Web server user after performing its
initialization functions.

In addition, use the Web server OS to limit which files can be accessed by the Web server’s service
processes. These processes should have read-only access to those files necessary to perform the service
and should have no access to other files, such as server log files. Use Web server host OS access controls
to enforce the following [Koss00]:

 Service processes are configured to run as a user with a strictly limited set of privileges (i.e., not
  running as root, administrator, or equivalent).

 Web content files can be read but not written by service processes.

 Service processes cannot write to the directories where public Web content is stored.

 Only processes authorized for Web server administration can write Web content files.

 The Web server application can write Web server log files, but log files cannot be read by the Web
  server application. Only root/system/administrative level processes can read Web server log files.

 Temporary files created by the Web server application, such as those that might be generated in the
  creation of dynamic Web pages or by users uploading content, are restricted to a specified and
  appropriately protected subdirectory (if possible).

 Access to any temporary files created by the Web server application is limited to the Web server
  processes that created the files (if possible).

It is also necessary to ensure that the Web server application cannot save (or, in some cases, read) files
outside the specified file structure dedicated to public Web content. This may be a configuration choice
in the server software, or it may be a choice in how the server process is controlled by the OS. Ensure
that such directories and files (outside the specified directory tree) cannot be accessed, even if users
perform direct browsing by accessing the URLs of those files or through directory traversal attacks
against the Web server process.

To mitigate the effects of certain types of DoS attacks, configure the Web server to limit the amount of
OS resources it can consume. Some examples include—




26
     On Unix systems, a Web server is typically assigned to its own unique group. On Windows, specific group settings may
     depend on the Web server installed. For example, the Apache 2.0 user in Windows should be a member of the Users group.
     More information is available at http://httpd.apache.org/docs/2.0/platform/windows.html.


                                                            5-3
