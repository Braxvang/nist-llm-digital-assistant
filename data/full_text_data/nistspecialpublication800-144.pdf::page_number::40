account information about the users of the applications. Access controls are one means
to keep data away from unauthorized users; encryption is another. Access controls are
typically identity-based, which makes authentication of the user’s identity an important
issue in cloud computing. Lacking physical control over the storage of information,
encryption is the only way to ensure that it is truly protected.

Database environments used in cloud computing can vary significantly. For example,
some environments support a multi-instance model, while others support a multi-tenant
model. The former provide a unique database management system running on a virtual
machine instance for each cloud consumer, giving the consumer complete control over
role definition, user authorization, and other administrative tasks related to security. The
latter provide a predefined environment for the cloud consumer that is shared with other
tenants, typically through tagging data with a consumer identifier. Tagging gives the
appearance of exclusive use of the instance, but relies on the cloud provider to establish
and maintain a sound secure database environment.

Various types of multi-tenant arrangements exist for databases. Each arrangement pools
resources differently, offering different degrees of isolation and resource efficiency
[Jac07, Wai08]. Other considerations also apply. For example, certain features, like data
encryption, are more viable with arrangements that use separate rather than shared
databases. These sorts of tradeoffs require careful evaluation of the suitability of the data
management solution for the data involved. Requirements in certain fields or industries,
such as healthcare, would likely influence the choice of database and data organization
used in an application. Privacy sensitive information, in general, is a serious concern
[Pea09].

Data must be secured while at rest, in transit, and in use, and access to the data must be
controlled. Standards for communications protocols and public key certificates allow
data transfers to be protected using cryptography and can usually be implemented with
equal effort in SaaS, PaaS, and IaaS environments [CSA11a, Pro10]. Procedures for
protecting data at rest are not as well standardized, however, making interoperability an
issue due to the predominance of proprietary systems. Capabilities also vary greatly
across service models, and cryptographic protection may not be feasible for some
environments, particularly PaaS and SaaS environments [CSA11a, Pro10]. The lack of
interoperability affects the availability of data and complicates the portability of
applications and data between cloud providers. Protecting data in use is an emerging area
of cryptography with little practical results to offer, leaving trust mechanisms as the main
safeguard [Gre09, Pro10].

The security of a system employing cryptography depends on the proper control of
central keys and key management components [Bar05]. Currently, the responsibility for
cryptographic key management falls mainly on the cloud consumer. Key generation and
storage is usually performed outside the cloud using hardware security modules, which
do not scale well to the cloud paradigm. NIST’s Cryptographic Key Management Project




                                         30
